--- net/minecraft/nbt/TagParser.java
+++ net/minecraft/nbt/TagParser.java
@@ -23,10 +23,16 @@
       return new TranslatableComponent("argument.nbt.array.mixed", new Object[]{var0, var1});
    });
    public static final DynamicCommandExceptionType ERROR_INVALID_ARRAY = new DynamicCommandExceptionType((var0) -> {
       return new TranslatableComponent("argument.nbt.array.invalid", new Object[]{var0});
    });
+   public static final char ELEMENT_SEPARATOR = ',';
+   public static final char NAME_VALUE_SEPARATOR = ':';
+   private static final char LIST_OPEN = '[';
+   private static final char LIST_CLOSE = ']';
+   private static final char STRUCT_CLOSE = '}';
+   private static final char STRUCT_OPEN = '{';
    private static final Pattern DOUBLE_PATTERN_NOSUFFIX = Pattern.compile("[-+]?(?:[0-9]+[.]|[0-9]*[.][0-9]+)(?:e[-+]?[0-9]+)?", 2);
    private static final Pattern DOUBLE_PATTERN = Pattern.compile("[-+]?(?:[0-9]+[.]?|[0-9]*[.][0-9]+)(?:e[-+]?[0-9]+)?d", 2);
    private static final Pattern FLOAT_PATTERN = Pattern.compile("[-+]?(?:[0-9]+[.]?|[0-9]*[.][0-9]+)(?:e[-+]?[0-9]+)?f", 2);
    private static final Pattern BYTE_PATTERN = Pattern.compile("[-+]?(?:0|[1-9][0-9]*)b", 2);
    private static final Pattern LONG_PATTERN = Pattern.compile("[-+]?(?:0|[1-9][0-9]*)l", 2);
