--- net/minecraft/nbt/LongTag.java
+++ net/minecraft/nbt/LongTag.java
@@ -1,13 +1,10 @@
 package net.minecraft.nbt;
 
 import java.io.DataInput;
 import java.io.DataOutput;
 import java.io.IOException;
-import net.minecraft.network.chat.Component;
-import net.minecraft.network.chat.MutableComponent;
-import net.minecraft.network.chat.TextComponent;
 
 public class LongTag extends NumericTag {
    public static final TagType<LongTag> TYPE = new TagType<LongTag>() {
       public LongTag load(DataInput var1, int var2, NbtAccounter var3) throws IOException {
          var3.accountBits(128L);
@@ -31,11 +28,11 @@
    private LongTag(long var1) {
       this.data = var1;
    }
 
    public static LongTag valueOf(long var0) {
-      return var0 >= -128L && var0 <= 1024L ? LongTag.Cache.cache[(int)var0 + 128] : new LongTag(var0);
+      return var0 >= -128L && var0 <= 1024L ? LongTag.Cache.cache[(int)var0 - -128] : new LongTag(var0);
    }
 
    public void write(DataOutput var1) throws IOException {
       var1.writeLong(this.data);
    }
@@ -46,14 +43,10 @@
 
    public TagType<LongTag> getType() {
       return TYPE;
    }
 
-   public String toString() {
-      return this.data + "L";
-   }
-
    public LongTag copy() {
       return this;
    }
 
    public boolean equals(Object var1) {
@@ -66,13 +59,12 @@
 
    public int hashCode() {
       return (int)(this.data ^ this.data >>> 32);
    }
 
-   public Component getPrettyDisplay(String var1, int var2) {
-      MutableComponent var3 = (new TextComponent("L")).withStyle(SYNTAX_HIGHLIGHTING_NUMBER_TYPE);
-      return (new TextComponent(String.valueOf(this.data))).append(var3).withStyle(SYNTAX_HIGHLIGHTING_NUMBER);
+   public void accept(TagVisitor var1) {
+      var1.visitLong(this);
    }
 
    public long getAsLong() {
       return this.data;
    }
