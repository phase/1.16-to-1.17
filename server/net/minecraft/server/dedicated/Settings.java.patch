--- net/minecraft/server/dedicated/Settings.java
+++ net/minecraft/server/dedicated/Settings.java
@@ -28,64 +28,58 @@
    public static Properties loadFromFile(Path var0) {
       Properties var1 = new Properties();
 
       try {
          InputStream var2 = Files.newInputStream(var0);
-         Throwable var3 = null;
 
          try {
             var1.load(var2);
-         } catch (Throwable var13) {
-            var3 = var13;
-            throw var13;
-         } finally {
+         } catch (Throwable var6) {
             if (var2 != null) {
-               if (var3 != null) {
-                  try {
-                     var2.close();
-                  } catch (Throwable var12) {
-                     var3.addSuppressed(var12);
-                  }
-               } else {
+               try {
                   var2.close();
+               } catch (Throwable var5) {
+                  var6.addSuppressed(var5);
                }
             }
 
+            throw var6;
          }
-      } catch (IOException var15) {
-         LOGGER.error("Failed to load properties from file: " + var0);
+
+         if (var2 != null) {
+            var2.close();
+         }
+      } catch (IOException var7) {
+         LOGGER.error((String)"Failed to load properties from file: {}", (Object)var0);
       }
 
       return var1;
    }
 
    public void store(Path var1) {
       try {
          OutputStream var2 = Files.newOutputStream(var1);
-         Throwable var3 = null;
 
          try {
             this.properties.store(var2, "Minecraft server properties");
-         } catch (Throwable var13) {
-            var3 = var13;
-            throw var13;
-         } finally {
+         } catch (Throwable var6) {
             if (var2 != null) {
-               if (var3 != null) {
-                  try {
-                     var2.close();
-                  } catch (Throwable var12) {
-                     var3.addSuppressed(var12);
-                  }
-               } else {
+               try {
                   var2.close();
+               } catch (Throwable var5) {
+                  var6.addSuppressed(var5);
                }
             }
 
+            throw var6;
          }
-      } catch (IOException var15) {
-         LOGGER.error("Failed to store properties to file: " + var1);
+
+         if (var2 != null) {
+            var2.close();
+         }
+      } catch (IOException var7) {
+         LOGGER.error((String)"Failed to store properties to file: {}", (Object)var1);
       }
 
    }
 
    private static <V extends Number> Function<String, V> wrapNumberDeserializer(Function<String, V> var0) {
@@ -202,11 +196,11 @@
    public class MutableValue<V> implements Supplier<V> {
       private final String key;
       private final V value;
       private final Function<V, String> serializer;
 
-      private MutableValue(String var2, V var3, Function<V, String> var4) {
+      MutableValue(String var2, V var3, Function<V, String> var4) {
          this.key = var2;
          this.value = var3;
          this.serializer = var4;
       }
 
