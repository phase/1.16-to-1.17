--- net/minecraft/server/commands/BossBarCommands.java
+++ net/minecraft/server/commands/BossBarCommands.java
@@ -47,10 +47,13 @@
    private static final SimpleCommandExceptionType ERROR_ALREADY_VISIBLE = new SimpleCommandExceptionType(new TranslatableComponent("commands.bossbar.set.visibility.unchanged.visible"));
    public static final SuggestionProvider<CommandSourceStack> SUGGEST_BOSS_BAR = (var0, var1) -> {
       return SharedSuggestionProvider.suggestResource((Iterable)((CommandSourceStack)var0.getSource()).getServer().getCustomBossEvents().getIds(), var1);
    };
 
+   public BossBarCommands() {
+   }
+
    public static void register(CommandDispatcher<CommandSourceStack> var0) {
       var0.register((LiteralArgumentBuilder)((LiteralArgumentBuilder)((LiteralArgumentBuilder)((LiteralArgumentBuilder)((LiteralArgumentBuilder)((LiteralArgumentBuilder)Commands.literal("bossbar").requires((var0x) -> {
          return var0x.hasPermission(2);
       })).then(Commands.literal("add").then(Commands.argument("id", ResourceLocationArgument.id()).then(Commands.argument("name", ComponentArgument.textComponent()).executes((var0x) -> {
          return createBar((CommandSourceStack)var0x.getSource(), ResourceLocationArgument.getId(var0x, "id"), ComponentArgument.getComponent(var0x, "name"));
@@ -193,11 +196,11 @@
          return 0;
       }
    }
 
    private static int setName(CommandSourceStack var0, CustomBossEvent var1, Component var2) throws CommandSyntaxException {
-      MutableComponent var3 = ComponentUtils.updateForEntity(var0, var2, (Entity)null, 0);
+      MutableComponent var3 = ComponentUtils.updateForEntity(var0, (Component)var2, (Entity)null, 0);
       if (var1.getName().equals(var3)) {
          throw ERROR_NO_NAME_CHANGE.create();
       } else {
          var1.setName(var3);
          var0.sendSuccess(new TranslatableComponent("commands.bossbar.set.name.success", new Object[]{var1.getDisplayName()}), true);
@@ -234,11 +237,11 @@
    private static int createBar(CommandSourceStack var0, ResourceLocation var1, Component var2) throws CommandSyntaxException {
       CustomBossEvents var3 = var0.getServer().getCustomBossEvents();
       if (var3.get(var1) != null) {
          throw ERROR_ALREADY_EXISTS.create(var1.toString());
       } else {
-         CustomBossEvent var4 = var3.create(var1, ComponentUtils.updateForEntity(var0, var2, (Entity)null, 0));
+         CustomBossEvent var4 = var3.create(var1, ComponentUtils.updateForEntity(var0, (Component)var2, (Entity)null, 0));
          var0.sendSuccess(new TranslatableComponent("commands.bossbar.create.success", new Object[]{var4.getDisplayName()}), true);
          return var3.getEvents().size();
       }
    }
 
