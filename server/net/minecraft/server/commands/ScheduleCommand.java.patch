--- net/minecraft/server/commands/ScheduleCommand.java
+++ net/minecraft/server/commands/ScheduleCommand.java
@@ -31,10 +31,13 @@
    });
    private static final SuggestionProvider<CommandSourceStack> SUGGEST_SCHEDULE = (var0, var1) -> {
       return SharedSuggestionProvider.suggest((Iterable)((CommandSourceStack)var0.getSource()).getServer().getWorldData().overworldData().getScheduledEvents().getEventsIds(), var1);
    };
 
+   public ScheduleCommand() {
+   }
+
    public static void register(CommandDispatcher<CommandSourceStack> var0) {
       var0.register((LiteralArgumentBuilder)((LiteralArgumentBuilder)((LiteralArgumentBuilder)Commands.literal("schedule").requires((var0x) -> {
          return var0x.hasPermission(2);
       })).then(Commands.literal("function").then(Commands.argument("function", FunctionArgument.functions()).suggests(FunctionCommand.SUGGEST_FUNCTION).then(((RequiredArgumentBuilder)((RequiredArgumentBuilder)Commands.argument("time", TimeArgument.time()).executes((var0x) -> {
          return schedule((CommandSourceStack)var0x.getSource(), FunctionArgument.getFunctionOrTag(var0x, "function"), IntegerArgumentType.getInteger(var0x, "time"), true);
@@ -61,11 +64,11 @@
             }
 
             var7.schedule(var8, var4, new FunctionCallback(var6));
             var0.sendSuccess(new TranslatableComponent("commands.schedule.created.function", new Object[]{var6, var2, var4}), true);
          }).ifRight((var7x) -> {
-            String var8 = "#" + var6.toString();
+            String var8 = "#" + var6;
             if (var3) {
                var7.remove(var8);
             }
 
             var7.schedule(var8, var4, new FunctionTagCallback(var6));
