--- net/minecraft/server/commands/data/DataCommands.java
+++ net/minecraft/server/commands/data/DataCommands.java
@@ -15,10 +15,11 @@
 import java.util.Collections;
 import java.util.Iterator;
 import java.util.List;
 import java.util.function.BiConsumer;
 import java.util.function.Function;
+import java.util.function.Supplier;
 import net.minecraft.commands.CommandSourceStack;
 import net.minecraft.commands.Commands;
 import net.minecraft.commands.arguments.CompoundTagArgument;
 import net.minecraft.commands.arguments.NbtPathArgument;
 import net.minecraft.commands.arguments.NbtTagArgument;
@@ -51,10 +52,13 @@
    });
    public static final List<Function<String, DataCommands.DataProvider>> ALL_PROVIDERS;
    public static final List<DataCommands.DataProvider> TARGET_PROVIDERS;
    public static final List<DataCommands.DataProvider> SOURCE_PROVIDERS;
 
+   public DataCommands() {
+   }
+
    public static void register(CommandDispatcher<CommandSourceStack> var0) {
       LiteralArgumentBuilder var1 = (LiteralArgumentBuilder)Commands.literal("data").requires((var0x) -> {
          return var0x.hasPermission(2);
       });
       Iterator var2 = TARGET_PROVIDERS.iterator();
@@ -86,11 +90,11 @@
             }))).then(Commands.literal("append").then(var1x.create((var0, var1, var2, var3) -> {
                return insertAtIndex(-1, var1, var2, var3);
             }))).then(Commands.literal("set").then(var1x.create((var0, var1, var2, var3) -> {
                Tag var10002 = (Tag)Iterables.getLast(var3);
                var10002.getClass();
-               return var2.set(var1, var10002::copy);
+               return var2.set(var1, (Supplier)(var10002::copy));
             }))).then(Commands.literal("merge").then(var1x.create((var0, var1, var2, var3) -> {
                List var4 = var2.getOrCreate(var1, CompoundTag::new);
                int var5 = 0;
 
                CompoundTag var8;
