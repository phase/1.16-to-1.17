--- net/minecraft/server/commands/LootCommand.java
+++ net/minecraft/server/commands/LootCommand.java
@@ -32,10 +32,11 @@
 import net.minecraft.world.Container;
 import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EquipmentSlot;
 import net.minecraft.world.entity.LivingEntity;
+import net.minecraft.world.entity.SlotAccess;
 import net.minecraft.world.entity.item.ItemEntity;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.level.block.entity.BlockEntity;
 import net.minecraft.world.level.block.state.BlockState;
@@ -105,11 +106,11 @@
    }
 
    private static Container getContainer(CommandSourceStack var0, BlockPos var1) throws CommandSyntaxException {
       BlockEntity var2 = var0.getLevel().getBlockEntity(var1);
       if (!(var2 instanceof Container)) {
-         throw ReplaceItemCommand.ERROR_NOT_A_CONTAINER.create();
+         throw ItemCommands.ERROR_TARGET_NOT_A_CONTAINER.create(var1.getX(), var1.getY(), var1.getZ());
       } else {
          return (Container)var2;
       }
    }
 
@@ -171,16 +172,16 @@
          }
 
          var5.accept(var8);
          return var8.size();
       } else {
-         throw ReplaceItemCommand.ERROR_INAPPLICABLE_SLOT.create(var2);
+         throw ItemCommands.ERROR_TARGET_INAPPLICABLE_SLOT.create(var2);
       }
    }
 
    private static boolean canMergeItems(ItemStack var0, ItemStack var1) {
-      return var0.getItem() == var1.getItem() && var0.getDamageValue() == var1.getDamageValue() && var0.getCount() <= var0.getMaxStackSize() && Objects.equals(var0.getTag(), var1.getTag());
+      return var0.is(var1.getItem()) && var0.getDamageValue() == var1.getDamageValue() && var0.getCount() <= var0.getMaxStackSize() && Objects.equals(var0.getTag(), var1.getTag());
    }
 
    private static int playerGive(Collection<ServerPlayer> var0, List<ItemStack> var1, LootCommand.Callback var2) throws CommandSyntaxException {
       ArrayList var3 = Lists.newArrayListWithCapacity(var1.size());
       Iterator var4 = var1.iterator();
@@ -189,11 +190,11 @@
          ItemStack var5 = (ItemStack)var4.next();
          Iterator var6 = var0.iterator();
 
          while(var6.hasNext()) {
             ServerPlayer var7 = (ServerPlayer)var6.next();
-            if (var7.inventory.add(var5.copy())) {
+            if (var7.getInventory().add(var5.copy())) {
                var3.add(var5);
             }
          }
       }
 
@@ -202,11 +203,12 @@
    }
 
    private static void setSlots(Entity var0, List<ItemStack> var1, int var2, int var3, List<ItemStack> var4) {
       for(int var5 = 0; var5 < var3; ++var5) {
          ItemStack var6 = var5 < var1.size() ? (ItemStack)var1.get(var5) : ItemStack.EMPTY;
-         if (var0.setSlot(var2 + var5, var6.copy())) {
+         SlotAccess var7 = var0.getSlot(var2 + var5);
+         if (var7 != SlotAccess.NULL && var7.set(var6.copy())) {
             var4.add(var6);
          }
       }
 
    }
