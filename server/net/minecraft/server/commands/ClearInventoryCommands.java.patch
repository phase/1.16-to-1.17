--- net/minecraft/server/commands/ClearInventoryCommands.java
+++ net/minecraft/server/commands/ClearInventoryCommands.java
@@ -24,10 +24,13 @@
    });
    private static final DynamicCommandExceptionType ERROR_MULTIPLE = new DynamicCommandExceptionType((var0) -> {
       return new TranslatableComponent("clear.failed.multiple", new Object[]{var0});
    });
 
+   public ClearInventoryCommands() {
+   }
+
    public static void register(CommandDispatcher<CommandSourceStack> var0) {
       var0.register((LiteralArgumentBuilder)((LiteralArgumentBuilder)((LiteralArgumentBuilder)Commands.literal("clear").requires((var0x) -> {
          return var0x.hasPermission(2);
       })).executes((var0x) -> {
          return clearInventory((CommandSourceStack)var0x.getSource(), Collections.singleton(((CommandSourceStack)var0x.getSource()).getPlayerOrException()), (var0) -> {
@@ -48,14 +51,13 @@
       int var4 = 0;
       Iterator var5 = var1.iterator();
 
       while(var5.hasNext()) {
          ServerPlayer var6 = (ServerPlayer)var5.next();
-         var4 += var6.inventory.clearOrCountMatchingItems(var2, var3, var6.inventoryMenu.getCraftSlots());
+         var4 += var6.getInventory().clearOrCountMatchingItems(var2, var3, var6.inventoryMenu.getCraftSlots());
          var6.containerMenu.broadcastChanges();
-         var6.inventoryMenu.slotsChanged(var6.inventory);
-         var6.broadcastCarriedItem();
+         var6.inventoryMenu.slotsChanged(var6.getInventory());
       }
 
       if (var4 == 0) {
          if (var1.size() == 1) {
             throw ERROR_SINGLE.create(((ServerPlayer)var1.iterator().next()).getName());
