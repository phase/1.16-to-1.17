--- net/minecraft/server/commands/FillCommand.java
+++ net/minecraft/server/commands/FillCommand.java
@@ -38,25 +38,25 @@
 
    public static void register(CommandDispatcher<CommandSourceStack> var0) {
       var0.register((LiteralArgumentBuilder)((LiteralArgumentBuilder)Commands.literal("fill").requires((var0x) -> {
          return var0x.hasPermission(2);
       })).then(Commands.argument("from", BlockPosArgument.blockPos()).then(Commands.argument("to", BlockPosArgument.blockPos()).then(((RequiredArgumentBuilder)((RequiredArgumentBuilder)((RequiredArgumentBuilder)((RequiredArgumentBuilder)((RequiredArgumentBuilder)Commands.argument("block", BlockStateArgument.block()).executes((var0x) -> {
-         return fillBlocks((CommandSourceStack)var0x.getSource(), new BoundingBox(BlockPosArgument.getLoadedBlockPos(var0x, "from"), BlockPosArgument.getLoadedBlockPos(var0x, "to")), BlockStateArgument.getBlock(var0x, "block"), FillCommand.Mode.REPLACE, (Predicate)null);
+         return fillBlocks((CommandSourceStack)var0x.getSource(), BoundingBox.createProper(BlockPosArgument.getLoadedBlockPos(var0x, "from"), BlockPosArgument.getLoadedBlockPos(var0x, "to")), BlockStateArgument.getBlock(var0x, "block"), FillCommand.Mode.REPLACE, (Predicate)null);
       })).then(((LiteralArgumentBuilder)Commands.literal("replace").executes((var0x) -> {
-         return fillBlocks((CommandSourceStack)var0x.getSource(), new BoundingBox(BlockPosArgument.getLoadedBlockPos(var0x, "from"), BlockPosArgument.getLoadedBlockPos(var0x, "to")), BlockStateArgument.getBlock(var0x, "block"), FillCommand.Mode.REPLACE, (Predicate)null);
+         return fillBlocks((CommandSourceStack)var0x.getSource(), BoundingBox.createProper(BlockPosArgument.getLoadedBlockPos(var0x, "from"), BlockPosArgument.getLoadedBlockPos(var0x, "to")), BlockStateArgument.getBlock(var0x, "block"), FillCommand.Mode.REPLACE, (Predicate)null);
       })).then(Commands.argument("filter", BlockPredicateArgument.blockPredicate()).executes((var0x) -> {
-         return fillBlocks((CommandSourceStack)var0x.getSource(), new BoundingBox(BlockPosArgument.getLoadedBlockPos(var0x, "from"), BlockPosArgument.getLoadedBlockPos(var0x, "to")), BlockStateArgument.getBlock(var0x, "block"), FillCommand.Mode.REPLACE, BlockPredicateArgument.getBlockPredicate(var0x, "filter"));
+         return fillBlocks((CommandSourceStack)var0x.getSource(), BoundingBox.createProper(BlockPosArgument.getLoadedBlockPos(var0x, "from"), BlockPosArgument.getLoadedBlockPos(var0x, "to")), BlockStateArgument.getBlock(var0x, "block"), FillCommand.Mode.REPLACE, BlockPredicateArgument.getBlockPredicate(var0x, "filter"));
       })))).then(Commands.literal("keep").executes((var0x) -> {
-         return fillBlocks((CommandSourceStack)var0x.getSource(), new BoundingBox(BlockPosArgument.getLoadedBlockPos(var0x, "from"), BlockPosArgument.getLoadedBlockPos(var0x, "to")), BlockStateArgument.getBlock(var0x, "block"), FillCommand.Mode.REPLACE, (var0) -> {
+         return fillBlocks((CommandSourceStack)var0x.getSource(), BoundingBox.createProper(BlockPosArgument.getLoadedBlockPos(var0x, "from"), BlockPosArgument.getLoadedBlockPos(var0x, "to")), BlockStateArgument.getBlock(var0x, "block"), FillCommand.Mode.REPLACE, (var0) -> {
             return var0.getLevel().isEmptyBlock(var0.getPos());
          });
       }))).then(Commands.literal("outline").executes((var0x) -> {
-         return fillBlocks((CommandSourceStack)var0x.getSource(), new BoundingBox(BlockPosArgument.getLoadedBlockPos(var0x, "from"), BlockPosArgument.getLoadedBlockPos(var0x, "to")), BlockStateArgument.getBlock(var0x, "block"), FillCommand.Mode.OUTLINE, (Predicate)null);
+         return fillBlocks((CommandSourceStack)var0x.getSource(), BoundingBox.createProper(BlockPosArgument.getLoadedBlockPos(var0x, "from"), BlockPosArgument.getLoadedBlockPos(var0x, "to")), BlockStateArgument.getBlock(var0x, "block"), FillCommand.Mode.OUTLINE, (Predicate)null);
       }))).then(Commands.literal("hollow").executes((var0x) -> {
-         return fillBlocks((CommandSourceStack)var0x.getSource(), new BoundingBox(BlockPosArgument.getLoadedBlockPos(var0x, "from"), BlockPosArgument.getLoadedBlockPos(var0x, "to")), BlockStateArgument.getBlock(var0x, "block"), FillCommand.Mode.HOLLOW, (Predicate)null);
+         return fillBlocks((CommandSourceStack)var0x.getSource(), BoundingBox.createProper(BlockPosArgument.getLoadedBlockPos(var0x, "from"), BlockPosArgument.getLoadedBlockPos(var0x, "to")), BlockStateArgument.getBlock(var0x, "block"), FillCommand.Mode.HOLLOW, (Predicate)null);
       }))).then(Commands.literal("destroy").executes((var0x) -> {
-         return fillBlocks((CommandSourceStack)var0x.getSource(), new BoundingBox(BlockPosArgument.getLoadedBlockPos(var0x, "from"), BlockPosArgument.getLoadedBlockPos(var0x, "to")), BlockStateArgument.getBlock(var0x, "block"), FillCommand.Mode.DESTROY, (Predicate)null);
+         return fillBlocks((CommandSourceStack)var0x.getSource(), BoundingBox.createProper(BlockPosArgument.getLoadedBlockPos(var0x, "from"), BlockPosArgument.getLoadedBlockPos(var0x, "to")), BlockStateArgument.getBlock(var0x, "block"), FillCommand.Mode.DESTROY, (Predicate)null);
       }))))));
    }
 
    private static int fillBlocks(CommandSourceStack var0, BoundingBox var1, BlockInput var2, FillCommand.Mode var3, @Nullable Predicate<BlockInWorld> var4) throws CommandSyntaxException {
       int var5 = var1.getXSpan() * var1.getYSpan() * var1.getZSpan();
