--- net/minecraft/server/packs/resources/ProfiledReloadInstance.java
+++ net/minecraft/server/packs/resources/ProfiledReloadInstance.java
@@ -50,25 +50,25 @@
    }
 
    private void finish(List<ProfiledReloadInstance.State> var1) {
       this.total.stop();
       int var2 = 0;
-      LOGGER.info("Resource reload finished after " + this.total.elapsed(TimeUnit.MILLISECONDS) + " ms");
+      LOGGER.info((String)"Resource reload finished after {} ms", (Object)this.total.elapsed(TimeUnit.MILLISECONDS));
 
       int var8;
       for(Iterator var3 = var1.iterator(); var3.hasNext(); var2 += var8) {
          ProfiledReloadInstance.State var4 = (ProfiledReloadInstance.State)var3.next();
          ProfileResults var5 = var4.preparationResult;
          ProfileResults var6 = var4.reloadResult;
          int var7 = (int)((double)var4.preparationNanos.get() / 1000000.0D);
          var8 = (int)((double)var4.reloadNanos.get() / 1000000.0D);
          int var9 = var7 + var8;
          String var10 = var4.name;
-         LOGGER.info(var10 + " took approximately " + var9 + " ms (" + var7 + " ms preparing, " + var8 + " ms applying)");
+         LOGGER.info((String)"{} took approximately {} ms ({} ms preparing, {} ms applying)", (Object)var10, var9, var7, var8);
       }
 
-      LOGGER.info("Total blocking time: " + var2 + " ms");
+      LOGGER.info((String)"Total blocking time: {} ms", (Object)var2);
    }
 
    public static class State {
       private final String name;
       private final ProfileResults preparationResult;
