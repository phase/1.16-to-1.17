--- net/minecraft/core/MappedRegistry.java
+++ net/minecraft/core/MappedRegistry.java
@@ -166,10 +166,14 @@
 
    public Set<Entry<ResourceKey<T>, T>> entrySet() {
       return Collections.unmodifiableMap(this.keyStorage).entrySet();
    }
 
+   public boolean isEmpty() {
+      return this.storage.isEmpty();
+   }
+
    @Nullable
    public T getRandom(Random var1) {
       if (this.randomCache == null) {
          Set var2 = this.storage.values();
          if (var2.isEmpty()) {
@@ -180,10 +184,18 @@
       }
 
       return Util.getRandom(this.randomCache, var1);
    }
 
+   public boolean containsKey(ResourceLocation var1) {
+      return this.storage.containsKey(var1);
+   }
+
+   public boolean containsKey(ResourceKey<T> var1) {
+      return this.keyStorage.containsKey(var1);
+   }
+
    public static <T> Codec<MappedRegistry<T>> networkCodec(ResourceKey<? extends Registry<T>> var0, Lifecycle var1, Codec<T> var2) {
       return withNameAndId(var0, var2.fieldOf("element")).codec().listOf().xmap((var2x) -> {
          MappedRegistry var3 = new MappedRegistry(var0, var1);
          Iterator var4 = var2x.iterator();
 
