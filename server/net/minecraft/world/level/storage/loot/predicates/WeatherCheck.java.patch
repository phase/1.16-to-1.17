--- net/minecraft/world/level/storage/loot/predicates/WeatherCheck.java
+++ net/minecraft/world/level/storage/loot/predicates/WeatherCheck.java
@@ -8,15 +8,15 @@
 import net.minecraft.util.GsonHelper;
 import net.minecraft.world.level.storage.loot.LootContext;
 
 public class WeatherCheck implements LootItemCondition {
    @Nullable
-   private final Boolean isRaining;
+   final Boolean isRaining;
    @Nullable
-   private final Boolean isThundering;
+   final Boolean isThundering;
 
-   private WeatherCheck(@Nullable Boolean var1, @Nullable Boolean var2) {
+   WeatherCheck(@Nullable Boolean var1, @Nullable Boolean var2) {
       this.isRaining = var1;
       this.isThundering = var2;
    }
 
    public LootItemConditionType getType() {
@@ -30,10 +30,38 @@
       } else {
          return this.isThundering == null || this.isThundering == var2.isThundering();
       }
    }
 
+   public static WeatherCheck.Builder weather() {
+      return new WeatherCheck.Builder();
+   }
+
+   public static class Builder implements LootItemCondition.Builder {
+      @Nullable
+      private Boolean isRaining;
+      @Nullable
+      private Boolean isThundering;
+
+      public Builder() {
+      }
+
+      public WeatherCheck.Builder setRaining(@Nullable Boolean var1) {
+         this.isRaining = var1;
+         return this;
+      }
+
+      public WeatherCheck.Builder setThundering(@Nullable Boolean var1) {
+         this.isThundering = var1;
+         return this;
+      }
+
+      public WeatherCheck build() {
+         return new WeatherCheck(this.isRaining, this.isThundering);
+      }
+   }
+
    public static class Serializer implements net.minecraft.world.level.storage.loot.Serializer<WeatherCheck> {
       public Serializer() {
       }
 
       public void serialize(JsonObject var1, WeatherCheck var2, JsonSerializationContext var3) {
