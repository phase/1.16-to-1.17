--- net/minecraft/world/level/storage/loot/entries/SequentialEntry.java
+++ net/minecraft/world/level/storage/loot/entries/SequentialEntry.java
@@ -1,7 +1,9 @@
 package net.minecraft.world.level.storage.loot.entries;
 
+import com.google.common.collect.Lists;
+import java.util.List;
 import net.minecraft.world.level.storage.loot.predicates.LootItemCondition;
 
 public class SequentialEntry extends CompositeEntryBase {
    SequentialEntry(LootPoolEntryContainer[] var1, LootItemCondition[] var2) {
       super(var1, var2);
@@ -33,6 +35,38 @@
 
             return true;
          };
       }
    }
+
+   public static SequentialEntry.Builder sequential(LootPoolEntryContainer.Builder<?>... var0) {
+      return new SequentialEntry.Builder(var0);
+   }
+
+   public static class Builder extends LootPoolEntryContainer.Builder<SequentialEntry.Builder> {
+      private final List<LootPoolEntryContainer> entries = Lists.newArrayList();
+
+      public Builder(LootPoolEntryContainer.Builder<?>... var1) {
+         LootPoolEntryContainer.Builder[] var2 = var1;
+         int var3 = var1.length;
+
+         for(int var4 = 0; var4 < var3; ++var4) {
+            LootPoolEntryContainer.Builder var5 = var2[var4];
+            this.entries.add(var5.build());
+         }
+
+      }
+
+      protected SequentialEntry.Builder getThis() {
+         return this;
+      }
+
+      public SequentialEntry.Builder then(LootPoolEntryContainer.Builder<?> var1) {
+         this.entries.add(var1.build());
+         return this;
+      }
+
+      public LootPoolEntryContainer build() {
+         return new SequentialEntry((LootPoolEntryContainer[])this.entries.toArray(new LootPoolEntryContainer[0]), this.getConditions());
+      }
+   }
 }
