--- net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction.java
+++ net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction.java
@@ -50,11 +50,11 @@
    public Set<LootContextParam<?>> getReferencedContextParams() {
       return ImmutableSet.of(LootContextParams.ORIGIN);
    }
 
    public ItemStack run(ItemStack var1, LootContext var2) {
-      if (var1.getItem() != Items.MAP) {
+      if (!var1.is(Items.MAP)) {
          return var1;
       } else {
          Vec3 var3 = (Vec3)var2.getParamOrNull(LootContextParams.ORIGIN);
          if (var3 != null) {
             ServerLevel var4 = var2.getLevel();
@@ -115,11 +115,11 @@
          MapDecoration.Type var6 = ExplorationMapFunction.DEFAULT_DECORATION;
 
          try {
             var6 = MapDecoration.Type.valueOf(var5.toUpperCase(Locale.ROOT));
          } catch (IllegalArgumentException var10) {
-            ExplorationMapFunction.LOGGER.error((String)("Error while parsing loot table decoration entry. Found {}. Defaulting to " + ExplorationMapFunction.DEFAULT_DECORATION), (Object)var5);
+            ExplorationMapFunction.LOGGER.error((String)"Error while parsing loot table decoration entry. Found {}. Defaulting to {}", (Object)var5, (Object)ExplorationMapFunction.DEFAULT_DECORATION);
          }
 
          byte var7 = GsonHelper.getAsByte(var1, "zoom", (byte)2);
          int var8 = GsonHelper.getAsInt(var1, "search_radius", 50);
          boolean var9 = GsonHelper.getAsBoolean(var1, "skip_existing_chunks", true);
