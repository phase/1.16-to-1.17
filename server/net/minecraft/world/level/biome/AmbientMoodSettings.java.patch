--- net/minecraft/world/level/biome/AmbientMoodSettings.java
+++ net/minecraft/world/level/biome/AmbientMoodSettings.java
@@ -17,21 +17,37 @@
       }), Codec.DOUBLE.fieldOf("offset").forGetter((var0x) -> {
          return var0x.soundPositionOffset;
       })).apply(var0, (Function4)(AmbientMoodSettings::new));
    });
    public static final AmbientMoodSettings LEGACY_CAVE_SETTINGS;
-   private SoundEvent soundEvent;
-   private int tickDelay;
-   private int blockSearchExtent;
-   private double soundPositionOffset;
+   private final SoundEvent soundEvent;
+   private final int tickDelay;
+   private final int blockSearchExtent;
+   private final double soundPositionOffset;
 
    public AmbientMoodSettings(SoundEvent var1, int var2, int var3, double var4) {
       this.soundEvent = var1;
       this.tickDelay = var2;
       this.blockSearchExtent = var3;
       this.soundPositionOffset = var4;
    }
 
+   public SoundEvent getSoundEvent() {
+      return this.soundEvent;
+   }
+
+   public int getTickDelay() {
+      return this.tickDelay;
+   }
+
+   public int getBlockSearchExtent() {
+      return this.blockSearchExtent;
+   }
+
+   public double getSoundPositionOffset() {
+      return this.soundPositionOffset;
+   }
+
    static {
       LEGACY_CAVE_SETTINGS = new AmbientMoodSettings(SoundEvents.AMBIENT_CAVE, 6000, 8, 2.0D);
    }
 }
