--- net/minecraft/world/level/lighting/LevelLightEngine.java
+++ net/minecraft/world/level/lighting/LevelLightEngine.java
@@ -2,21 +2,26 @@
 
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.SectionPos;
 import net.minecraft.world.level.ChunkPos;
+import net.minecraft.world.level.LevelHeightAccessor;
 import net.minecraft.world.level.LightLayer;
 import net.minecraft.world.level.chunk.DataLayer;
 import net.minecraft.world.level.chunk.LightChunkGetter;
 
 public class LevelLightEngine implements LightEventListener {
+   public static final int MAX_SOURCE_LEVEL = 15;
+   public static final int LIGHT_SECTION_PADDING = 1;
+   protected final LevelHeightAccessor levelHeightAccessor;
    @Nullable
    private final LayerLightEngine<?, ?> blockEngine;
    @Nullable
    private final LayerLightEngine<?, ?> skyEngine;
 
    public LevelLightEngine(LightChunkGetter var1, boolean var2, boolean var3) {
+      this.levelHeightAccessor = var1.getLevel();
       this.blockEngine = var2 ? new BlockLightEngine(var1) : null;
       this.skyEngine = var3 ? new SkyLightEngine(var1) : null;
    }
 
    public void checkBlock(BlockPos var1) {
@@ -87,10 +92,22 @@
       } else {
          return (LayerLightEventListener)(this.skyEngine == null ? LayerLightEventListener.DummyLightLayerEventListener.INSTANCE : this.skyEngine);
       }
    }
 
+   public String getDebugData(LightLayer var1, SectionPos var2) {
+      if (var1 == LightLayer.BLOCK) {
+         if (this.blockEngine != null) {
+            return this.blockEngine.getDebugData(var2.asLong());
+         }
+      } else if (this.skyEngine != null) {
+         return this.skyEngine.getDebugData(var2.asLong());
+      }
+
+      return "n/a";
+   }
+
    public void queueSectionData(LightLayer var1, SectionPos var2, @Nullable DataLayer var3, boolean var4) {
       if (var1 == LightLayer.BLOCK) {
          if (this.blockEngine != null) {
             this.blockEngine.queueSectionData(var2.asLong(), var3, var4);
          }
@@ -114,6 +131,18 @@
    public int getRawBrightness(BlockPos var1, int var2) {
       int var3 = this.skyEngine == null ? 0 : this.skyEngine.getLightValue(var1) - var2;
       int var4 = this.blockEngine == null ? 0 : this.blockEngine.getLightValue(var1);
       return Math.max(var4, var3);
    }
+
+   public int getLightSectionCount() {
+      return this.levelHeightAccessor.getSectionsCount() + 2;
+   }
+
+   public int getMinLightSection() {
+      return this.levelHeightAccessor.getMinSection() - 1;
+   }
+
+   public int getMaxLightSection() {
+      return this.getMinLightSection() + this.getLightSectionCount();
+   }
 }
