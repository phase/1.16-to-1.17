--- net/minecraft/world/level/block/entity/BannerBlockEntity.java
+++ net/minecraft/world/level/block/entity/BannerBlockEntity.java
@@ -1,11 +1,11 @@
 package net.minecraft.world.level.block.entity;
 
 import com.mojang.datafixers.util.Pair;
 import java.util.List;
-import java.util.function.Supplier;
 import javax.annotation.Nullable;
+import net.minecraft.core.BlockPos;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.nbt.ListTag;
 import net.minecraft.network.chat.Component;
 import net.minecraft.network.chat.TranslatableComponent;
 import net.minecraft.network.protocol.game.ClientboundBlockEntityDataPacket;
@@ -16,26 +16,25 @@
 import net.minecraft.world.level.block.state.BlockState;
 
 public class BannerBlockEntity extends BlockEntity implements Nameable {
    @Nullable
    private Component name;
-   @Nullable
    private DyeColor baseColor;
    @Nullable
    private ListTag itemPatterns;
    private boolean receivedData;
    @Nullable
    private List<Pair<BannerPattern, DyeColor>> patterns;
 
-   public BannerBlockEntity() {
-      super(BlockEntityType.BANNER);
-      this.baseColor = DyeColor.WHITE;
+   public BannerBlockEntity(BlockPos var1, BlockState var2) {
+      super(BlockEntityType.BANNER, var1, var2);
+      this.baseColor = ((AbstractBannerBlock)var2.getBlock()).getColor();
    }
 
-   public BannerBlockEntity(DyeColor var1) {
-      this();
-      this.baseColor = var1;
+   public BannerBlockEntity(BlockPos var1, BlockState var2, DyeColor var3) {
+      this(var1, var2);
+      this.baseColor = var3;
    }
 
    public Component getName() {
       return (Component)(this.name != null ? this.name : new TranslatableComponent("block.minecraft.banner"));
    }
@@ -60,23 +59,17 @@
       }
 
       return var1;
    }
 
-   public void load(BlockState var1, CompoundTag var2) {
-      super.load(var1, var2);
-      if (var2.contains("CustomName", 8)) {
-         this.name = Component.Serializer.fromJson(var2.getString("CustomName"));
+   public void load(CompoundTag var1) {
+      super.load(var1);
+      if (var1.contains("CustomName", 8)) {
+         this.name = Component.Serializer.fromJson(var1.getString("CustomName"));
       }
 
-      if (this.hasLevel()) {
-         this.baseColor = ((AbstractBannerBlock)this.getBlockState().getBlock()).getColor();
-      } else {
-         this.baseColor = null;
-      }
-
-      this.itemPatterns = var2.getList("Patterns", 10);
+      this.itemPatterns = var1.getList("Patterns", 10);
       this.patterns = null;
       this.receivedData = true;
    }
 
    @Nullable
@@ -105,13 +98,9 @@
 
          }
       }
    }
 
-   public DyeColor getBaseColor(Supplier<BlockState> var1) {
-      if (this.baseColor == null) {
-         this.baseColor = ((AbstractBannerBlock)((BlockState)var1.get()).getBlock()).getColor();
-      }
-
+   public DyeColor getBaseColor() {
       return this.baseColor;
    }
 }
