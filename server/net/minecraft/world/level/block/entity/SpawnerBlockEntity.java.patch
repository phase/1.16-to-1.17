--- net/minecraft/world/level/block/entity/SpawnerBlockEntity.java
+++ net/minecraft/world/level/block/entity/SpawnerBlockEntity.java
@@ -2,59 +2,56 @@
 
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.network.protocol.game.ClientboundBlockEntityDataPacket;
+import net.minecraft.server.level.ServerLevel;
 import net.minecraft.world.level.BaseSpawner;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.SpawnData;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.state.BlockState;
 
-public class SpawnerBlockEntity extends BlockEntity implements TickableBlockEntity {
+public class SpawnerBlockEntity extends BlockEntity {
    private final BaseSpawner spawner = new BaseSpawner() {
-      public void broadcastEvent(int var1) {
-         SpawnerBlockEntity.this.level.blockEvent(SpawnerBlockEntity.this.worldPosition, Blocks.SPAWNER, var1, 0);
+      public void broadcastEvent(Level var1, BlockPos var2, int var3) {
+         var1.blockEvent(var2, Blocks.SPAWNER, var3, 0);
       }
 
-      public Level getLevel() {
-         return SpawnerBlockEntity.this.level;
-      }
-
-      public BlockPos getPos() {
-         return SpawnerBlockEntity.this.worldPosition;
-      }
-
-      public void setNextSpawnData(SpawnData var1) {
-         super.setNextSpawnData(var1);
-         if (this.getLevel() != null) {
-            BlockState var2 = this.getLevel().getBlockState(this.getPos());
-            this.getLevel().sendBlockUpdated(SpawnerBlockEntity.this.worldPosition, var2, var2, 4);
+      public void setNextSpawnData(@Nullable Level var1, BlockPos var2, SpawnData var3) {
+         super.setNextSpawnData(var1, var2, var3);
+         if (var1 != null) {
+            BlockState var4 = var1.getBlockState(var2);
+            var1.sendBlockUpdated(var2, var4, var4, 4);
          }
 
       }
    };
 
-   public SpawnerBlockEntity() {
-      super(BlockEntityType.MOB_SPAWNER);
+   public SpawnerBlockEntity(BlockPos var1, BlockState var2) {
+      super(BlockEntityType.MOB_SPAWNER, var1, var2);
    }
 
-   public void load(BlockState var1, CompoundTag var2) {
-      super.load(var1, var2);
-      this.spawner.load(var2);
+   public void load(CompoundTag var1) {
+      super.load(var1);
+      this.spawner.load(this.level, this.worldPosition, var1);
    }
 
    public CompoundTag save(CompoundTag var1) {
       super.save(var1);
-      this.spawner.save(var1);
+      this.spawner.save(this.level, this.worldPosition, var1);
       return var1;
    }
 
-   public void tick() {
-      this.spawner.tick();
+   public static void clientTick(Level var0, BlockPos var1, BlockState var2, SpawnerBlockEntity var3) {
+      var3.spawner.clientTick(var0, var1);
    }
 
+   public static void serverTick(Level var0, BlockPos var1, BlockState var2, SpawnerBlockEntity var3) {
+      var3.spawner.serverTick((ServerLevel)var0, var1);
+   }
+
    @Nullable
    public ClientboundBlockEntityDataPacket getUpdatePacket() {
       return new ClientboundBlockEntityDataPacket(this.worldPosition, 1, this.getUpdateTag());
    }
 
@@ -63,11 +60,11 @@
       var1.remove("SpawnPotentials");
       return var1;
    }
 
    public boolean triggerEvent(int var1, int var2) {
-      return this.spawner.onEventTriggered(var1) ? true : super.triggerEvent(var1, var2);
+      return this.spawner.onEventTriggered(this.level, var1) ? true : super.triggerEvent(var1, var2);
    }
 
    public boolean onlyOpCanSetNbt() {
       return true;
    }
