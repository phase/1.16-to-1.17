--- net/minecraft/world/level/block/NetherPortalBlock.java
+++ net/minecraft/world/level/block/NetherPortalBlock.java
@@ -1,17 +1,21 @@
 package net.minecraft.world.level.block;
 
 import java.util.Random;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
+import net.minecraft.core.particles.ParticleTypes;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.network.chat.Component;
 import net.minecraft.server.level.ServerLevel;
+import net.minecraft.sounds.SoundEvents;
+import net.minecraft.sounds.SoundSource;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.MobSpawnType;
 import net.minecraft.world.entity.player.Player;
+import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.level.BlockGetter;
 import net.minecraft.world.level.GameRules;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.block.state.BlockBehaviour;
@@ -23,10 +27,11 @@
 import net.minecraft.world.phys.shapes.CollisionContext;
 import net.minecraft.world.phys.shapes.VoxelShape;
 
 public class NetherPortalBlock extends Block {
    public static final EnumProperty<Direction.Axis> AXIS;
+   protected static final int AABB_OFFSET = 2;
    protected static final VoxelShape X_AXIS_AABB;
    protected static final VoxelShape Z_AXIS_AABB;
 
    public NetherPortalBlock(BlockBehaviour.Properties var1) {
       super(var1);
@@ -71,10 +76,40 @@
          var4.handleInsidePortal(var3);
       }
 
    }
 
+   public void animateTick(BlockState var1, Level var2, BlockPos var3, Random var4) {
+      if (var4.nextInt(100) == 0) {
+         var2.playLocalSound((double)var3.getX() + 0.5D, (double)var3.getY() + 0.5D, (double)var3.getZ() + 0.5D, SoundEvents.PORTAL_AMBIENT, SoundSource.BLOCKS, 0.5F, var4.nextFloat() * 0.4F + 0.8F, false);
+      }
+
+      for(int var5 = 0; var5 < 4; ++var5) {
+         double var6 = (double)var3.getX() + var4.nextDouble();
+         double var8 = (double)var3.getY() + var4.nextDouble();
+         double var10 = (double)var3.getZ() + var4.nextDouble();
+         double var12 = ((double)var4.nextFloat() - 0.5D) * 0.5D;
+         double var14 = ((double)var4.nextFloat() - 0.5D) * 0.5D;
+         double var16 = ((double)var4.nextFloat() - 0.5D) * 0.5D;
+         int var18 = var4.nextInt(2) * 2 - 1;
+         if (!var2.getBlockState(var3.west()).is(this) && !var2.getBlockState(var3.east()).is(this)) {
+            var6 = (double)var3.getX() + 0.5D + 0.25D * (double)var18;
+            var12 = (double)(var4.nextFloat() * 2.0F * (float)var18);
+         } else {
+            var10 = (double)var3.getZ() + 0.5D + 0.25D * (double)var18;
+            var16 = (double)(var4.nextFloat() * 2.0F * (float)var18);
+         }
+
+         var2.addParticle(ParticleTypes.PORTAL, var6, var8, var10, var12, var14, var16);
+      }
+
+   }
+
+   public ItemStack getCloneItemStack(BlockGetter var1, BlockPos var2, BlockState var3) {
+      return ItemStack.EMPTY;
+   }
+
    public BlockState rotate(BlockState var1, Rotation var2) {
       switch(var2) {
       case COUNTERCLOCKWISE_90:
       case CLOCKWISE_90:
          switch((Direction.Axis)var1.getValue(AXIS)) {
