--- net/minecraft/world/level/block/HopperBlock.java
+++ net/minecraft/world/level/block/HopperBlock.java
@@ -1,7 +1,8 @@
 package net.minecraft.world.level.block;
 
+import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.stats.Stats;
 import net.minecraft.world.Container;
 import net.minecraft.world.Containers;
@@ -14,10 +15,12 @@
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.context.BlockPlaceContext;
 import net.minecraft.world.level.BlockGetter;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.entity.BlockEntity;
+import net.minecraft.world.level.block.entity.BlockEntityTicker;
+import net.minecraft.world.level.block.entity.BlockEntityType;
 import net.minecraft.world.level.block.entity.Hopper;
 import net.minecraft.world.level.block.entity.HopperBlockEntity;
 import net.minecraft.world.level.block.state.BlockBehaviour;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.block.state.StateDefinition;
@@ -91,14 +94,19 @@
    public BlockState getStateForPlacement(BlockPlaceContext var1) {
       Direction var2 = var1.getClickedFace().getOpposite();
       return (BlockState)((BlockState)this.defaultBlockState().setValue(FACING, var2.getAxis() == Direction.Axis.Y ? Direction.DOWN : var2)).setValue(ENABLED, true);
    }
 
-   public BlockEntity newBlockEntity(BlockGetter var1) {
-      return new HopperBlockEntity();
+   public BlockEntity newBlockEntity(BlockPos var1, BlockState var2) {
+      return new HopperBlockEntity(var1, var2);
    }
 
+   @Nullable
+   public <T extends BlockEntity> BlockEntityTicker<T> getTicker(Level var1, BlockState var2, BlockEntityType<T> var3) {
+      return var1.isClientSide ? null : createTickerHelper(var3, BlockEntityType.HOPPER, HopperBlockEntity::pushItemsTick);
+   }
+
    public void setPlacedBy(Level var1, BlockPos var2, BlockState var3, LivingEntity var4, ItemStack var5) {
       if (var5.hasCustomHoverName()) {
          BlockEntity var6 = var1.getBlockEntity(var2);
          if (var6 instanceof HopperBlockEntity) {
             ((HopperBlockEntity)var6).setCustomName(var5.getHoverName());
@@ -176,11 +184,11 @@
    }
 
    public void entityInside(BlockState var1, Level var2, BlockPos var3, Entity var4) {
       BlockEntity var5 = var2.getBlockEntity(var3);
       if (var5 instanceof HopperBlockEntity) {
-         ((HopperBlockEntity)var5).entityInside(var4);
+         HopperBlockEntity.entityInside(var2, var3, var1, var4, (HopperBlockEntity)var5);
       }
 
    }
 
    public boolean isPathfindable(BlockState var1, BlockGetter var2, BlockPos var3, PathComputationType var4) {
