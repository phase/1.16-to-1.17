--- net/minecraft/world/level/block/GrassBlock.java
+++ net/minecraft/world/level/block/GrassBlock.java
@@ -8,10 +8,11 @@
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.state.BlockBehaviour;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.levelgen.feature.AbstractFlowerFeature;
 import net.minecraft.world.level.levelgen.feature.ConfiguredFeature;
+import net.minecraft.world.level.levelgen.feature.configurations.FeatureConfiguration;
 
 public class GrassBlock extends SpreadingSnowyDirtBlock implements BonemealableBlock {
    public GrassBlock(BlockBehaviour.Properties var1) {
       super(var1);
    }
@@ -37,26 +38,24 @@
             if (!var1.getBlockState(var8.below()).is(this) || var1.getBlockState(var8).isCollisionShapeFullBlock(var1, var8)) {
                continue label48;
             }
          }
 
-         BlockState var14 = var1.getBlockState(var8);
-         if (var14.is(var6.getBlock()) && var2.nextInt(10) == 0) {
-            ((BonemealableBlock)var6.getBlock()).performBonemeal(var1, var2, var8, var14);
+         BlockState var12 = var1.getBlockState(var8);
+         if (var12.is(var6.getBlock()) && var2.nextInt(10) == 0) {
+            ((BonemealableBlock)var6.getBlock()).performBonemeal(var1, var2, var8, var12);
          }
 
-         if (var14.isAir()) {
+         if (var12.isAir()) {
             BlockState var10;
             if (var2.nextInt(8) == 0) {
                List var11 = var1.getBiome(var8).getGenerationSettings().getFlowerFeatures();
                if (var11.isEmpty()) {
                   continue;
                }
 
-               ConfiguredFeature var12 = (ConfiguredFeature)var11.get(0);
-               AbstractFlowerFeature var13 = (AbstractFlowerFeature)var12.feature;
-               var10 = var13.getRandomFlower(var2, var8, var12.config());
+               var10 = getBlockState(var2, var8, (ConfiguredFeature)var11.get(0));
             } else {
                var10 = var6;
             }
 
             if (var10.canSurvive(var1, var8)) {
@@ -64,6 +63,11 @@
             }
          }
       }
 
    }
+
+   private static <U extends FeatureConfiguration> BlockState getBlockState(Random var0, BlockPos var1, ConfiguredFeature<U, ?> var2) {
+      AbstractFlowerFeature var3 = (AbstractFlowerFeature)var2.feature;
+      return var3.getRandomFlower(var0, var1, var2.config());
+   }
 }
