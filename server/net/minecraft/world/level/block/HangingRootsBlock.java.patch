--- net/minecraft/world/level/block/HangingRootsBlock.java
+++ net/minecraft/world/level/block/HangingRootsBlock.java
@@ -1,0 +1,37 @@
+package net.minecraft.world.level.block;
+
+import net.minecraft.core.BlockPos;
+import net.minecraft.core.Direction;
+import net.minecraft.world.level.BlockGetter;
+import net.minecraft.world.level.LevelAccessor;
+import net.minecraft.world.level.LevelReader;
+import net.minecraft.world.level.block.state.BlockBehaviour;
+import net.minecraft.world.level.block.state.BlockState;
+import net.minecraft.world.phys.shapes.CollisionContext;
+import net.minecraft.world.phys.shapes.VoxelShape;
+
+public class HangingRootsBlock extends Block {
+   protected static final VoxelShape SHAPE = Block.box(4.0D, 9.0D, 4.0D, 12.0D, 16.0D, 12.0D);
+
+   protected HangingRootsBlock(BlockBehaviour.Properties var1) {
+      super(var1);
+   }
+
+   public boolean canSurvive(BlockState var1, LevelReader var2, BlockPos var3) {
+      BlockPos var4 = var3.above();
+      BlockState var5 = var2.getBlockState(var4);
+      return var5.isFaceSturdy(var2, var4, Direction.DOWN);
+   }
+
+   public VoxelShape getShape(BlockState var1, BlockGetter var2, BlockPos var3, CollisionContext var4) {
+      return SHAPE;
+   }
+
+   public BlockState updateShape(BlockState var1, Direction var2, BlockState var3, LevelAccessor var4, BlockPos var5, BlockPos var6) {
+      return var2 == Direction.UP && !this.canSurvive(var1, var4, var5) ? Blocks.AIR.defaultBlockState() : super.updateShape(var1, var2, var3, var4, var5, var6);
+   }
+
+   public BlockBehaviour.OffsetType getOffsetType() {
+      return BlockBehaviour.OffsetType.XZ;
+   }
+}
