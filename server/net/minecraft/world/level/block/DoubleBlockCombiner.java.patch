--- net/minecraft/world/level/block/DoubleBlockCombiner.java
+++ net/minecraft/world/level/block/DoubleBlockCombiner.java
@@ -9,10 +9,13 @@
 import net.minecraft.world.level.block.entity.BlockEntityType;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.block.state.properties.DirectionProperty;
 
 public class DoubleBlockCombiner {
+   public DoubleBlockCombiner() {
+   }
+
    public static <S extends BlockEntity> DoubleBlockCombiner.NeighborCombineResult<S> combineWithNeigbour(BlockEntityType<S> var0, Function<BlockState, DoubleBlockCombiner.BlockType> var1, Function<BlockState, Direction> var2, DirectionProperty var3, BlockState var4, LevelAccessor var5, BlockPos var6, BiPredicate<LevelAccessor, BlockPos> var7) {
       BlockEntity var8 = var0.getBlockEntity(var5, var6);
       if (var8 == null) {
          return DoubleBlockCombiner.Combiner::acceptNone;
       } else if (var7.test(var5, var6)) {
@@ -75,22 +78,22 @@
             return var1.acceptDouble(this.first, this.second);
          }
       }
    }
 
-   public interface Combiner<S, T> {
-      T acceptDouble(S var1, S var2);
-
-      T acceptSingle(S var1);
-
-      T acceptNone();
-   }
-
    public static enum BlockType {
       SINGLE,
       FIRST,
       SECOND;
 
       private BlockType() {
       }
    }
+
+   public interface Combiner<S, T> {
+      T acceptDouble(S var1, S var2);
+
+      T acceptSingle(S var1);
+
+      T acceptNone();
+   }
 }
