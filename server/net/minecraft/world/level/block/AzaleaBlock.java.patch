--- net/minecraft/world/level/block/AzaleaBlock.java
+++ net/minecraft/world/level/block/AzaleaBlock.java
@@ -1,0 +1,42 @@
+package net.minecraft.world.level.block;
+
+import java.util.Random;
+import net.minecraft.core.BlockPos;
+import net.minecraft.server.level.ServerLevel;
+import net.minecraft.world.level.BlockGetter;
+import net.minecraft.world.level.Level;
+import net.minecraft.world.level.block.grower.AzaleaTreeGrower;
+import net.minecraft.world.level.block.state.BlockBehaviour;
+import net.minecraft.world.level.block.state.BlockState;
+import net.minecraft.world.phys.shapes.CollisionContext;
+import net.minecraft.world.phys.shapes.Shapes;
+import net.minecraft.world.phys.shapes.VoxelShape;
+
+public class AzaleaBlock extends BushBlock implements BonemealableBlock {
+   private static final AzaleaTreeGrower TREE_GROWER = new AzaleaTreeGrower();
+   private static final VoxelShape SHAPE = Shapes.or(Block.box(0.0D, 8.0D, 0.0D, 16.0D, 16.0D, 16.0D), Block.box(6.0D, 0.0D, 6.0D, 10.0D, 8.0D, 10.0D));
+
+   protected AzaleaBlock(BlockBehaviour.Properties var1) {
+      super(var1);
+   }
+
+   public VoxelShape getShape(BlockState var1, BlockGetter var2, BlockPos var3, CollisionContext var4) {
+      return SHAPE;
+   }
+
+   protected boolean mayPlaceOn(BlockState var1, BlockGetter var2, BlockPos var3) {
+      return var1.is(Blocks.CLAY) || super.mayPlaceOn(var1, var2, var3);
+   }
+
+   public boolean isValidBonemealTarget(BlockGetter var1, BlockPos var2, BlockState var3, boolean var4) {
+      return var1.getFluidState(var2.above()).isEmpty();
+   }
+
+   public boolean isBonemealSuccess(Level var1, Random var2, BlockPos var3, BlockState var4) {
+      return (double)var1.random.nextFloat() < 0.45D;
+   }
+
+   public void performBonemeal(ServerLevel var1, Random var2, BlockPos var3, BlockState var4) {
+      TREE_GROWER.growTree(var1, var1.getChunkSource().getGenerator(), var3, var4, var2);
+   }
+}
