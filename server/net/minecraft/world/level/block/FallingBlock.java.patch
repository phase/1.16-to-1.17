--- net/minecraft/world/level/block/FallingBlock.java
+++ net/minecraft/world/level/block/FallingBlock.java
@@ -10,11 +10,11 @@
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.block.state.BlockBehaviour;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.material.Material;
 
-public class FallingBlock extends Block {
+public class FallingBlock extends Block implements Fallable {
    public FallingBlock(BlockBehaviour.Properties var1) {
       super(var1);
    }
 
    public void onPlace(BlockState var1, Level var2, BlockPos var3, BlockState var4, boolean var5) {
@@ -25,11 +25,11 @@
       var4.getBlockTicks().scheduleTick(var5, this, this.getDelayAfterPlace());
       return super.updateShape(var1, var2, var3, var4, var5, var6);
    }
 
    public void tick(BlockState var1, ServerLevel var2, BlockPos var3, Random var4) {
-      if (isFree(var2.getBlockState(var3.below())) && var3.getY() >= 0) {
+      if (isFree(var2.getBlockState(var3.below())) && var3.getY() >= var2.getMinBuildHeight()) {
          FallingBlockEntity var5 = new FallingBlockEntity(var2, (double)var3.getX() + 0.5D, (double)var3.getY(), (double)var3.getZ() + 0.5D, var2.getBlockState(var3));
          this.falling(var5);
          var2.addFreshEntity(var5);
       }
    }
@@ -43,12 +43,6 @@
 
    public static boolean isFree(BlockState var0) {
       Material var1 = var0.getMaterial();
       return var0.isAir() || var0.is(BlockTags.FIRE) || var1.isLiquid() || var1.isReplaceable();
    }
-
-   public void onLand(Level var1, BlockPos var2, BlockState var3, BlockState var4, FallingBlockEntity var5) {
-   }
-
-   public void onBroken(Level var1, BlockPos var2, FallingBlockEntity var3) {
-   }
 }
