--- net/minecraft/world/level/block/WallTorchBlock.java
+++ net/minecraft/world/level/block/WallTorchBlock.java
@@ -1,14 +1,16 @@
 package net.minecraft.world.level.block;
 
 import com.google.common.collect.ImmutableMap;
 import com.google.common.collect.Maps;
 import java.util.Map;
+import java.util.Random;
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.core.particles.ParticleOptions;
+import net.minecraft.core.particles.ParticleTypes;
 import net.minecraft.world.item.context.BlockPlaceContext;
 import net.minecraft.world.level.BlockGetter;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.LevelReader;
@@ -19,10 +21,11 @@
 import net.minecraft.world.phys.shapes.CollisionContext;
 import net.minecraft.world.phys.shapes.VoxelShape;
 
 public class WallTorchBlock extends TorchBlock {
    public static final DirectionProperty FACING;
+   protected static final float AABB_OFFSET = 2.5F;
    private static final Map<Direction, VoxelShape> AABBS;
 
    protected WallTorchBlock(BlockBehaviour.Properties var1, ParticleOptions var2) {
       super(var1, var2);
       this.registerDefaultState((BlockState)((BlockState)this.stateDefinition.any()).setValue(FACING, Direction.NORTH));
@@ -72,10 +75,22 @@
 
    public BlockState updateShape(BlockState var1, Direction var2, BlockState var3, LevelAccessor var4, BlockPos var5, BlockPos var6) {
       return var2.getOpposite() == var1.getValue(FACING) && !var1.canSurvive(var4, var5) ? Blocks.AIR.defaultBlockState() : var1;
    }
 
+   public void animateTick(BlockState var1, Level var2, BlockPos var3, Random var4) {
+      Direction var5 = (Direction)var1.getValue(FACING);
+      double var6 = (double)var3.getX() + 0.5D;
+      double var8 = (double)var3.getY() + 0.7D;
+      double var10 = (double)var3.getZ() + 0.5D;
+      double var12 = 0.22D;
+      double var14 = 0.27D;
+      Direction var16 = var5.getOpposite();
+      var2.addParticle(ParticleTypes.SMOKE, var6 + 0.27D * (double)var16.getStepX(), var8 + 0.22D, var10 + 0.27D * (double)var16.getStepZ(), 0.0D, 0.0D, 0.0D);
+      var2.addParticle(this.flameParticle, var6 + 0.27D * (double)var16.getStepX(), var8 + 0.22D, var10 + 0.27D * (double)var16.getStepZ(), 0.0D, 0.0D, 0.0D);
+   }
+
    public BlockState rotate(BlockState var1, Rotation var2) {
       return (BlockState)var1.setValue(FACING, var2.rotate((Direction)var1.getValue(FACING)));
    }
 
    public BlockState mirror(BlockState var1, Mirror var2) {
