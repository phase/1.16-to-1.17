--- net/minecraft/world/level/block/EnderChestBlock.java
+++ net/minecraft/world/level/block/EnderChestBlock.java
@@ -1,11 +1,15 @@
 package net.minecraft.world.level.block;
 
+import java.util.Random;
+import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
+import net.minecraft.core.particles.ParticleTypes;
 import net.minecraft.network.chat.Component;
 import net.minecraft.network.chat.TranslatableComponent;
+import net.minecraft.server.level.ServerLevel;
 import net.minecraft.stats.Stats;
 import net.minecraft.world.InteractionHand;
 import net.minecraft.world.InteractionResult;
 import net.minecraft.world.SimpleMenuProvider;
 import net.minecraft.world.entity.monster.piglin.PiglinAi;
@@ -15,11 +19,13 @@
 import net.minecraft.world.item.context.BlockPlaceContext;
 import net.minecraft.world.level.BlockGetter;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.block.entity.BlockEntity;
+import net.minecraft.world.level.block.entity.BlockEntityTicker;
 import net.minecraft.world.level.block.entity.BlockEntityType;
+import net.minecraft.world.level.block.entity.ChestBlockEntity;
 import net.minecraft.world.level.block.entity.EnderChestBlockEntity;
 import net.minecraft.world.level.block.state.BlockBehaviour;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.block.state.StateDefinition;
 import net.minecraft.world.level.block.state.properties.BlockStateProperties;
@@ -43,10 +49,14 @@
          return BlockEntityType.ENDER_CHEST;
       });
       this.registerDefaultState((BlockState)((BlockState)((BlockState)this.stateDefinition.any()).setValue(FACING, Direction.NORTH)).setValue(WATERLOGGED, false));
    }
 
+   public DoubleBlockCombiner.NeighborCombineResult<? extends ChestBlockEntity> combine(BlockState var1, Level var2, BlockPos var3, boolean var4) {
+      return DoubleBlockCombiner.Combiner::acceptNone;
+   }
+
    public VoxelShape getShape(BlockState var1, BlockGetter var2, BlockPos var3, CollisionContext var4) {
       return SHAPE;
    }
 
    public RenderShape getRenderShape(BlockState var1) {
@@ -80,14 +90,34 @@
       } else {
          return InteractionResult.sidedSuccess(var2.isClientSide);
       }
    }
 
-   public BlockEntity newBlockEntity(BlockGetter var1) {
-      return new EnderChestBlockEntity();
+   public BlockEntity newBlockEntity(BlockPos var1, BlockState var2) {
+      return new EnderChestBlockEntity(var1, var2);
    }
 
+   @Nullable
+   public <T extends BlockEntity> BlockEntityTicker<T> getTicker(Level var1, BlockState var2, BlockEntityType<T> var3) {
+      return var1.isClientSide ? createTickerHelper(var3, BlockEntityType.ENDER_CHEST, EnderChestBlockEntity::lidAnimateTick) : null;
+   }
+
+   public void animateTick(BlockState var1, Level var2, BlockPos var3, Random var4) {
+      for(int var5 = 0; var5 < 3; ++var5) {
+         int var6 = var4.nextInt(2) * 2 - 1;
+         int var7 = var4.nextInt(2) * 2 - 1;
+         double var8 = (double)var3.getX() + 0.5D + 0.25D * (double)var6;
+         double var10 = (double)((float)var3.getY() + var4.nextFloat());
+         double var12 = (double)var3.getZ() + 0.5D + 0.25D * (double)var7;
+         double var14 = (double)(var4.nextFloat() * (float)var6);
+         double var16 = ((double)var4.nextFloat() - 0.5D) * 0.125D;
+         double var18 = (double)(var4.nextFloat() * (float)var7);
+         var2.addParticle(ParticleTypes.PORTAL, var8, var10, var12, var14, var16, var18);
+      }
+
+   }
+
    public BlockState rotate(BlockState var1, Rotation var2) {
       return (BlockState)var1.setValue(FACING, var2.rotate((Direction)var1.getValue(FACING)));
    }
 
    public BlockState mirror(BlockState var1, Mirror var2) {
@@ -112,10 +142,18 @@
 
    public boolean isPathfindable(BlockState var1, BlockGetter var2, BlockPos var3, PathComputationType var4) {
       return false;
    }
 
+   public void tick(BlockState var1, ServerLevel var2, BlockPos var3, Random var4) {
+      BlockEntity var5 = var2.getBlockEntity(var3);
+      if (var5 instanceof EnderChestBlockEntity) {
+         ((EnderChestBlockEntity)var5).recheckOpen();
+      }
+
+   }
+
    static {
       FACING = HorizontalDirectionalBlock.FACING;
       WATERLOGGED = BlockStateProperties.WATERLOGGED;
       SHAPE = Block.box(1.0D, 0.0D, 1.0D, 15.0D, 14.0D, 15.0D);
       CONTAINER_TITLE = new TranslatableComponent("container.enderchest");
