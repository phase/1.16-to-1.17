--- net/minecraft/world/level/block/LecternBlock.java
+++ net/minecraft/world/level/block/LecternBlock.java
@@ -8,10 +8,11 @@
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.sounds.SoundSource;
 import net.minecraft.stats.Stats;
 import net.minecraft.tags.ItemTags;
+import net.minecraft.tags.Tag;
 import net.minecraft.world.InteractionHand;
 import net.minecraft.world.InteractionResult;
 import net.minecraft.world.MenuProvider;
 import net.minecraft.world.entity.item.ItemEntity;
 import net.minecraft.world.entity.player.Player;
@@ -25,10 +26,11 @@
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.block.state.StateDefinition;
 import net.minecraft.world.level.block.state.properties.BlockStateProperties;
 import net.minecraft.world.level.block.state.properties.BooleanProperty;
 import net.minecraft.world.level.block.state.properties.DirectionProperty;
+import net.minecraft.world.level.gameevent.GameEvent;
 import net.minecraft.world.level.pathfinder.PathComputationType;
 import net.minecraft.world.phys.BlockHitResult;
 import net.minecraft.world.phys.shapes.CollisionContext;
 import net.minecraft.world.phys.shapes.Shapes;
 import net.minecraft.world.phys.shapes.VoxelShape;
@@ -109,34 +111,34 @@
 
    protected void createBlockStateDefinition(StateDefinition.Builder<Block, BlockState> var1) {
       var1.add(FACING, POWERED, HAS_BOOK);
    }
 
-   @Nullable
-   public BlockEntity newBlockEntity(BlockGetter var1) {
-      return new LecternBlockEntity();
+   public BlockEntity newBlockEntity(BlockPos var1, BlockState var2) {
+      return new LecternBlockEntity(var1, var2);
    }
 
-   public static boolean tryPlaceBook(Level var0, BlockPos var1, BlockState var2, ItemStack var3) {
-      if (!(Boolean)var2.getValue(HAS_BOOK)) {
-         if (!var0.isClientSide) {
-            placeBook(var0, var1, var2, var3);
+   public static boolean tryPlaceBook(@Nullable Player var0, Level var1, BlockPos var2, BlockState var3, ItemStack var4) {
+      if (!(Boolean)var3.getValue(HAS_BOOK)) {
+         if (!var1.isClientSide) {
+            placeBook(var0, var1, var2, var3, var4);
          }
 
          return true;
       } else {
          return false;
       }
    }
 
-   private static void placeBook(Level var0, BlockPos var1, BlockState var2, ItemStack var3) {
-      BlockEntity var4 = var0.getBlockEntity(var1);
-      if (var4 instanceof LecternBlockEntity) {
-         LecternBlockEntity var5 = (LecternBlockEntity)var4;
-         var5.setBook(var3.split(1));
-         resetBookState(var0, var1, var2, true);
-         var0.playSound((Player)null, (BlockPos)var1, SoundEvents.BOOK_PUT, SoundSource.BLOCKS, 1.0F, 1.0F);
+   private static void placeBook(@Nullable Player var0, Level var1, BlockPos var2, BlockState var3, ItemStack var4) {
+      BlockEntity var5 = var1.getBlockEntity(var2);
+      if (var5 instanceof LecternBlockEntity) {
+         LecternBlockEntity var6 = (LecternBlockEntity)var5;
+         var6.setBook(var4.split(1));
+         resetBookState(var1, var2, var3, true);
+         var1.playSound((Player)null, (BlockPos)var2, SoundEvents.BOOK_PUT, SoundSource.BLOCKS, 1.0F, 1.0F);
+         var1.gameEvent(var0, GameEvent.BLOCK_CHANGE, var2);
       }
 
    }
 
    public static void resetBookState(Level var0, BlockPos var1, BlockState var2, boolean var3) {
@@ -227,11 +229,11 @@
          }
 
          return InteractionResult.sidedSuccess(var2.isClientSide);
       } else {
          ItemStack var7 = var4.getItemInHand(var5);
-         return !var7.isEmpty() && !var7.getItem().is(ItemTags.LECTERN_BOOKS) ? InteractionResult.CONSUME : InteractionResult.PASS;
+         return !var7.isEmpty() && !var7.is((Tag)ItemTags.LECTERN_BOOKS) ? InteractionResult.CONSUME : InteractionResult.PASS;
       }
    }
 
    @Nullable
    public MenuProvider getMenuProvider(BlockState var1, Level var2, BlockPos var3) {
@@ -260,9 +262,9 @@
       SHAPE_COMMON = Shapes.or(SHAPE_BASE, SHAPE_POST);
       SHAPE_TOP_PLATE = Block.box(0.0D, 15.0D, 0.0D, 16.0D, 15.0D, 16.0D);
       SHAPE_COLLISION = Shapes.or(SHAPE_COMMON, SHAPE_TOP_PLATE);
       SHAPE_WEST = Shapes.or(Block.box(1.0D, 10.0D, 0.0D, 5.333333D, 14.0D, 16.0D), Block.box(5.333333D, 12.0D, 0.0D, 9.666667D, 16.0D, 16.0D), Block.box(9.666667D, 14.0D, 0.0D, 14.0D, 18.0D, 16.0D), SHAPE_COMMON);
       SHAPE_NORTH = Shapes.or(Block.box(0.0D, 10.0D, 1.0D, 16.0D, 14.0D, 5.333333D), Block.box(0.0D, 12.0D, 5.333333D, 16.0D, 16.0D, 9.666667D), Block.box(0.0D, 14.0D, 9.666667D, 16.0D, 18.0D, 14.0D), SHAPE_COMMON);
-      SHAPE_EAST = Shapes.or(Block.box(15.0D, 10.0D, 0.0D, 10.666667D, 14.0D, 16.0D), Block.box(10.666667D, 12.0D, 0.0D, 6.333333D, 16.0D, 16.0D), Block.box(6.333333D, 14.0D, 0.0D, 2.0D, 18.0D, 16.0D), SHAPE_COMMON);
-      SHAPE_SOUTH = Shapes.or(Block.box(0.0D, 10.0D, 15.0D, 16.0D, 14.0D, 10.666667D), Block.box(0.0D, 12.0D, 10.666667D, 16.0D, 16.0D, 6.333333D), Block.box(0.0D, 14.0D, 6.333333D, 16.0D, 18.0D, 2.0D), SHAPE_COMMON);
+      SHAPE_EAST = Shapes.or(Block.box(10.666667D, 10.0D, 0.0D, 15.0D, 14.0D, 16.0D), Block.box(6.333333D, 12.0D, 0.0D, 10.666667D, 16.0D, 16.0D), Block.box(2.0D, 14.0D, 0.0D, 6.333333D, 18.0D, 16.0D), SHAPE_COMMON);
+      SHAPE_SOUTH = Shapes.or(Block.box(0.0D, 10.0D, 10.666667D, 16.0D, 14.0D, 15.0D), Block.box(0.0D, 12.0D, 6.333333D, 16.0D, 16.0D, 10.666667D), Block.box(0.0D, 14.0D, 2.0D, 16.0D, 18.0D, 6.333333D), SHAPE_COMMON);
    }
 }
