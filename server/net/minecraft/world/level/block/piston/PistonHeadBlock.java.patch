--- net/minecraft/world/level/block/piston/PistonHeadBlock.java
+++ net/minecraft/world/level/block/piston/PistonHeadBlock.java
@@ -2,10 +2,11 @@
 
 import java.util.Arrays;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.world.entity.player.Player;
+import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.level.BlockGetter;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.LevelReader;
 import net.minecraft.world.level.block.Block;
@@ -26,16 +27,20 @@
 import net.minecraft.world.phys.shapes.VoxelShape;
 
 public class PistonHeadBlock extends DirectionalBlock {
    public static final EnumProperty<PistonType> TYPE;
    public static final BooleanProperty SHORT;
+   public static final float PLATFORM = 4.0F;
    protected static final VoxelShape EAST_AABB;
    protected static final VoxelShape WEST_AABB;
    protected static final VoxelShape SOUTH_AABB;
    protected static final VoxelShape NORTH_AABB;
    protected static final VoxelShape UP_AABB;
    protected static final VoxelShape DOWN_AABB;
+   protected static final float AABB_OFFSET = 2.0F;
+   protected static final float EDGE_MIN = 6.0F;
+   protected static final float EDGE_MAX = 10.0F;
    protected static final VoxelShape UP_ARM_AABB;
    protected static final VoxelShape DOWN_ARM_AABB;
    protected static final VoxelShape SOUTH_ARM_AABB;
    protected static final VoxelShape NORTH_ARM_AABB;
    protected static final VoxelShape EAST_ARM_AABB;
@@ -92,11 +97,11 @@
       Block var3 = var1.getValue(TYPE) == PistonType.DEFAULT ? Blocks.PISTON : Blocks.STICKY_PISTON;
       return var2.is(var3) && (Boolean)var2.getValue(PistonBaseBlock.EXTENDED) && var2.getValue(FACING) == var1.getValue(FACING);
    }
 
    public void playerWillDestroy(Level var1, BlockPos var2, BlockState var3, Player var4) {
-      if (!var1.isClientSide && var4.abilities.instabuild) {
+      if (!var1.isClientSide && var4.getAbilities().instabuild) {
          BlockPos var5 = var2.relative(((Direction)var3.getValue(FACING)).getOpposite());
          if (this.isFittingBase(var3, var1.getBlockState(var5))) {
             var1.destroyBlock(var5, false);
          }
       }
@@ -130,10 +135,14 @@
          var2.getBlockState(var7).neighborChanged(var2, var7, var4, var5, false);
       }
 
    }
 
+   public ItemStack getCloneItemStack(BlockGetter var1, BlockPos var2, BlockState var3) {
+      return new ItemStack(var3.getValue(TYPE) == PistonType.STICKY ? Blocks.STICKY_PISTON : Blocks.PISTON);
+   }
+
    public BlockState rotate(BlockState var1, Rotation var2) {
       return (BlockState)var1.setValue(FACING, var2.rotate((Direction)var1.getValue(FACING)));
    }
 
    public BlockState mirror(BlockState var1, Mirror var2) {
