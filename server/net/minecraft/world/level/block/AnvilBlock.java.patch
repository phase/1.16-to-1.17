--- net/minecraft/world/level/block/AnvilBlock.java
+++ net/minecraft/world/level/block/AnvilBlock.java
@@ -8,10 +8,11 @@
 import net.minecraft.stats.Stats;
 import net.minecraft.world.InteractionHand;
 import net.minecraft.world.InteractionResult;
 import net.minecraft.world.MenuProvider;
 import net.minecraft.world.SimpleMenuProvider;
+import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.entity.item.FallingBlockEntity;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.inventory.AnvilMenu;
 import net.minecraft.world.inventory.ContainerLevelAccess;
 import net.minecraft.world.item.context.BlockPlaceContext;
@@ -37,10 +38,12 @@
    private static final VoxelShape Z_LEG2;
    private static final VoxelShape Z_TOP;
    private static final VoxelShape X_AXIS_AABB;
    private static final VoxelShape Z_AXIS_AABB;
    private static final Component CONTAINER_TITLE;
+   private static final float FALL_DAMAGE_PER_DISTANCE = 2.0F;
+   private static final int FALL_DAMAGE_MAX = 40;
 
    public AnvilBlock(BlockBehaviour.Properties var1) {
       super(var1);
       this.registerDefaultState((BlockState)((BlockState)this.stateDefinition.any()).setValue(FACING, Direction.NORTH));
    }
@@ -70,27 +73,31 @@
       Direction var5 = (Direction)var1.getValue(FACING);
       return var5.getAxis() == Direction.Axis.X ? X_AXIS_AABB : Z_AXIS_AABB;
    }
 
    protected void falling(FallingBlockEntity var1) {
-      var1.setHurtsEntities(true);
+      var1.setHurtsEntities(2.0F, 40);
    }
 
    public void onLand(Level var1, BlockPos var2, BlockState var3, BlockState var4, FallingBlockEntity var5) {
       if (!var5.isSilent()) {
          var1.levelEvent(1031, var2, 0);
       }
 
    }
 
-   public void onBroken(Level var1, BlockPos var2, FallingBlockEntity var3) {
+   public void onBrokenAfterFall(Level var1, BlockPos var2, FallingBlockEntity var3) {
       if (!var3.isSilent()) {
          var1.levelEvent(1029, var2, 0);
       }
 
    }
 
+   public DamageSource getFallDamageSource() {
+      return DamageSource.ANVIL;
+   }
+
    @Nullable
    public static BlockState damage(BlockState var0) {
       if (var0.is(Blocks.ANVIL)) {
          return (BlockState)Blocks.CHIPPED_ANVIL.defaultBlockState().setValue(FACING, var0.getValue(FACING));
       } else {
@@ -108,10 +115,14 @@
 
    public boolean isPathfindable(BlockState var1, BlockGetter var2, BlockPos var3, PathComputationType var4) {
       return false;
    }
 
+   public int getDustColor(BlockState var1, BlockGetter var2, BlockPos var3) {
+      return var1.getMapColor(var2, var3).col;
+   }
+
    static {
       FACING = HorizontalDirectionalBlock.FACING;
       BASE = Block.box(2.0D, 0.0D, 2.0D, 14.0D, 4.0D, 14.0D);
       X_LEG1 = Block.box(3.0D, 4.0D, 4.0D, 13.0D, 5.0D, 12.0D);
       X_LEG2 = Block.box(4.0D, 5.0D, 6.0D, 12.0D, 10.0D, 10.0D);
