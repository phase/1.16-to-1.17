--- net/minecraft/world/level/block/LiquidBlock.java
+++ net/minecraft/world/level/block/LiquidBlock.java
@@ -1,14 +1,16 @@
 package net.minecraft.world.level.block;
 
 import com.google.common.collect.Lists;
 import java.util.Collections;
 import java.util.List;
+import java.util.Optional;
 import java.util.Random;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.server.level.ServerLevel;
+import net.minecraft.sounds.SoundEvent;
 import net.minecraft.tags.FluidTags;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.level.BlockGetter;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.LevelAccessor;
@@ -16,13 +18,11 @@
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.block.state.StateDefinition;
 import net.minecraft.world.level.block.state.properties.BlockStateProperties;
 import net.minecraft.world.level.block.state.properties.IntegerProperty;
 import net.minecraft.world.level.material.FlowingFluid;
-import net.minecraft.world.level.material.Fluid;
 import net.minecraft.world.level.material.FluidState;
-import net.minecraft.world.level.material.Fluids;
 import net.minecraft.world.level.pathfinder.PathComputationType;
 import net.minecraft.world.level.storage.loot.LootContext;
 import net.minecraft.world.phys.shapes.CollisionContext;
 import net.minecraft.world.phys.shapes.Shapes;
 import net.minecraft.world.phys.shapes.VoxelShape;
@@ -70,10 +70,14 @@
    public FluidState getFluidState(BlockState var1) {
       int var2 = (Integer)var1.getValue(LEVEL);
       return (FluidState)this.stateCache.get(Math.min(var2, 8));
    }
 
+   public boolean skipRendering(BlockState var1, BlockState var2, Direction var3) {
+      return var2.getFluidState().getType().isSame(this.fluid);
+   }
+
    public RenderShape getRenderShape(BlockState var1) {
       return RenderShape.INVISIBLE;
    }
 
    public List<ItemStack> getDrops(BlockState var1, LootContext.Builder var2) {
@@ -141,19 +145,23 @@
 
    protected void createBlockStateDefinition(StateDefinition.Builder<Block, BlockState> var1) {
       var1.add(LEVEL);
    }
 
-   public Fluid takeLiquid(LevelAccessor var1, BlockPos var2, BlockState var3) {
+   public ItemStack pickupBlock(LevelAccessor var1, BlockPos var2, BlockState var3) {
       if ((Integer)var3.getValue(LEVEL) == 0) {
          var1.setBlock(var2, Blocks.AIR.defaultBlockState(), 11);
-         return this.fluid;
+         return new ItemStack(this.fluid.getBucket());
       } else {
-         return Fluids.EMPTY;
+         return ItemStack.EMPTY;
       }
    }
 
+   public Optional<SoundEvent> getPickupSound() {
+      return this.fluid.getPickupSound();
+   }
+
    static {
       LEVEL = BlockStateProperties.LEVEL;
       STABLE_SHAPE = Block.box(0.0D, 0.0D, 0.0D, 16.0D, 8.0D, 16.0D);
    }
 }
