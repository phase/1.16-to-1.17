--- net/minecraft/world/level/block/SpawnerBlock.java
+++ net/minecraft/world/level/block/SpawnerBlock.java
@@ -1,30 +1,43 @@
 package net.minecraft.world.level.block;
 
+import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.level.BlockGetter;
+import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.entity.BlockEntity;
+import net.minecraft.world.level.block.entity.BlockEntityTicker;
+import net.minecraft.world.level.block.entity.BlockEntityType;
 import net.minecraft.world.level.block.entity.SpawnerBlockEntity;
 import net.minecraft.world.level.block.state.BlockBehaviour;
 import net.minecraft.world.level.block.state.BlockState;
 
 public class SpawnerBlock extends BaseEntityBlock {
    protected SpawnerBlock(BlockBehaviour.Properties var1) {
       super(var1);
    }
 
-   public BlockEntity newBlockEntity(BlockGetter var1) {
-      return new SpawnerBlockEntity();
+   public BlockEntity newBlockEntity(BlockPos var1, BlockState var2) {
+      return new SpawnerBlockEntity(var1, var2);
    }
 
+   @Nullable
+   public <T extends BlockEntity> BlockEntityTicker<T> getTicker(Level var1, BlockState var2, BlockEntityType<T> var3) {
+      return createTickerHelper(var3, BlockEntityType.MOB_SPAWNER, var1.isClientSide ? SpawnerBlockEntity::clientTick : SpawnerBlockEntity::serverTick);
+   }
+
    public void spawnAfterBreak(BlockState var1, ServerLevel var2, BlockPos var3, ItemStack var4) {
       super.spawnAfterBreak(var1, var2, var3, var4);
       int var5 = 15 + var2.random.nextInt(15) + var2.random.nextInt(15);
       this.popExperience(var2, var3, var5);
    }
 
    public RenderShape getRenderShape(BlockState var1) {
       return RenderShape.MODEL;
    }
+
+   public ItemStack getCloneItemStack(BlockGetter var1, BlockPos var2, BlockState var3) {
+      return ItemStack.EMPTY;
+   }
 }
