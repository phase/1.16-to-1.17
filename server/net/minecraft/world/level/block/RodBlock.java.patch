--- net/minecraft/world/level/block/RodBlock.java
+++ net/minecraft/world/level/block/RodBlock.java
@@ -1,0 +1,46 @@
+package net.minecraft.world.level.block;
+
+import net.minecraft.core.BlockPos;
+import net.minecraft.core.Direction;
+import net.minecraft.world.level.BlockGetter;
+import net.minecraft.world.level.block.state.BlockBehaviour;
+import net.minecraft.world.level.block.state.BlockState;
+import net.minecraft.world.level.pathfinder.PathComputationType;
+import net.minecraft.world.phys.shapes.CollisionContext;
+import net.minecraft.world.phys.shapes.VoxelShape;
+
+public class RodBlock extends DirectionalBlock {
+   protected static final float AABB_MIN = 6.0F;
+   protected static final float AABB_MAX = 10.0F;
+   protected static final VoxelShape Y_AXIS_AABB = Block.box(6.0D, 0.0D, 6.0D, 10.0D, 16.0D, 10.0D);
+   protected static final VoxelShape Z_AXIS_AABB = Block.box(6.0D, 6.0D, 0.0D, 10.0D, 10.0D, 16.0D);
+   protected static final VoxelShape X_AXIS_AABB = Block.box(0.0D, 6.0D, 6.0D, 16.0D, 10.0D, 10.0D);
+
+   protected RodBlock(BlockBehaviour.Properties var1) {
+      super(var1);
+   }
+
+   public VoxelShape getShape(BlockState var1, BlockGetter var2, BlockPos var3, CollisionContext var4) {
+      switch(((Direction)var1.getValue(FACING)).getAxis()) {
+      case X:
+      default:
+         return X_AXIS_AABB;
+      case Z:
+         return Z_AXIS_AABB;
+      case Y:
+         return Y_AXIS_AABB;
+      }
+   }
+
+   public BlockState rotate(BlockState var1, Rotation var2) {
+      return (BlockState)var1.setValue(FACING, var2.rotate((Direction)var1.getValue(FACING)));
+   }
+
+   public BlockState mirror(BlockState var1, Mirror var2) {
+      return (BlockState)var1.setValue(FACING, var2.mirror((Direction)var1.getValue(FACING)));
+   }
+
+   public boolean isPathfindable(BlockState var1, BlockGetter var2, BlockPos var3, PathComputationType var4) {
+      return false;
+   }
+}
