--- net/minecraft/world/level/BaseCommandBlock.java
+++ net/minecraft/world/level/BaseCommandBlock.java
@@ -15,10 +15,11 @@
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.util.StringUtil;
 import net.minecraft.world.InteractionResult;
 import net.minecraft.world.entity.player.Player;
+import net.minecraft.world.phys.Vec3;
 
 public abstract class BaseCommandBlock implements CommandSource {
    private static final SimpleDateFormat TIME_FORMAT = new SimpleDateFormat("HH:mm:ss");
    private static final Component DEFAULT_NAME = new TextComponent("@");
    private long lastExecution = -1L;
@@ -161,11 +162,13 @@
 
    }
 
    public void sendMessage(Component var1, UUID var2) {
       if (this.trackOutput) {
-         this.lastOutput = (new TextComponent("[" + TIME_FORMAT.format(new Date()) + "] ")).append(var1);
+         SimpleDateFormat var10003 = TIME_FORMAT;
+         Date var10004 = new Date();
+         this.lastOutput = (new TextComponent("[" + var10003.format(var10004) + "] ")).append(var1);
          this.onUpdated();
       }
 
    }
 
@@ -179,10 +182,14 @@
 
    public void setTrackOutput(boolean var1) {
       this.trackOutput = var1;
    }
 
+   public boolean isTrackOutput() {
+      return this.trackOutput;
+   }
+
    public InteractionResult usedBy(Player var1) {
       if (!var1.canUseGameMasterBlocks()) {
          return InteractionResult.PASS;
       } else {
          if (var1.getCommandSenderWorld().isClientSide) {
@@ -191,10 +198,12 @@
 
          return InteractionResult.sidedSuccess(var1.level.isClientSide);
       }
    }
 
+   public abstract Vec3 getPosition();
+
    public abstract CommandSourceStack createCommandSourceStack();
 
    public boolean acceptsSuccess() {
       return this.getLevel().getGameRules().getBoolean(GameRules.RULE_SENDCOMMANDFEEDBACK) && this.trackOutput;
    }
