--- net/minecraft/world/level/LevelAccessor.java
+++ net/minecraft/world/level/LevelAccessor.java
@@ -2,17 +2,20 @@
 
 import java.util.Random;
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.particles.ParticleOptions;
+import net.minecraft.server.MinecraftServer;
 import net.minecraft.sounds.SoundEvent;
 import net.minecraft.sounds.SoundSource;
 import net.minecraft.world.Difficulty;
 import net.minecraft.world.DifficultyInstance;
+import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.level.block.Block;
 import net.minecraft.world.level.chunk.ChunkSource;
+import net.minecraft.world.level.gameevent.GameEvent;
 import net.minecraft.world.level.material.Fluid;
 import net.minecraft.world.level.storage.LevelData;
 
 public interface LevelAccessor extends CommonLevelAccessor, LevelTimeAccess {
    default long dayTime() {
@@ -25,10 +28,13 @@
 
    LevelData getLevelData();
 
    DifficultyInstance getCurrentDifficultyAt(BlockPos var1);
 
+   @Nullable
+   MinecraftServer getServer();
+
    default Difficulty getDifficulty() {
       return this.getLevelData().getDifficulty();
    }
 
    ChunkSource getChunkSource();
@@ -46,13 +52,27 @@
 
    void addParticle(ParticleOptions var1, double var2, double var4, double var6, double var8, double var10, double var12);
 
    void levelEvent(@Nullable Player var1, int var2, BlockPos var3, int var4);
 
-   default int getHeight() {
+   default int getLogicalHeight() {
       return this.dimensionType().logicalHeight();
    }
 
    default void levelEvent(int var1, BlockPos var2, int var3) {
       this.levelEvent((Player)null, var1, var2, var3);
    }
+
+   void gameEvent(@Nullable Entity var1, GameEvent var2, BlockPos var3);
+
+   default void gameEvent(GameEvent var1, BlockPos var2) {
+      this.gameEvent((Entity)null, var1, (BlockPos)var2);
+   }
+
+   default void gameEvent(GameEvent var1, Entity var2) {
+      this.gameEvent((Entity)null, var1, (BlockPos)var2.blockPosition());
+   }
+
+   default void gameEvent(@Nullable Entity var1, GameEvent var2, Entity var3) {
+      this.gameEvent(var1, var2, var3.blockPosition());
+   }
 }
