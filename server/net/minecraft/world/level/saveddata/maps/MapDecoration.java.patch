--- net/minecraft/world/level/saveddata/maps/MapDecoration.java
+++ net/minecraft/world/level/saveddata/maps/MapDecoration.java
@@ -5,23 +5,28 @@
 import net.minecraft.network.chat.Component;
 import net.minecraft.util.Mth;
 
 public class MapDecoration {
    private final MapDecoration.Type type;
-   private byte x;
-   private byte y;
-   private byte rot;
+   private final byte x;
+   private final byte y;
+   private final byte rot;
+   @Nullable
    private final Component name;
 
    public MapDecoration(MapDecoration.Type var1, byte var2, byte var3, byte var4, @Nullable Component var5) {
       this.type = var1;
       this.x = var2;
       this.y = var3;
       this.rot = var4;
       this.name = var5;
    }
 
+   public byte getImage() {
+      return this.type.getIcon();
+   }
+
    public MapDecoration.Type getType() {
       return this.type;
    }
 
    public byte getX() {
@@ -34,10 +39,14 @@
 
    public byte getRot() {
       return this.rot;
    }
 
+   public boolean renderOnFrame() {
+      return this.type.isRenderedOnFrame();
+   }
+
    @Nullable
    public Component getName() {
       return this.name;
    }
 
@@ -46,21 +55,11 @@
          return true;
       } else if (!(var1 instanceof MapDecoration)) {
          return false;
       } else {
          MapDecoration var2 = (MapDecoration)var1;
-         if (this.type != var2.type) {
-            return false;
-         } else if (this.rot != var2.rot) {
-            return false;
-         } else if (this.x != var2.x) {
-            return false;
-         } else if (this.y != var2.y) {
-            return false;
-         } else {
-            return Objects.equals(this.name, var2.name);
-         }
+         return this.type == var2.type && this.rot == var2.rot && this.x == var2.x && this.y == var2.y && Objects.equals(this.name, var2.name);
       }
    }
 
    public int hashCode() {
       byte var1 = this.type.getIcon();
@@ -116,18 +115,22 @@
 
       public byte getIcon() {
          return this.icon;
       }
 
+      public boolean isRenderedOnFrame() {
+         return this.renderedOnFrame;
+      }
+
       public boolean hasMapColor() {
          return this.mapColor >= 0;
       }
 
       public int getMapColor() {
          return this.mapColor;
       }
 
       public static MapDecoration.Type byIcon(byte var0) {
-         return values()[Mth.clamp(var0, 0, values().length - 1)];
+         return values()[Mth.clamp((int)var0, (int)0, (int)(values().length - 1))];
       }
    }
 }
