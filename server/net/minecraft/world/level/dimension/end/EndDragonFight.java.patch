--- net/minecraft/world/level/dimension/end/EndDragonFight.java
+++ net/minecraft/world/level/dimension/end/EndDragonFight.java
@@ -57,10 +57,18 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
 public class EndDragonFight {
    private static final Logger LOGGER = LogManager.getLogger();
+   private static final int MAX_TICKS_BEFORE_DRAGON_RESPAWN = 1200;
+   private static final int TIME_BETWEEN_CRYSTAL_SCANS = 100;
+   private static final int TIME_BETWEEN_PLAYER_SCANS = 20;
+   private static final int ARENA_SIZE_CHUNKS = 8;
+   public static final int ARENA_TICKET_LEVEL = 9;
+   private static final int GATEWAY_COUNT = 20;
+   private static final int GATEWAY_DISTANCE = 96;
+   public static final int DRAGON_SPAWN_Y = 128;
    private static final Predicate<Entity> VALID_PLAYER;
    private final ServerBossEvent dragonEvent;
    private final ServerLevel level;
    private final List<Integer> gateways;
    private final BlockPattern exitPortalPattern;
@@ -80,10 +88,14 @@
    public EndDragonFight(ServerLevel var1, long var2, CompoundTag var4) {
       this.dragonEvent = (ServerBossEvent)(new ServerBossEvent(new TranslatableComponent("entity.minecraft.ender_dragon"), BossEvent.BossBarColor.PINK, BossEvent.BossBarOverlay.PROGRESS)).setPlayBossMusic(true).setCreateWorldFog(true);
       this.gateways = Lists.newArrayList();
       this.needsStateScanning = true;
       this.level = var1;
+      if (var4.contains("NeedsStateScanning")) {
+         this.needsStateScanning = var4.getBoolean("NeedsStateScanning");
+      }
+
       if (var4.contains("DragonKilled", 99)) {
          if (var4.hasUUID("Dragon")) {
             this.dragonUUID = var4.getUUID("Dragon");
          }
 
@@ -115,10 +127,11 @@
       this.exitPortalPattern = BlockPatternBuilder.start().aisle("       ", "       ", "       ", "   #   ", "       ", "       ", "       ").aisle("       ", "       ", "       ", "   #   ", "       ", "       ", "       ").aisle("       ", "       ", "       ", "   #   ", "       ", "       ", "       ").aisle("  ###  ", " #   # ", "#     #", "#  #  #", "#     #", " #   # ", "  ###  ").aisle("       ", "  ###  ", " ##### ", " ##### ", " ##### ", "  ###  ", "       ").where('#', BlockInWorld.hasState(BlockPredicate.forBlock(Blocks.BEDROCK))).build();
    }
 
    public CompoundTag saveData() {
       CompoundTag var1 = new CompoundTag();
+      var1.putBoolean("NeedsStateScanning", this.needsStateScanning);
       if (this.dragonUUID != null) {
          var1.putUUID("Dragon", this.dragonUUID);
       }
 
       var1.putBoolean("DragonKilled", this.dragonKilled);
@@ -202,11 +215,11 @@
          this.dragonUUID = var3.getUUID();
          LOGGER.info((String)"Found that there's a dragon still alive ({})", (Object)var3);
          this.dragonKilled = false;
          if (!var1) {
             LOGGER.info("But we didn't have a portal, let's remove it.");
-            var3.remove();
+            var3.discard();
             this.dragonUUID = null;
          }
       }
 
       if (!this.previouslyKilled && this.dragonKilled) {
@@ -280,11 +293,11 @@
                BlockEntity var5 = (BlockEntity)var4.next();
                if (var5 instanceof TheEndPortalBlockEntity) {
                   BlockPattern.BlockPatternMatch var6 = this.exitPortalPattern.find(this.level, var5.getBlockPos());
                   if (var6 != null) {
                      BlockPos var7 = var6.getBlock(3, 3, 3).getPos();
-                     if (this.portalLocation == null && var7.getX() == 0 && var7.getZ() == 0) {
+                     if (this.portalLocation == null) {
                         this.portalLocation = var7;
                      }
 
                      return var6;
                   }
@@ -293,11 +306,11 @@
          }
       }
 
       var1 = this.level.getHeightmapPos(Heightmap.Types.MOTION_BLOCKING, EndPodiumFeature.END_PODIUM_LOCATION).getY();
 
-      for(var2 = var1; var2 >= 0; --var2) {
+      for(var2 = var1; var2 >= this.level.getMinBuildHeight(); --var2) {
          BlockPattern.BlockPatternMatch var8 = this.exitPortalPattern.find(this.level, new BlockPos(EndPodiumFeature.END_PODIUM_LOCATION.getX(), var2, EndPodiumFeature.END_PODIUM_LOCATION.getZ()));
          if (var8 != null) {
             if (this.portalLocation == null) {
                this.portalLocation = var8.getBlock(3, 3, 3).getPos();
             }
@@ -360,11 +373,11 @@
       LOGGER.debug((String)"Found {} end crystals still alive", (Object)this.crystalsAlive);
    }
 
    public void setDragonKilled(EnderDragon var1) {
       if (var1.getUUID().equals(this.dragonUUID)) {
-         this.dragonEvent.setPercent(0.0F);
+         this.dragonEvent.setProgress(0.0F);
          this.dragonEvent.setVisible(false);
          this.spawnExitPortal(true);
          this.spawnNewGateway();
          if (!this.previouslyKilled) {
             this.level.setBlockAndUpdate(this.level.getHeightmapPos(Heightmap.Types.MOTION_BLOCKING, EndPodiumFeature.END_PODIUM_LOCATION), Blocks.DRAGON_EGG.defaultBlockState());
@@ -410,11 +423,11 @@
       return var1;
    }
 
    public void updateDragon(EnderDragon var1) {
       if (var1.getUUID().equals(this.dragonUUID)) {
-         this.dragonEvent.setPercent(var1.getHealth() / var1.getMaxHealth());
+         this.dragonEvent.setProgress(var1.getHealth() / var1.getMaxHealth());
          this.ticksSinceDragonSeen = 0;
          if (var1.hasCustomName()) {
             this.dragonEvent.setName(var1.getDisplayName());
          }
       }
@@ -454,11 +467,11 @@
             BlockPattern.BlockPatternMatch var2 = this.findExitPortal();
             if (var2 == null) {
                LOGGER.debug("Couldn't find a portal, so we made one.");
                this.spawnExitPortal(true);
             } else {
-               LOGGER.debug("Found the exit portal & temporarily using it.");
+               LOGGER.debug("Found the exit portal & saved its location for next time.");
             }
 
             var1 = this.portalLocation;
          }
 
