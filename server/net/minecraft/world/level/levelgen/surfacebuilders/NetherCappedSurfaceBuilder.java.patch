--- net/minecraft/world/level/levelgen/surfacebuilders/NetherCappedSurfaceBuilder.java
+++ net/minecraft/world/level/levelgen/surfacebuilders/NetherCappedSurfaceBuilder.java
@@ -23,57 +23,57 @@
 
    public NetherCappedSurfaceBuilder(Codec<SurfaceBuilderBaseConfiguration> var1) {
       super(var1);
    }
 
-   public void apply(Random var1, ChunkAccess var2, Biome var3, int var4, int var5, int var6, double var7, BlockState var9, BlockState var10, int var11, long var12, SurfaceBuilderBaseConfiguration var14) {
-      int var15 = var11 + 1;
-      int var16 = var4 & 15;
-      int var17 = var5 & 15;
-      int var18 = (int)(var7 / 3.0D + 3.0D + var1.nextDouble() * 0.25D);
+   public void apply(Random var1, ChunkAccess var2, Biome var3, int var4, int var5, int var6, double var7, BlockState var9, BlockState var10, int var11, int var12, long var13, SurfaceBuilderBaseConfiguration var15) {
+      int var16 = var11 + 1;
+      int var17 = var4 & 15;
+      int var18 = var5 & 15;
       int var19 = (int)(var7 / 3.0D + 3.0D + var1.nextDouble() * 0.25D);
-      double var20 = 0.03125D;
-      boolean var22 = this.patchNoise.getValue((double)var4 * 0.03125D, 109.0D, (double)var5 * 0.03125D) * 75.0D + var1.nextDouble() > 0.0D;
-      BlockState var23 = (BlockState)((Entry)this.ceilingNoises.entrySet().stream().max(Comparator.comparing((var3x) -> {
+      int var20 = (int)(var7 / 3.0D + 3.0D + var1.nextDouble() * 0.25D);
+      double var21 = 0.03125D;
+      boolean var23 = this.patchNoise.getValue((double)var4 * 0.03125D, 109.0D, (double)var5 * 0.03125D) * 75.0D + var1.nextDouble() > 0.0D;
+      BlockState var24 = (BlockState)((Entry)this.ceilingNoises.entrySet().stream().max(Comparator.comparing((var3x) -> {
          return ((PerlinNoise)var3x.getValue()).getValue((double)var4, (double)var11, (double)var5);
       })).get()).getKey();
-      BlockState var24 = (BlockState)((Entry)this.floorNoises.entrySet().stream().max(Comparator.comparing((var3x) -> {
+      BlockState var25 = (BlockState)((Entry)this.floorNoises.entrySet().stream().max(Comparator.comparing((var3x) -> {
          return ((PerlinNoise)var3x.getValue()).getValue((double)var4, (double)var11, (double)var5);
       })).get()).getKey();
-      BlockPos.MutableBlockPos var25 = new BlockPos.MutableBlockPos();
-      BlockState var26 = var2.getBlockState(var25.set(var16, 128, var17));
+      BlockPos.MutableBlockPos var26 = new BlockPos.MutableBlockPos();
+      BlockState var27 = var2.getBlockState(var26.set(var17, 128, var18));
 
-      for(int var27 = 127; var27 >= 0; --var27) {
-         var25.set(var16, var27, var17);
-         BlockState var28 = var2.getBlockState(var25);
-         int var29;
-         if (var26.is(var9.getBlock()) && (var28.isAir() || var28 == var10)) {
-            for(var29 = 0; var29 < var18; ++var29) {
-               var25.move(Direction.UP);
-               if (!var2.getBlockState(var25).is(var9.getBlock())) {
+      for(int var28 = 127; var28 >= var12; --var28) {
+         var26.set(var17, var28, var18);
+         BlockState var29 = var2.getBlockState(var26);
+         int var30;
+         if (var27.is(var9.getBlock()) && (var29.isAir() || var29 == var10)) {
+            for(var30 = 0; var30 < var19; ++var30) {
+               var26.move(Direction.UP);
+               if (!var2.getBlockState(var26).is(var9.getBlock())) {
                   break;
                }
 
-               var2.setBlockState(var25, var23, false);
+               var2.setBlockState(var26, var24, false);
             }
 
-            var25.set(var16, var27, var17);
+            var26.set(var17, var28, var18);
          }
 
-         if ((var26.isAir() || var26 == var10) && var28.is(var9.getBlock())) {
-            for(var29 = 0; var29 < var19 && var2.getBlockState(var25).is(var9.getBlock()); ++var29) {
-               if (var22 && var27 >= var15 - 4 && var27 <= var15 + 1) {
-                  var2.setBlockState(var25, this.getPatchBlockState(), false);
+         if ((var27.isAir() || var27 == var10) && var29.is(var9.getBlock())) {
+            for(var30 = 0; var30 < var20 && var2.getBlockState(var26).is(var9.getBlock()); ++var30) {
+               if (var23 && var28 >= var16 - 4 && var28 <= var16 + 1) {
+                  var2.setBlockState(var26, this.getPatchBlockState(), false);
                } else {
-                  var2.setBlockState(var25, var24, false);
+                  var2.setBlockState(var26, var25, false);
                }
 
-               var25.move(Direction.DOWN);
+               var26.move(Direction.DOWN);
             }
          }
 
-         var26 = var28;
+         var27 = var29;
       }
 
    }
 
    public void initNoise(long var1) {
