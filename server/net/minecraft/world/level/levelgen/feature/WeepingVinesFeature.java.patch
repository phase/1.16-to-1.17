--- net/minecraft/world/level/levelgen/feature/WeepingVinesFeature.java
+++ net/minecraft/world/level/levelgen/feature/WeepingVinesFeature.java
@@ -8,30 +8,32 @@
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.WorldGenLevel;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.GrowingPlantHeadBlock;
 import net.minecraft.world.level.block.state.BlockState;
-import net.minecraft.world.level.chunk.ChunkGenerator;
 import net.minecraft.world.level.levelgen.feature.configurations.NoneFeatureConfiguration;
 
 public class WeepingVinesFeature extends Feature<NoneFeatureConfiguration> {
    private static final Direction[] DIRECTIONS = Direction.values();
 
    public WeepingVinesFeature(Codec<NoneFeatureConfiguration> var1) {
       super(var1);
    }
 
-   public boolean place(WorldGenLevel var1, ChunkGenerator var2, Random var3, BlockPos var4, NoneFeatureConfiguration var5) {
-      if (!var1.isEmptyBlock(var4)) {
+   public boolean place(FeaturePlaceContext<NoneFeatureConfiguration> var1) {
+      WorldGenLevel var2 = var1.level();
+      BlockPos var3 = var1.origin();
+      Random var4 = var1.random();
+      if (!var2.isEmptyBlock(var3)) {
          return false;
       } else {
-         BlockState var6 = var1.getBlockState(var4.above());
-         if (!var6.is(Blocks.NETHERRACK) && !var6.is(Blocks.NETHER_WART_BLOCK)) {
+         BlockState var5 = var2.getBlockState(var3.above());
+         if (!var5.is(Blocks.NETHERRACK) && !var5.is(Blocks.NETHER_WART_BLOCK)) {
             return false;
          } else {
-            this.placeRoofNetherWart(var1, var3, var4);
-            this.placeRoofWeepingVines(var1, var3, var4);
+            this.placeRoofNetherWart(var2, var4, var3);
+            this.placeRoofWeepingVines(var2, var4, var3);
             return true;
          }
       }
    }
 
