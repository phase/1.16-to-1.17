--- net/minecraft/world/level/levelgen/feature/structures/ListPoolElement.java
+++ net/minecraft/world/level/levelgen/feature/structures/ListPoolElement.java
@@ -5,11 +5,13 @@
 import java.util.Iterator;
 import java.util.List;
 import java.util.Random;
 import java.util.function.BiFunction;
 import java.util.stream.Collectors;
+import java.util.stream.Stream;
 import net.minecraft.core.BlockPos;
+import net.minecraft.core.Vec3i;
 import net.minecraft.world.level.StructureFeatureManager;
 import net.minecraft.world.level.WorldGenLevel;
 import net.minecraft.world.level.block.Rotation;
 import net.minecraft.world.level.chunk.ChunkGenerator;
 import net.minecraft.world.level.levelgen.structure.BoundingBox;
@@ -32,25 +34,40 @@
          this.elements = var1;
          this.setProjectionOnEachElement(var2);
       }
    }
 
+   public Vec3i getSize(StructureManager var1, Rotation var2) {
+      int var3 = 0;
+      int var4 = 0;
+      int var5 = 0;
+
+      Vec3i var8;
+      for(Iterator var6 = this.elements.iterator(); var6.hasNext(); var5 = Math.max(var5, var8.getZ())) {
+         StructurePoolElement var7 = (StructurePoolElement)var6.next();
+         var8 = var7.getSize(var1, var2);
+         var3 = Math.max(var3, var8.getX());
+         var4 = Math.max(var4, var8.getY());
+      }
+
+      return new Vec3i(var3, var4, var5);
+   }
+
    public List<StructureTemplate.StructureBlockInfo> getShuffledJigsawBlocks(StructureManager var1, BlockPos var2, Rotation var3, Random var4) {
       return ((StructurePoolElement)this.elements.get(0)).getShuffledJigsawBlocks(var1, var2, var3, var4);
    }
 
    public BoundingBox getBoundingBox(StructureManager var1, BlockPos var2, Rotation var3) {
-      BoundingBox var4 = BoundingBox.getUnknownBox();
-      Iterator var5 = this.elements.iterator();
-
-      while(var5.hasNext()) {
-         StructurePoolElement var6 = (StructurePoolElement)var5.next();
-         BoundingBox var7 = var6.getBoundingBox(var1, var2, var3);
-         var4.expand(var7);
-      }
-
-      return var4;
+      Stream var4 = this.elements.stream().filter((var0) -> {
+         return var0 != EmptyPoolElement.INSTANCE;
+      }).map((var3x) -> {
+         return var3x.getBoundingBox(var1, var2, var3);
+      });
+      var4.getClass();
+      return (BoundingBox)BoundingBox.encapsulatingBoxes(var4::iterator).orElseThrow(() -> {
+         return new IllegalStateException("Unable to calculate boundingbox for ListPoolElement");
+      });
    }
 
    public boolean place(StructureManager var1, WorldGenLevel var2, StructureFeatureManager var3, ChunkGenerator var4, BlockPos var5, BlockPos var6, Rotation var7, BoundingBox var8, Random var9, boolean var10) {
       Iterator var11 = this.elements.iterator();
 
