--- net/minecraft/world/level/levelgen/feature/NoSurfaceOreFeature.java
+++ net/minecraft/world/level/levelgen/feature/NoSurfaceOreFeature.java
@@ -4,26 +4,29 @@
 import java.util.Random;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.WorldGenLevel;
-import net.minecraft.world.level.chunk.ChunkGenerator;
 import net.minecraft.world.level.levelgen.feature.configurations.OreConfiguration;
 
 public class NoSurfaceOreFeature extends Feature<OreConfiguration> {
    NoSurfaceOreFeature(Codec<OreConfiguration> var1) {
       super(var1);
    }
 
-   public boolean place(WorldGenLevel var1, ChunkGenerator var2, Random var3, BlockPos var4, OreConfiguration var5) {
-      int var6 = var3.nextInt(var5.size + 1);
+   public boolean place(FeaturePlaceContext<OreConfiguration> var1) {
+      WorldGenLevel var2 = var1.level();
+      Random var3 = var1.random();
+      OreConfiguration var4 = (OreConfiguration)var1.config();
+      BlockPos var5 = var1.origin();
+      int var6 = var3.nextInt(var4.size + 1);
       BlockPos.MutableBlockPos var7 = new BlockPos.MutableBlockPos();
 
       for(int var8 = 0; var8 < var6; ++var8) {
-         this.offsetTargetPos(var7, var3, var4, Math.min(var8, 7));
-         if (var5.target.test(var1.getBlockState(var7), var3) && !this.isFacingAir(var1, var7)) {
-            var1.setBlock(var7, var5.state, 2);
+         this.offsetTargetPos(var7, var3, var5, Math.min(var8, 7));
+         if (var4.target.test(var2.getBlockState(var7), var3) && !this.isFacingAir(var2, var7)) {
+            var2.setBlock(var7, var4.state, 2);
          }
       }
 
       return true;
    }
