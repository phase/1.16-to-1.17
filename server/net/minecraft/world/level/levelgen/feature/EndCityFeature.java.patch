--- net/minecraft/world/level/levelgen/feature/EndCityFeature.java
+++ net/minecraft/world/level/levelgen/feature/EndCityFeature.java
@@ -2,10 +2,11 @@
 
 import com.mojang.serialization.Codec;
 import java.util.Random;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.RegistryAccess;
+import net.minecraft.core.SectionPos;
 import net.minecraft.world.level.ChunkPos;
 import net.minecraft.world.level.biome.Biome;
 import net.minecraft.world.level.biome.BiomeSource;
 import net.minecraft.world.level.block.Rotation;
 import net.minecraft.world.level.chunk.ChunkGenerator;
@@ -46,12 +47,12 @@
          var6 = -5;
       } else if (var4 == Rotation.COUNTERCLOCKWISE_90) {
          var6 = -5;
       }
 
-      int var7 = (var0 << 4) + 7;
-      int var8 = (var1 << 4) + 7;
+      int var7 = SectionPos.sectionToBlockCoord(var0, 7);
+      int var8 = SectionPos.sectionToBlockCoord(var1, 7);
       int var9 = var2.getFirstOccupiedHeight(var7, var8, Heightmap.Types.WORLD_SURFACE_WG);
       int var10 = var2.getFirstOccupiedHeight(var7, var8 + var6, Heightmap.Types.WORLD_SURFACE_WG);
       int var11 = var2.getFirstOccupiedHeight(var7 + var5, var8, Heightmap.Types.WORLD_SURFACE_WG);
       int var12 = var2.getFirstOccupiedHeight(var7 + var5, var8 + var6, Heightmap.Types.WORLD_SURFACE_WG);
       return Math.min(Math.min(var9, var10), Math.min(var11, var12));
@@ -64,11 +65,11 @@
 
       public void generatePieces(RegistryAccess var1, ChunkGenerator var2, StructureManager var3, int var4, int var5, Biome var6, NoneFeatureConfiguration var7) {
          Rotation var8 = Rotation.getRandom(this.random);
          int var9 = EndCityFeature.getYPositionForFeature(var4, var5, var2);
          if (var9 >= 60) {
-            BlockPos var10 = new BlockPos(var4 * 16 + 8, var9, var5 * 16 + 8);
+            BlockPos var10 = new BlockPos(SectionPos.sectionToBlockCoord(var4, 8), var9, SectionPos.sectionToBlockCoord(var5, 8));
             EndCityPieces.startHouseTower(var3, var10, var8, this.pieces, this.random);
             this.calculateBoundingBox();
          }
       }
    }
