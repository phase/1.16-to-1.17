--- net/minecraft/world/level/levelgen/feature/treedecorators/TrunkVineDecorator.java
+++ net/minecraft/world/level/levelgen/feature/treedecorators/TrunkVineDecorator.java
@@ -1,16 +1,16 @@
 package net.minecraft.world.level.levelgen.feature.treedecorators;
 
 import com.mojang.serialization.Codec;
 import java.util.List;
 import java.util.Random;
-import java.util.Set;
+import java.util.function.BiConsumer;
 import net.minecraft.core.BlockPos;
-import net.minecraft.world.level.WorldGenLevel;
+import net.minecraft.world.level.LevelSimulatedReader;
 import net.minecraft.world.level.block.VineBlock;
+import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.levelgen.feature.Feature;
-import net.minecraft.world.level.levelgen.structure.BoundingBox;
 
 public class TrunkVineDecorator extends TreeDecorator {
    public static final Codec<TrunkVineDecorator> CODEC = Codec.unit(() -> {
       return INSTANCE;
    });
@@ -21,38 +21,38 @@
 
    protected TreeDecoratorType<?> type() {
       return TreeDecoratorType.TRUNK_VINE;
    }
 
-   public void place(WorldGenLevel var1, Random var2, List<BlockPos> var3, List<BlockPos> var4, Set<BlockPos> var5, BoundingBox var6) {
-      var3.forEach((var5x) -> {
-         BlockPos var6x;
-         if (var2.nextInt(3) > 0) {
-            var6x = var5x.west();
-            if (Feature.isAir(var1, var6x)) {
-               this.placeVine(var1, var6x, VineBlock.EAST, var5, var6);
+   public void place(LevelSimulatedReader var1, BiConsumer<BlockPos, BlockState> var2, Random var3, List<BlockPos> var4, List<BlockPos> var5) {
+      var4.forEach((var3x) -> {
+         BlockPos var4;
+         if (var3.nextInt(3) > 0) {
+            var4 = var3x.west();
+            if (Feature.isAir(var1, var4)) {
+               placeVine(var2, var4, VineBlock.EAST);
             }
          }
 
-         if (var2.nextInt(3) > 0) {
-            var6x = var5x.east();
-            if (Feature.isAir(var1, var6x)) {
-               this.placeVine(var1, var6x, VineBlock.WEST, var5, var6);
+         if (var3.nextInt(3) > 0) {
+            var4 = var3x.east();
+            if (Feature.isAir(var1, var4)) {
+               placeVine(var2, var4, VineBlock.WEST);
             }
          }
 
-         if (var2.nextInt(3) > 0) {
-            var6x = var5x.north();
-            if (Feature.isAir(var1, var6x)) {
-               this.placeVine(var1, var6x, VineBlock.SOUTH, var5, var6);
+         if (var3.nextInt(3) > 0) {
+            var4 = var3x.north();
+            if (Feature.isAir(var1, var4)) {
+               placeVine(var2, var4, VineBlock.SOUTH);
             }
          }
 
-         if (var2.nextInt(3) > 0) {
-            var6x = var5x.south();
-            if (Feature.isAir(var1, var6x)) {
-               this.placeVine(var1, var6x, VineBlock.NORTH, var5, var6);
+         if (var3.nextInt(3) > 0) {
+            var4 = var3x.south();
+            if (Feature.isAir(var1, var4)) {
+               placeVine(var2, var4, VineBlock.NORTH);
             }
          }
 
       });
    }
