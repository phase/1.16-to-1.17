--- net/minecraft/world/level/levelgen/feature/RandomSelectorFeature.java
+++ net/minecraft/world/level/levelgen/feature/RandomSelectorFeature.java
@@ -11,20 +11,25 @@
 public class RandomSelectorFeature extends Feature<RandomFeatureConfiguration> {
    public RandomSelectorFeature(Codec<RandomFeatureConfiguration> var1) {
       super(var1);
    }
 
-   public boolean place(WorldGenLevel var1, ChunkGenerator var2, Random var3, BlockPos var4, RandomFeatureConfiguration var5) {
-      Iterator var6 = var5.features.iterator();
+   public boolean place(FeaturePlaceContext<RandomFeatureConfiguration> var1) {
+      RandomFeatureConfiguration var2 = (RandomFeatureConfiguration)var1.config();
+      Random var3 = var1.random();
+      WorldGenLevel var4 = var1.level();
+      ChunkGenerator var5 = var1.chunkGenerator();
+      BlockPos var6 = var1.origin();
+      Iterator var7 = var2.features.iterator();
 
-      WeightedConfiguredFeature var7;
+      WeightedConfiguredFeature var8;
       do {
-         if (!var6.hasNext()) {
-            return ((ConfiguredFeature)var5.defaultFeature.get()).place(var1, var2, var3, var4);
+         if (!var7.hasNext()) {
+            return ((ConfiguredFeature)var2.defaultFeature.get()).place(var4, var5, var3, var6);
          }
 
-         var7 = (WeightedConfiguredFeature)var6.next();
-      } while(var3.nextFloat() >= var7.chance);
+         var8 = (WeightedConfiguredFeature)var7.next();
+      } while(var3.nextFloat() >= var8.chance);
 
-      return var7.place(var1, var2, var3, var4);
+      return var8.place(var4, var5, var3, var6);
    }
 }
