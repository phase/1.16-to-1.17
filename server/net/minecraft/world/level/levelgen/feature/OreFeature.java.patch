--- net/minecraft/world/level/levelgen/feature/OreFeature.java
+++ net/minecraft/world/level/levelgen/feature/OreFeature.java
@@ -5,40 +5,43 @@
 import java.util.Random;
 import net.minecraft.core.BlockPos;
 import net.minecraft.util.Mth;
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.WorldGenLevel;
-import net.minecraft.world.level.chunk.ChunkGenerator;
 import net.minecraft.world.level.levelgen.Heightmap;
 import net.minecraft.world.level.levelgen.feature.configurations.OreConfiguration;
 
 public class OreFeature extends Feature<OreConfiguration> {
    public OreFeature(Codec<OreConfiguration> var1) {
       super(var1);
    }
 
-   public boolean place(WorldGenLevel var1, ChunkGenerator var2, Random var3, BlockPos var4, OreConfiguration var5) {
-      float var6 = var3.nextFloat() * 3.1415927F;
+   public boolean place(FeaturePlaceContext<OreConfiguration> var1) {
+      Random var2 = var1.random();
+      BlockPos var3 = var1.origin();
+      WorldGenLevel var4 = var1.level();
+      OreConfiguration var5 = (OreConfiguration)var1.config();
+      float var6 = var2.nextFloat() * 3.1415927F;
       float var7 = (float)var5.size / 8.0F;
       int var8 = Mth.ceil(((float)var5.size / 16.0F * 2.0F + 1.0F) / 2.0F);
-      double var9 = (double)var4.getX() + Math.sin((double)var6) * (double)var7;
-      double var11 = (double)var4.getX() - Math.sin((double)var6) * (double)var7;
-      double var13 = (double)var4.getZ() + Math.cos((double)var6) * (double)var7;
-      double var15 = (double)var4.getZ() - Math.cos((double)var6) * (double)var7;
+      double var9 = (double)var3.getX() + Math.sin((double)var6) * (double)var7;
+      double var11 = (double)var3.getX() - Math.sin((double)var6) * (double)var7;
+      double var13 = (double)var3.getZ() + Math.cos((double)var6) * (double)var7;
+      double var15 = (double)var3.getZ() - Math.cos((double)var6) * (double)var7;
       boolean var17 = true;
-      double var18 = (double)(var4.getY() + var3.nextInt(3) - 2);
-      double var20 = (double)(var4.getY() + var3.nextInt(3) - 2);
-      int var22 = var4.getX() - Mth.ceil(var7) - var8;
-      int var23 = var4.getY() - 2 - var8;
-      int var24 = var4.getZ() - Mth.ceil(var7) - var8;
+      double var18 = (double)(var3.getY() + var2.nextInt(3) - 2);
+      double var20 = (double)(var3.getY() + var2.nextInt(3) - 2);
+      int var22 = var3.getX() - Mth.ceil(var7) - var8;
+      int var23 = var3.getY() - 2 - var8;
+      int var24 = var3.getZ() - Mth.ceil(var7) - var8;
       int var25 = 2 * (Mth.ceil(var7) + var8);
       int var26 = 2 * (2 + var8);
 
       for(int var27 = var22; var27 <= var22 + var25; ++var27) {
          for(int var28 = var24; var28 <= var24 + var25; ++var28) {
-            if (var23 <= var1.getHeight(Heightmap.Types.OCEAN_FLOOR_WG, var27, var28)) {
-               return this.doPlace(var1, var3, var5, var9, var11, var13, var15, var18, var20, var22, var23, var24, var25, var26);
+            if (var23 <= var4.getHeight(Heightmap.Types.OCEAN_FLOOR_WG, var27, var28)) {
+               return this.doPlace(var4, var2, var5, var9, var11, var13, var15, var18, var20, var22, var23, var24, var25, var26);
             }
          }
       }
 
       return false;
