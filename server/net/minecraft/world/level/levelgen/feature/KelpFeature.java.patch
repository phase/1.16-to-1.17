--- net/minecraft/world/level/levelgen/feature/KelpFeature.java
+++ net/minecraft/world/level/levelgen/feature/KelpFeature.java
@@ -5,47 +5,49 @@
 import net.minecraft.core.BlockPos;
 import net.minecraft.world.level.WorldGenLevel;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.KelpBlock;
 import net.minecraft.world.level.block.state.BlockState;
-import net.minecraft.world.level.chunk.ChunkGenerator;
 import net.minecraft.world.level.levelgen.Heightmap;
 import net.minecraft.world.level.levelgen.feature.configurations.NoneFeatureConfiguration;
 
 public class KelpFeature extends Feature<NoneFeatureConfiguration> {
    public KelpFeature(Codec<NoneFeatureConfiguration> var1) {
       super(var1);
    }
 
-   public boolean place(WorldGenLevel var1, ChunkGenerator var2, Random var3, BlockPos var4, NoneFeatureConfiguration var5) {
-      int var6 = 0;
-      int var7 = var1.getHeight(Heightmap.Types.OCEAN_FLOOR, var4.getX(), var4.getZ());
-      BlockPos var8 = new BlockPos(var4.getX(), var7, var4.getZ());
-      if (var1.getBlockState(var8).is(Blocks.WATER)) {
-         BlockState var9 = Blocks.KELP.defaultBlockState();
-         BlockState var10 = Blocks.KELP_PLANT.defaultBlockState();
-         int var11 = 1 + var3.nextInt(10);
+   public boolean place(FeaturePlaceContext<NoneFeatureConfiguration> var1) {
+      int var2 = 0;
+      WorldGenLevel var3 = var1.level();
+      BlockPos var4 = var1.origin();
+      Random var5 = var1.random();
+      int var6 = var3.getHeight(Heightmap.Types.OCEAN_FLOOR, var4.getX(), var4.getZ());
+      BlockPos var7 = new BlockPos(var4.getX(), var6, var4.getZ());
+      if (var3.getBlockState(var7).is(Blocks.WATER)) {
+         BlockState var8 = Blocks.KELP.defaultBlockState();
+         BlockState var9 = Blocks.KELP_PLANT.defaultBlockState();
+         int var10 = 1 + var5.nextInt(10);
 
-         for(int var12 = 0; var12 <= var11; ++var12) {
-            if (var1.getBlockState(var8).is(Blocks.WATER) && var1.getBlockState(var8.above()).is(Blocks.WATER) && var10.canSurvive(var1, var8)) {
-               if (var12 == var11) {
-                  var1.setBlock(var8, (BlockState)var9.setValue(KelpBlock.AGE, var3.nextInt(4) + 20), 2);
-                  ++var6;
+         for(int var11 = 0; var11 <= var10; ++var11) {
+            if (var3.getBlockState(var7).is(Blocks.WATER) && var3.getBlockState(var7.above()).is(Blocks.WATER) && var9.canSurvive(var3, var7)) {
+               if (var11 == var10) {
+                  var3.setBlock(var7, (BlockState)var8.setValue(KelpBlock.AGE, var5.nextInt(4) + 20), 2);
+                  ++var2;
                } else {
-                  var1.setBlock(var8, var10, 2);
+                  var3.setBlock(var7, var9, 2);
                }
-            } else if (var12 > 0) {
-               BlockPos var13 = var8.below();
-               if (var9.canSurvive(var1, var13) && !var1.getBlockState(var13.below()).is(Blocks.KELP)) {
-                  var1.setBlock(var13, (BlockState)var9.setValue(KelpBlock.AGE, var3.nextInt(4) + 20), 2);
-                  ++var6;
+            } else if (var11 > 0) {
+               BlockPos var12 = var7.below();
+               if (var8.canSurvive(var3, var12) && !var3.getBlockState(var12.below()).is(Blocks.KELP)) {
+                  var3.setBlock(var12, (BlockState)var8.setValue(KelpBlock.AGE, var5.nextInt(4) + 20), 2);
+                  ++var2;
                }
                break;
             }
 
-            var8 = var8.above();
+            var7 = var7.above();
          }
       }
 
-      return var6 > 0;
+      return var2 > 0;
    }
 }
