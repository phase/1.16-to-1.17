--- net/minecraft/world/level/levelgen/WorldGenSettings.java
+++ net/minecraft/world/level/levelgen/WorldGenSettings.java
@@ -20,11 +20,10 @@
 import java.util.function.Function;
 import java.util.function.Supplier;
 import net.minecraft.core.MappedRegistry;
 import net.minecraft.core.Registry;
 import net.minecraft.core.RegistryAccess;
-import net.minecraft.core.WritableRegistry;
 import net.minecraft.resources.ResourceKey;
 import net.minecraft.util.GsonHelper;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.biome.Biome;
 import net.minecraft.world.level.biome.OverworldBiomeSource;
@@ -76,14 +75,14 @@
       this.dimensions = var5;
       this.legacyCustomOptions = var6;
    }
 
    public static WorldGenSettings demoSettings(RegistryAccess var0) {
-      WritableRegistry var1 = var0.registryOrThrow(Registry.BIOME_REGISTRY);
+      Registry var1 = var0.registryOrThrow(Registry.BIOME_REGISTRY);
       int var2 = "North Carolina".hashCode();
-      WritableRegistry var3 = var0.registryOrThrow(Registry.DIMENSION_TYPE_REGISTRY);
-      WritableRegistry var4 = var0.registryOrThrow(Registry.NOISE_GENERATOR_SETTINGS_REGISTRY);
+      Registry var3 = var0.registryOrThrow(Registry.DIMENSION_TYPE_REGISTRY);
+      Registry var4 = var0.registryOrThrow(Registry.NOISE_GENERATOR_SETTINGS_REGISTRY);
       return new WorldGenSettings((long)var2, true, true, withOverworld((Registry)var3, (MappedRegistry)DimensionType.defaultDimensions(var3, var1, var4, (long)var2), makeDefaultOverworld(var1, var4, (long)var2)));
    }
 
    public static WorldGenSettings makeDefault(Registry<DimensionType> var0, Registry<Biome> var1, Registry<NoiseGeneratorSettings> var2) {
       long var3 = (new Random()).nextLong();
@@ -186,13 +185,13 @@
          } catch (NumberFormatException var18) {
             var8 = (long)var3.hashCode();
          }
       }
 
-      WritableRegistry var19 = var0.registryOrThrow(Registry.DIMENSION_TYPE_REGISTRY);
-      WritableRegistry var11 = var0.registryOrThrow(Registry.BIOME_REGISTRY);
-      WritableRegistry var12 = var0.registryOrThrow(Registry.NOISE_GENERATOR_SETTINGS_REGISTRY);
+      Registry var19 = var0.registryOrThrow(Registry.DIMENSION_TYPE_REGISTRY);
+      Registry var11 = var0.registryOrThrow(Registry.BIOME_REGISTRY);
+      Registry var12 = var0.registryOrThrow(Registry.NOISE_GENERATOR_SETTINGS_REGISTRY);
       MappedRegistry var13 = DimensionType.defaultDimensions(var19, var11, var12, var8);
       byte var15 = -1;
       switch(var7.hashCode()) {
       case -1100099890:
          if (var7.equals("largebiomes")) {
