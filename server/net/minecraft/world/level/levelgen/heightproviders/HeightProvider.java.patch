--- net/minecraft/world/level/levelgen/heightproviders/HeightProvider.java
+++ net/minecraft/world/level/levelgen/heightproviders/HeightProvider.java
@@ -1,0 +1,31 @@
+package net.minecraft.world.level.levelgen.heightproviders;
+
+import com.mojang.datafixers.util.Either;
+import com.mojang.serialization.Codec;
+import java.util.Random;
+import net.minecraft.core.Registry;
+import net.minecraft.world.level.levelgen.VerticalAnchor;
+import net.minecraft.world.level.levelgen.WorldGenerationContext;
+
+public abstract class HeightProvider {
+   private static final Codec<Either<VerticalAnchor, HeightProvider>> CONSTANT_OR_DISPATCH_CODEC;
+   public static final Codec<HeightProvider> CODEC;
+
+   public HeightProvider() {
+   }
+
+   public abstract int sample(Random var1, WorldGenerationContext var2);
+
+   public abstract HeightProviderType<?> getType();
+
+   static {
+      CONSTANT_OR_DISPATCH_CODEC = Codec.either(VerticalAnchor.CODEC, Registry.HEIGHT_PROVIDER_TYPES.dispatch(HeightProvider::getType, HeightProviderType::codec));
+      CODEC = CONSTANT_OR_DISPATCH_CODEC.xmap((var0) -> {
+         return (HeightProvider)var0.map(ConstantHeight::of, (var0x) -> {
+            return var0x;
+         });
+      }, (var0) -> {
+         return var0.getType() == HeightProviderType.CONSTANT ? Either.left(((ConstantHeight)var0).getValue()) : Either.right(var0);
+      });
+   }
+}
