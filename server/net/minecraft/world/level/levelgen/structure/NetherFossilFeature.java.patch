--- net/minecraft/world/level/levelgen/structure/NetherFossilFeature.java
+++ net/minecraft/world/level/levelgen/structure/NetherFossilFeature.java
@@ -2,12 +2,13 @@
 
 import com.mojang.serialization.Codec;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.core.RegistryAccess;
-import net.minecraft.world.level.BlockGetter;
 import net.minecraft.world.level.ChunkPos;
+import net.minecraft.world.level.EmptyBlockGetter;
+import net.minecraft.world.level.NoiseColumn;
 import net.minecraft.world.level.biome.Biome;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.chunk.ChunkGenerator;
 import net.minecraft.world.level.levelgen.feature.StructureFeature;
@@ -32,17 +33,17 @@
          ChunkPos var8 = new ChunkPos(var4, var5);
          int var9 = var8.getMinBlockX() + this.random.nextInt(16);
          int var10 = var8.getMinBlockZ() + this.random.nextInt(16);
          int var11 = var2.getSeaLevel();
          int var12 = var11 + this.random.nextInt(var2.getGenDepth() - 2 - var11);
-         BlockGetter var13 = var2.getBaseColumn(var9, var10);
+         NoiseColumn var13 = var2.getBaseColumn(var9, var10);
 
          for(BlockPos.MutableBlockPos var14 = new BlockPos.MutableBlockPos(var9, var12, var10); var12 > var11; --var12) {
             BlockState var15 = var13.getBlockState(var14);
             var14.move(Direction.DOWN);
             BlockState var16 = var13.getBlockState(var14);
-            if (var15.isAir() && (var16.is(Blocks.SOUL_SAND) || var16.isFaceSturdy(var13, var14, Direction.UP))) {
+            if (var15.isAir() && (var16.is(Blocks.SOUL_SAND) || var16.isFaceSturdy(EmptyBlockGetter.INSTANCE, var14, Direction.UP))) {
                break;
             }
          }
 
          if (var12 > var11) {
