--- net/minecraft/world/level/newbiome/context/LazyAreaContext.java
+++ net/minecraft/world/level/newbiome/context/LazyAreaContext.java
@@ -1,24 +1,25 @@
 package net.minecraft.world.level.newbiome.context;
 
 import it.unimi.dsi.fastutil.longs.Long2IntLinkedOpenHashMap;
-import java.util.Random;
 import net.minecraft.util.LinearCongruentialGenerator;
+import net.minecraft.world.level.levelgen.SimpleRandomSource;
 import net.minecraft.world.level.levelgen.synth.ImprovedNoise;
 import net.minecraft.world.level.newbiome.area.LazyArea;
 import net.minecraft.world.level.newbiome.layer.traits.PixelTransformer;
 
 public class LazyAreaContext implements BigContext<LazyArea> {
+   private static final int MAX_CACHE = 1024;
    private final Long2IntLinkedOpenHashMap cache;
    private final int maxCache;
    private final ImprovedNoise biomeNoise;
    private final long seed;
    private long rval;
 
    public LazyAreaContext(int var1, long var2, long var4) {
       this.seed = mixSeed(var2, var4);
-      this.biomeNoise = new ImprovedNoise(new Random(var2));
+      this.biomeNoise = new ImprovedNoise(new SimpleRandomSource(var2));
       this.cache = new Long2IntLinkedOpenHashMap(16, 0.25F);
       this.cache.defaultReturnValue(Integer.MIN_VALUE);
       this.maxCache = var1;
    }
 
@@ -42,11 +43,11 @@
       var5 = LinearCongruentialGenerator.next(var5, var3);
       this.rval = var5;
    }
 
    public int nextRandom(int var1) {
-      int var2 = (int)Math.floorMod(this.rval >> 24, (long)var1);
+      int var2 = Math.floorMod(this.rval >> 24, var1);
       this.rval = LinearCongruentialGenerator.next(this.rval, this.seed);
       return var2;
    }
 
    public ImprovedNoise getBiomeNoise() {
