--- net/minecraft/world/item/TridentItem.java
+++ net/minecraft/world/item/TridentItem.java
@@ -24,10 +24,13 @@
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.phys.Vec3;
 
 public class TridentItem extends Item implements Vanishable {
+   public static final int THROW_THRESHOLD_TIME = 10;
+   public static final float BASE_DAMAGE = 8.0F;
+   public static final float SHOOT_POWER = 2.5F;
    private final Multimap<Attribute, AttributeModifier> defaultModifiers;
 
    public TridentItem(Item.Properties var1) {
       super(var1);
       ImmutableMultimap.Builder var2 = ImmutableMultimap.builder();
@@ -60,18 +63,18 @@
                      var1x.broadcastBreakEvent(var3.getUsedItemHand());
                   });
                   if (var7 == 0) {
                      ThrownTrident var8 = new ThrownTrident(var2, var5, var1);
                      var8.shootFromRotation(var5, var5.xRot, var5.yRot, 0.0F, 2.5F + (float)var7 * 0.5F, 1.0F);
-                     if (var5.abilities.instabuild) {
+                     if (var5.getAbilities().instabuild) {
                         var8.pickup = AbstractArrow.Pickup.CREATIVE_ONLY;
                      }
 
                      var2.addFreshEntity(var8);
                      var2.playSound((Player)null, (Entity)var8, SoundEvents.TRIDENT_THROW, SoundSource.PLAYERS, 1.0F, 1.0F);
-                     if (!var5.abilities.instabuild) {
-                        var5.inventory.removeItem(var1);
+                     if (!var5.getAbilities().instabuild) {
+                        var5.getInventory().removeItem(var1);
                      }
                   }
                }
 
                var5.awardStat(Stats.ITEM_USED.get(this));
