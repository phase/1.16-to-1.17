--- net/minecraft/world/item/Items.java
+++ net/minecraft/world/item/Items.java
@@ -20,10 +20,15 @@
    public static final Item POLISHED_GRANITE;
    public static final Item DIORITE;
    public static final Item POLISHED_DIORITE;
    public static final Item ANDESITE;
    public static final Item POLISHED_ANDESITE;
+   public static final Item DEEPSLATE;
+   public static final Item COBBLED_DEEPSLATE;
+   public static final Item POLISHED_DEEPSLATE;
+   public static final Item CALCITE;
+   public static final Item TUFF;
    public static final Item GRASS_BLOCK;
    public static final Item DIRT;
    public static final Item COARSE_DIRT;
    public static final Item PODZOL;
    public static final Item CRIMSON_NYLIUM;
@@ -46,12 +51,17 @@
    public static final Item BEDROCK;
    public static final Item SAND;
    public static final Item RED_SAND;
    public static final Item GRAVEL;
    public static final Item GOLD_ORE;
+   public static final Item DEEPSLATE_GOLD_ORE;
    public static final Item IRON_ORE;
+   public static final Item DEEPSLATE_IRON_ORE;
+   public static final Item COPPER_ORE;
+   public static final Item DEEPSLATE_COPPER_ORE;
    public static final Item COAL_ORE;
+   public static final Item DEEPSLATE_COAL_ORE;
    public static final Item NETHER_GOLD_ORE;
    public static final Item OAK_LOG;
    public static final Item SPRUCE_LOG;
    public static final Item BIRCH_LOG;
    public static final Item JUNGLE_LOG;
@@ -87,30 +97,32 @@
    public static final Item SPRUCE_LEAVES;
    public static final Item BIRCH_LEAVES;
    public static final Item JUNGLE_LEAVES;
    public static final Item ACACIA_LEAVES;
    public static final Item DARK_OAK_LEAVES;
+   public static final Item AZALEA_LEAVES;
+   public static final Item AZALEA_LEAVES_FLOWERS;
    public static final Item SPONGE;
    public static final Item WET_SPONGE;
    public static final Item GLASS;
+   public static final Item TINTED_GLASS;
    public static final Item LAPIS_ORE;
+   public static final Item DEEPSLATE_LAPIS_ORE;
    public static final Item LAPIS_BLOCK;
-   public static final Item DISPENSER;
    public static final Item SANDSTONE;
    public static final Item CHISELED_SANDSTONE;
    public static final Item CUT_SANDSTONE;
-   public static final Item NOTE_BLOCK;
    public static final Item POWERED_RAIL;
    public static final Item DETECTOR_RAIL;
-   public static final Item STICKY_PISTON;
    public static final Item COBWEB;
    public static final Item GRASS;
    public static final Item FERN;
+   public static final Item AZALEA;
+   public static final Item FLOWERING_AZALEA;
    public static final Item DEAD_BUSH;
    public static final Item SEAGRASS;
    public static final Item SEA_PICKLE;
-   public static final Item PISTON;
    public static final Item WHITE_WOOL;
    public static final Item ORANGE_WOOL;
    public static final Item MAGENTA_WOOL;
    public static final Item LIGHT_BLUE_WOOL;
    public static final Item YELLOW_WOOL;
@@ -134,10 +146,11 @@
    public static final Item ORANGE_TULIP;
    public static final Item WHITE_TULIP;
    public static final Item PINK_TULIP;
    public static final Item OXEYE_DAISY;
    public static final Item CORNFLOWER;
+   public static final Item SPORE_BLOSSOM;
    public static final Item LILY_OF_THE_VALLEY;
    public static final Item WITHER_ROSE;
    public static final Item BROWN_MUSHROOM;
    public static final Item RED_MUSHROOM;
    public static final Item CRIMSON_FUNGUS;
@@ -147,10 +160,16 @@
    public static final Item NETHER_SPROUTS;
    public static final Item WEEPING_VINES;
    public static final Item TWISTING_VINES;
    public static final Item SUGAR_CANE;
    public static final Item KELP;
+   public static final Item MOSS_CARPET;
+   public static final Item MOSS_BLOCK;
+   public static final Item ROOTED_DIRT;
+   public static final Item HANGING_ROOTS;
+   public static final Item BIG_DRIPLEAF;
+   public static final Item SMALL_DRIPLEAF;
    public static final Item BAMBOO;
    public static final Item GOLD_BLOCK;
    public static final Item IRON_BLOCK;
    public static final Item OAK_SLAB;
    public static final Item SPRUCE_SLAB;
@@ -179,11 +198,10 @@
    public static final Item SMOOTH_QUARTZ;
    public static final Item SMOOTH_RED_SANDSTONE;
    public static final Item SMOOTH_SANDSTONE;
    public static final Item SMOOTH_STONE;
    public static final Item BRICKS;
-   public static final Item TNT;
    public static final Item BOOKSHELF;
    public static final Item MOSSY_COBBLESTONE;
    public static final Item OBSIDIAN;
    public static final Item TORCH;
    public static final Item END_ROD;
@@ -194,30 +212,20 @@
    public static final Item PURPUR_STAIRS;
    public static final Item SPAWNER;
    public static final Item OAK_STAIRS;
    public static final Item CHEST;
    public static final Item DIAMOND_ORE;
+   public static final Item DEEPSLATE_DIAMOND_ORE;
    public static final Item DIAMOND_BLOCK;
    public static final Item CRAFTING_TABLE;
    public static final Item FARMLAND;
    public static final Item FURNACE;
    public static final Item LADDER;
    public static final Item RAIL;
    public static final Item COBBLESTONE_STAIRS;
-   public static final Item LEVER;
-   public static final Item STONE_PRESSURE_PLATE;
-   public static final Item OAK_PRESSURE_PLATE;
-   public static final Item SPRUCE_PRESSURE_PLATE;
-   public static final Item BIRCH_PRESSURE_PLATE;
-   public static final Item JUNGLE_PRESSURE_PLATE;
-   public static final Item ACACIA_PRESSURE_PLATE;
-   public static final Item DARK_OAK_PRESSURE_PLATE;
-   public static final Item CRIMSON_PRESSURE_PLATE;
-   public static final Item WARPED_PRESSURE_PLATE;
-   public static final Item POLISHED_BLACKSTONE_PRESSURE_PLATE;
    public static final Item REDSTONE_ORE;
-   public static final Item REDSTONE_TORCH;
+   public static final Item DEEPSLATE_REDSTONE_ORE;
    public static final Item SNOW;
    public static final Item ICE;
    public static final Item SNOW_BLOCK;
    public static final Item CACTUS;
    public static final Item CLAY;
@@ -230,52 +238,44 @@
    public static final Item DARK_OAK_FENCE;
    public static final Item CRIMSON_FENCE;
    public static final Item WARPED_FENCE;
    public static final Item PUMPKIN;
    public static final Item CARVED_PUMPKIN;
+   public static final Item JACK_O_LANTERN;
    public static final Item NETHERRACK;
    public static final Item SOUL_SAND;
    public static final Item SOUL_SOIL;
    public static final Item BASALT;
    public static final Item POLISHED_BASALT;
+   public static final Item SMOOTH_BASALT;
    public static final Item SOUL_TORCH;
    public static final Item GLOWSTONE;
-   public static final Item JACK_O_LANTERN;
-   public static final Item OAK_TRAPDOOR;
-   public static final Item SPRUCE_TRAPDOOR;
-   public static final Item BIRCH_TRAPDOOR;
-   public static final Item JUNGLE_TRAPDOOR;
-   public static final Item ACACIA_TRAPDOOR;
-   public static final Item DARK_OAK_TRAPDOOR;
-   public static final Item CRIMSON_TRAPDOOR;
-   public static final Item WARPED_TRAPDOOR;
    public static final Item INFESTED_STONE;
    public static final Item INFESTED_COBBLESTONE;
    public static final Item INFESTED_STONE_BRICKS;
    public static final Item INFESTED_MOSSY_STONE_BRICKS;
    public static final Item INFESTED_CRACKED_STONE_BRICKS;
    public static final Item INFESTED_CHISELED_STONE_BRICKS;
+   public static final Item INFESTED_DEEPSLATE;
    public static final Item STONE_BRICKS;
    public static final Item MOSSY_STONE_BRICKS;
    public static final Item CRACKED_STONE_BRICKS;
    public static final Item CHISELED_STONE_BRICKS;
+   public static final Item CRACKED_DEEPSLATE_BRICKS;
+   public static final Item DEEPSLATE_BRICKS;
+   public static final Item CRACKED_DEEPSLATE_TILES;
+   public static final Item DEEPSLATE_TILES;
+   public static final Item CHISELED_DEEPSLATE;
    public static final Item BROWN_MUSHROOM_BLOCK;
    public static final Item RED_MUSHROOM_BLOCK;
    public static final Item MUSHROOM_STEM;
    public static final Item IRON_BARS;
    public static final Item CHAIN;
    public static final Item GLASS_PANE;
    public static final Item MELON;
    public static final Item VINE;
-   public static final Item OAK_FENCE_GATE;
-   public static final Item SPRUCE_FENCE_GATE;
-   public static final Item BIRCH_FENCE_GATE;
-   public static final Item JUNGLE_FENCE_GATE;
-   public static final Item ACACIA_FENCE_GATE;
-   public static final Item DARK_OAK_FENCE_GATE;
-   public static final Item CRIMSON_FENCE_GATE;
-   public static final Item WARPED_FENCE_GATE;
+   public static final Item GLOW_LICHEN;
    public static final Item BRICK_STAIRS;
    public static final Item STONE_BRICK_STAIRS;
    public static final Item MYCELIUM;
    public static final Item LILY_PAD;
    public static final Item NETHER_BRICKS;
@@ -286,15 +286,14 @@
    public static final Item ENCHANTING_TABLE;
    public static final Item END_PORTAL_FRAME;
    public static final Item END_STONE;
    public static final Item END_STONE_BRICKS;
    public static final Item DRAGON_EGG;
-   public static final Item REDSTONE_LAMP;
    public static final Item SANDSTONE_STAIRS;
    public static final Item EMERALD_ORE;
+   public static final Item DEEPSLATE_EMERALD_ORE;
    public static final Item ENDER_CHEST;
-   public static final Item TRIPWIRE_HOOK;
    public static final Item EMERALD_BLOCK;
    public static final Item SPRUCE_STAIRS;
    public static final Item BIRCH_STAIRS;
    public static final Item JUNGLE_STAIRS;
    public static final Item CRIMSON_STAIRS;
@@ -316,37 +315,24 @@
    public static final Item END_STONE_BRICK_WALL;
    public static final Item DIORITE_WALL;
    public static final Item BLACKSTONE_WALL;
    public static final Item POLISHED_BLACKSTONE_WALL;
    public static final Item POLISHED_BLACKSTONE_BRICK_WALL;
-   public static final Item STONE_BUTTON;
-   public static final Item OAK_BUTTON;
-   public static final Item SPRUCE_BUTTON;
-   public static final Item BIRCH_BUTTON;
-   public static final Item JUNGLE_BUTTON;
-   public static final Item ACACIA_BUTTON;
-   public static final Item DARK_OAK_BUTTON;
-   public static final Item CRIMSON_BUTTON;
-   public static final Item WARPED_BUTTON;
-   public static final Item POLISHED_BLACKSTONE_BUTTON;
+   public static final Item COBBLED_DEEPSLATE_WALL;
+   public static final Item POLISHED_DEEPSLATE_WALL;
+   public static final Item DEEPSLATE_BRICK_WALL;
+   public static final Item DEEPSLATE_TILE_WALL;
    public static final Item ANVIL;
    public static final Item CHIPPED_ANVIL;
    public static final Item DAMAGED_ANVIL;
-   public static final Item TRAPPED_CHEST;
-   public static final Item LIGHT_WEIGHTED_PRESSURE_PLATE;
-   public static final Item HEAVY_WEIGHTED_PRESSURE_PLATE;
-   public static final Item DAYLIGHT_DETECTOR;
-   public static final Item REDSTONE_BLOCK;
    public static final Item NETHER_QUARTZ_ORE;
-   public static final Item HOPPER;
    public static final Item CHISELED_QUARTZ_BLOCK;
    public static final Item QUARTZ_BLOCK;
    public static final Item QUARTZ_BRICKS;
    public static final Item QUARTZ_PILLAR;
    public static final Item QUARTZ_STAIRS;
    public static final Item ACTIVATOR_RAIL;
-   public static final Item DROPPER;
    public static final Item WHITE_TERRACOTTA;
    public static final Item ORANGE_TERRACOTTA;
    public static final Item MAGENTA_TERRACOTTA;
    public static final Item LIGHT_BLUE_TERRACOTTA;
    public static final Item YELLOW_TERRACOTTA;
@@ -360,11 +346,10 @@
    public static final Item BROWN_TERRACOTTA;
    public static final Item GREEN_TERRACOTTA;
    public static final Item RED_TERRACOTTA;
    public static final Item BLACK_TERRACOTTA;
    public static final Item BARRIER;
-   public static final Item IRON_TRAPDOOR;
    public static final Item HAY_BLOCK;
    public static final Item WHITE_CARPET;
    public static final Item ORANGE_CARPET;
    public static final Item MAGENTA_CARPET;
    public static final Item LIGHT_BLUE_CARPET;
@@ -383,12 +368,11 @@
    public static final Item TERRACOTTA;
    public static final Item COAL_BLOCK;
    public static final Item PACKED_ICE;
    public static final Item ACACIA_STAIRS;
    public static final Item DARK_OAK_STAIRS;
-   public static final Item SLIME_BLOCK;
-   public static final Item GRASS_PATH;
+   public static final Item DIRT_PATH;
    public static final Item SUNFLOWER;
    public static final Item LILAC;
    public static final Item ROSE_BUSH;
    public static final Item PEONY;
    public static final Item TALL_GRASS;
@@ -442,11 +426,10 @@
    public static final Item NETHER_WART_BLOCK;
    public static final Item WARPED_WART_BLOCK;
    public static final Item RED_NETHER_BRICKS;
    public static final Item BONE_BLOCK;
    public static final Item STRUCTURE_VOID;
-   public static final Item OBSERVER;
    public static final Item SHULKER_BOX;
    public static final Item WHITE_SHULKER_BOX;
    public static final Item ORANGE_SHULKER_BOX;
    public static final Item MAGENTA_SHULKER_BOX;
    public static final Item LIGHT_BLUE_SHULKER_BOX;
@@ -555,10 +538,14 @@
    public static final Item GRANITE_STAIRS;
    public static final Item ANDESITE_STAIRS;
    public static final Item RED_NETHER_BRICK_STAIRS;
    public static final Item POLISHED_ANDESITE_STAIRS;
    public static final Item DIORITE_STAIRS;
+   public static final Item COBBLED_DEEPSLATE_STAIRS;
+   public static final Item POLISHED_DEEPSLATE_STAIRS;
+   public static final Item DEEPSLATE_TILE_STAIRS;
+   public static final Item DEEPSLATE_BRICK_STAIRS;
    public static final Item POLISHED_GRANITE_SLAB;
    public static final Item SMOOTH_RED_SANDSTONE_SLAB;
    public static final Item MOSSY_STONE_BRICK_SLAB;
    public static final Item POLISHED_DIORITE_SLAB;
    public static final Item MOSSY_COBBLESTONE_SLAB;
@@ -568,22 +555,87 @@
    public static final Item GRANITE_SLAB;
    public static final Item ANDESITE_SLAB;
    public static final Item RED_NETHER_BRICK_SLAB;
    public static final Item POLISHED_ANDESITE_SLAB;
    public static final Item DIORITE_SLAB;
+   public static final Item COBBLED_DEEPSLATE_SLAB;
+   public static final Item POLISHED_DEEPSLATE_SLAB;
+   public static final Item DEEPSLATE_BRICK_SLAB;
+   public static final Item DEEPSLATE_TILE_SLAB;
    public static final Item SCAFFOLDING;
+   public static final Item REDSTONE;
+   public static final Item REDSTONE_TORCH;
+   public static final Item REDSTONE_BLOCK;
+   public static final Item REPEATER;
+   public static final Item COMPARATOR;
+   public static final Item PISTON;
+   public static final Item STICKY_PISTON;
+   public static final Item SLIME_BLOCK;
+   public static final Item HONEY_BLOCK;
+   public static final Item OBSERVER;
+   public static final Item HOPPER;
+   public static final Item DISPENSER;
+   public static final Item DROPPER;
+   public static final Item LECTERN;
+   public static final Item TARGET;
+   public static final Item LEVER;
+   public static final Item LIGHTNING_ROD;
+   public static final Item DAYLIGHT_DETECTOR;
+   public static final Item SCULK_SENSOR;
+   public static final Item TRIPWIRE_HOOK;
+   public static final Item TRAPPED_CHEST;
+   public static final Item TNT;
+   public static final Item REDSTONE_LAMP;
+   public static final Item NOTE_BLOCK;
+   public static final Item STONE_BUTTON;
+   public static final Item POLISHED_BLACKSTONE_BUTTON;
+   public static final Item OAK_BUTTON;
+   public static final Item SPRUCE_BUTTON;
+   public static final Item BIRCH_BUTTON;
+   public static final Item JUNGLE_BUTTON;
+   public static final Item ACACIA_BUTTON;
+   public static final Item DARK_OAK_BUTTON;
+   public static final Item CRIMSON_BUTTON;
+   public static final Item WARPED_BUTTON;
+   public static final Item STONE_PRESSURE_PLATE;
+   public static final Item POLISHED_BLACKSTONE_PRESSURE_PLATE;
+   public static final Item LIGHT_WEIGHTED_PRESSURE_PLATE;
+   public static final Item HEAVY_WEIGHTED_PRESSURE_PLATE;
+   public static final Item OAK_PRESSURE_PLATE;
+   public static final Item SPRUCE_PRESSURE_PLATE;
+   public static final Item BIRCH_PRESSURE_PLATE;
+   public static final Item JUNGLE_PRESSURE_PLATE;
+   public static final Item ACACIA_PRESSURE_PLATE;
+   public static final Item DARK_OAK_PRESSURE_PLATE;
+   public static final Item CRIMSON_PRESSURE_PLATE;
+   public static final Item WARPED_PRESSURE_PLATE;
    public static final Item IRON_DOOR;
    public static final Item OAK_DOOR;
    public static final Item SPRUCE_DOOR;
    public static final Item BIRCH_DOOR;
    public static final Item JUNGLE_DOOR;
    public static final Item ACACIA_DOOR;
    public static final Item DARK_OAK_DOOR;
    public static final Item CRIMSON_DOOR;
    public static final Item WARPED_DOOR;
-   public static final Item REPEATER;
-   public static final Item COMPARATOR;
+   public static final Item IRON_TRAPDOOR;
+   public static final Item OAK_TRAPDOOR;
+   public static final Item SPRUCE_TRAPDOOR;
+   public static final Item BIRCH_TRAPDOOR;
+   public static final Item JUNGLE_TRAPDOOR;
+   public static final Item ACACIA_TRAPDOOR;
+   public static final Item DARK_OAK_TRAPDOOR;
+   public static final Item CRIMSON_TRAPDOOR;
+   public static final Item WARPED_TRAPDOOR;
+   public static final Item OAK_FENCE_GATE;
+   public static final Item SPRUCE_FENCE_GATE;
+   public static final Item BIRCH_FENCE_GATE;
+   public static final Item JUNGLE_FENCE_GATE;
+   public static final Item ACACIA_FENCE_GATE;
+   public static final Item DARK_OAK_FENCE_GATE;
+   public static final Item CRIMSON_FENCE_GATE;
+   public static final Item WARPED_FENCE_GATE;
    public static final Item STRUCTURE_BLOCK;
    public static final Item JIGSAW;
    public static final Item TURTLE_HELMET;
    public static final Item SCUTE;
    public static final Item FLINT_AND_STEEL;
@@ -592,10 +644,11 @@
    public static final Item ARROW;
    public static final Item COAL;
    public static final Item CHARCOAL;
    public static final Item DIAMOND;
    public static final Item IRON_INGOT;
+   public static final Item COPPER_INGOT;
    public static final Item GOLD_INGOT;
    public static final Item NETHERITE_INGOT;
    public static final Item NETHERITE_SCRAP;
    public static final Item WOODEN_SWORD;
    public static final Item WOODEN_SHOVEL;
@@ -677,39 +730,41 @@
    public static final Item BUCKET;
    public static final Item WATER_BUCKET;
    public static final Item LAVA_BUCKET;
    public static final Item MINECART;
    public static final Item SADDLE;
-   public static final Item REDSTONE;
    public static final Item SNOWBALL;
    public static final Item OAK_BOAT;
    public static final Item LEATHER;
    public static final Item MILK_BUCKET;
    public static final Item PUFFERFISH_BUCKET;
    public static final Item SALMON_BUCKET;
    public static final Item COD_BUCKET;
    public static final Item TROPICAL_FISH_BUCKET;
+   public static final Item AXOLOTL_BUCKET;
    public static final Item BRICK;
    public static final Item CLAY_BALL;
    public static final Item DRIED_KELP_BLOCK;
    public static final Item PAPER;
    public static final Item BOOK;
    public static final Item SLIME_BALL;
    public static final Item CHEST_MINECART;
    public static final Item FURNACE_MINECART;
    public static final Item EGG;
    public static final Item COMPASS;
+   public static final Item BUNDLE;
    public static final Item FISHING_ROD;
    public static final Item CLOCK;
    public static final Item GLOWSTONE_DUST;
    public static final Item COD;
    public static final Item SALMON;
    public static final Item TROPICAL_FISH;
    public static final Item PUFFERFISH;
    public static final Item COOKED_COD;
    public static final Item COOKED_SALMON;
    public static final Item INK_SAC;
+   public static final Item GLOW_INK_SAC;
    public static final Item COCOA_BEANS;
    public static final Item LAPIS_LAZULI;
    public static final Item WHITE_DYE;
    public static final Item ORANGE_DYE;
    public static final Item MAGENTA_DYE;
@@ -771,10 +826,11 @@
    public static final Item MAGMA_CREAM;
    public static final Item BREWING_STAND;
    public static final Item CAULDRON;
    public static final Item ENDER_EYE;
    public static final Item GLISTERING_MELON_SLICE;
+   public static final Item AXOLOTL_SPAWN_EGG;
    public static final Item BAT_SPAWN_EGG;
    public static final Item BEE_SPAWN_EGG;
    public static final Item BLAZE_SPAWN_EGG;
    public static final Item CAT_SPAWN_EGG;
    public static final Item CAVE_SPIDER_SPAWN_EGG;
@@ -789,10 +845,11 @@
    public static final Item ENDERMAN_SPAWN_EGG;
    public static final Item ENDERMITE_SPAWN_EGG;
    public static final Item EVOKER_SPAWN_EGG;
    public static final Item FOX_SPAWN_EGG;
    public static final Item GHAST_SPAWN_EGG;
+   public static final Item GLOW_SQUID_SPAWN_EGG;
    public static final Item GUARDIAN_SPAWN_EGG;
    public static final Item HOGLIN_SPAWN_EGG;
    public static final Item HORSE_SPAWN_EGG;
    public static final Item HUSK_SPAWN_EGG;
    public static final Item LLAMA_SPAWN_EGG;
@@ -841,10 +898,11 @@
    public static final Item FIRE_CHARGE;
    public static final Item WRITABLE_BOOK;
    public static final Item WRITTEN_BOOK;
    public static final Item EMERALD;
    public static final Item ITEM_FRAME;
+   public static final Item GLOW_ITEM_FRAME;
    public static final Item FLOWER_POT;
    public static final Item CARROT;
    public static final Item POTATO;
    public static final Item BAKED_POTATO;
    public static final Item POISONOUS_POTATO;
@@ -954,30 +1012,28 @@
    public static final Item SMOKER;
    public static final Item BLAST_FURNACE;
    public static final Item CARTOGRAPHY_TABLE;
    public static final Item FLETCHING_TABLE;
    public static final Item GRINDSTONE;
-   public static final Item LECTERN;
    public static final Item SMITHING_TABLE;
    public static final Item STONECUTTER;
    public static final Item BELL;
    public static final Item LANTERN;
    public static final Item SOUL_LANTERN;
    public static final Item SWEET_BERRIES;
+   public static final Item GLOW_BERRIES;
    public static final Item CAMPFIRE;
    public static final Item SOUL_CAMPFIRE;
    public static final Item SHROOMLIGHT;
    public static final Item HONEYCOMB;
    public static final Item BEE_NEST;
    public static final Item BEEHIVE;
    public static final Item HONEY_BOTTLE;
-   public static final Item HONEY_BLOCK;
    public static final Item HONEYCOMB_BLOCK;
    public static final Item LODESTONE;
    public static final Item NETHERITE_BLOCK;
    public static final Item ANCIENT_DEBRIS;
-   public static final Item TARGET;
    public static final Item CRYING_OBSIDIAN;
    public static final Item BLACKSTONE;
    public static final Item BLACKSTONE_SLAB;
    public static final Item BLACKSTONE_STAIRS;
    public static final Item GILDED_BLACKSTONE;
@@ -988,10 +1044,66 @@
    public static final Item POLISHED_BLACKSTONE_BRICKS;
    public static final Item POLISHED_BLACKSTONE_BRICK_SLAB;
    public static final Item POLISHED_BLACKSTONE_BRICK_STAIRS;
    public static final Item CRACKED_POLISHED_BLACKSTONE_BRICKS;
    public static final Item RESPAWN_ANCHOR;
+   public static final Item CANDLE;
+   public static final Item WHITE_CANDLE;
+   public static final Item ORANGE_CANDLE;
+   public static final Item MAGENTA_CANDLE;
+   public static final Item LIGHT_BLUE_CANDLE;
+   public static final Item YELLOW_CANDLE;
+   public static final Item LIME_CANDLE;
+   public static final Item PINK_CANDLE;
+   public static final Item GRAY_CANDLE;
+   public static final Item LIGHT_GRAY_CANDLE;
+   public static final Item CYAN_CANDLE;
+   public static final Item PURPLE_CANDLE;
+   public static final Item BLUE_CANDLE;
+   public static final Item BROWN_CANDLE;
+   public static final Item GREEN_CANDLE;
+   public static final Item RED_CANDLE;
+   public static final Item BLACK_CANDLE;
+   public static final Item AMETHYST_SHARD;
+   public static final Item AMETHYST_BLOCK;
+   public static final Item BUDDING_AMETHYST;
+   public static final Item SMALL_AMETHYST_BUD;
+   public static final Item MEDIUM_AMETHYST_BUD;
+   public static final Item LARGE_AMETHYST_BUD;
+   public static final Item AMETHYST_CLUSTER;
+   public static final Item SPYGLASS;
+   public static final Item COPPER_BLOCK;
+   public static final Item EXPOSED_COPPER_BLOCK;
+   public static final Item WEATHERED_COPPER_BLOCK;
+   public static final Item OXIDIZED_COPPER_BLOCK;
+   public static final Item CUT_COPPER;
+   public static final Item EXPOSED_CUT_COPPER;
+   public static final Item WEATHERED_CUT_COPPER;
+   public static final Item OXIDIZED_CUT_COPPER;
+   public static final Item CUT_COPPER_STAIRS;
+   public static final Item EXPOSED_CUT_COPPER_STAIRS;
+   public static final Item WEATHERED_CUT_COPPER_STAIRS;
+   public static final Item OXIDIZED_CUT_COPPER_STAIRS;
+   public static final Item CUT_COPPER_SLAB;
+   public static final Item EXPOSED_CUT_COPPER_SLAB;
+   public static final Item WEATHERED_CUT_COPPER_SLAB;
+   public static final Item OXIDIZED_CUT_COPPER_SLAB;
+   public static final Item WAXED_COPPER;
+   public static final Item WAXED_EXPOSED_COPPER;
+   public static final Item WAXED_WEATHERED_COPPER;
+   public static final Item WAXED_CUT_COPPER;
+   public static final Item WAXED_EXPOSED_CUT_COPPER;
+   public static final Item WAXED_WEATHERED_CUT_COPPER;
+   public static final Item WAXED_CUT_COPPER_STAIRS;
+   public static final Item WAXED_EXPOSED_CUT_COPPER_STAIRS;
+   public static final Item WAXED_WEATHERED_CUT_COPPER_STAIRS;
+   public static final Item WAXED_CUT_COPPER_SLAB;
+   public static final Item WAXED_EXPOSED_CUT_COPPER_SLAB;
+   public static final Item WAXED_WEATHERED_CUT_COPPER_SLAB;
+   public static final Item POWDER_SNOW_BUCKET;
+   public static final Item POINTED_DRIPSTONE;
+   public static final Item DRIPSTONE_BLOCK;
 
    private static Item registerBlock(Block var0) {
       return registerBlock(new BlockItem(var0, new Item.Properties()));
    }
 
@@ -1026,10 +1138,15 @@
       POLISHED_GRANITE = registerBlock(Blocks.POLISHED_GRANITE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       DIORITE = registerBlock(Blocks.DIORITE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       POLISHED_DIORITE = registerBlock(Blocks.POLISHED_DIORITE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       ANDESITE = registerBlock(Blocks.ANDESITE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       POLISHED_ANDESITE = registerBlock(Blocks.POLISHED_ANDESITE, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      DEEPSLATE = registerBlock(Blocks.DEEPSLATE, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      COBBLED_DEEPSLATE = registerBlock(Blocks.COBBLED_DEEPSLATE, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      POLISHED_DEEPSLATE = registerBlock(Blocks.POLISHED_DEEPSLATE, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      CALCITE = registerBlock(Blocks.CALCITE, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      TUFF = registerBlock(Blocks.TUFF, CreativeModeTab.TAB_BUILDING_BLOCKS);
       GRASS_BLOCK = registerBlock(Blocks.GRASS_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       DIRT = registerBlock(Blocks.DIRT, CreativeModeTab.TAB_BUILDING_BLOCKS);
       COARSE_DIRT = registerBlock(Blocks.COARSE_DIRT, CreativeModeTab.TAB_BUILDING_BLOCKS);
       PODZOL = registerBlock(Blocks.PODZOL, CreativeModeTab.TAB_BUILDING_BLOCKS);
       CRIMSON_NYLIUM = registerBlock(Blocks.CRIMSON_NYLIUM, CreativeModeTab.TAB_BUILDING_BLOCKS);
@@ -1052,12 +1169,17 @@
       BEDROCK = registerBlock(Blocks.BEDROCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       SAND = registerBlock(Blocks.SAND, CreativeModeTab.TAB_BUILDING_BLOCKS);
       RED_SAND = registerBlock(Blocks.RED_SAND, CreativeModeTab.TAB_BUILDING_BLOCKS);
       GRAVEL = registerBlock(Blocks.GRAVEL, CreativeModeTab.TAB_BUILDING_BLOCKS);
       GOLD_ORE = registerBlock(Blocks.GOLD_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      DEEPSLATE_GOLD_ORE = registerBlock(Blocks.DEEPSLATE_GOLD_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       IRON_ORE = registerBlock(Blocks.IRON_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      DEEPSLATE_IRON_ORE = registerBlock(Blocks.DEEPSLATE_IRON_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      COPPER_ORE = registerBlock(Blocks.COPPER_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      DEEPSLATE_COPPER_ORE = registerBlock(Blocks.DEEPSLATE_COPPER_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       COAL_ORE = registerBlock(Blocks.COAL_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      DEEPSLATE_COAL_ORE = registerBlock(Blocks.DEEPSLATE_COAL_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       NETHER_GOLD_ORE = registerBlock(Blocks.NETHER_GOLD_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       OAK_LOG = registerBlock(Blocks.OAK_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
       SPRUCE_LOG = registerBlock(Blocks.SPRUCE_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
       BIRCH_LOG = registerBlock(Blocks.BIRCH_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
       JUNGLE_LOG = registerBlock(Blocks.JUNGLE_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
@@ -1093,30 +1215,32 @@
       SPRUCE_LEAVES = registerBlock(Blocks.SPRUCE_LEAVES, CreativeModeTab.TAB_DECORATIONS);
       BIRCH_LEAVES = registerBlock(Blocks.BIRCH_LEAVES, CreativeModeTab.TAB_DECORATIONS);
       JUNGLE_LEAVES = registerBlock(Blocks.JUNGLE_LEAVES, CreativeModeTab.TAB_DECORATIONS);
       ACACIA_LEAVES = registerBlock(Blocks.ACACIA_LEAVES, CreativeModeTab.TAB_DECORATIONS);
       DARK_OAK_LEAVES = registerBlock(Blocks.DARK_OAK_LEAVES, CreativeModeTab.TAB_DECORATIONS);
+      AZALEA_LEAVES = registerBlock(Blocks.AZALEA_LEAVES, CreativeModeTab.TAB_DECORATIONS);
+      AZALEA_LEAVES_FLOWERS = registerBlock(Blocks.AZALEA_LEAVES_FLOWERS, CreativeModeTab.TAB_DECORATIONS);
       SPONGE = registerBlock(Blocks.SPONGE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       WET_SPONGE = registerBlock(Blocks.WET_SPONGE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       GLASS = registerBlock(Blocks.GLASS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      TINTED_GLASS = registerBlock(Blocks.TINTED_GLASS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       LAPIS_ORE = registerBlock(Blocks.LAPIS_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      DEEPSLATE_LAPIS_ORE = registerBlock(Blocks.DEEPSLATE_LAPIS_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       LAPIS_BLOCK = registerBlock(Blocks.LAPIS_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      DISPENSER = registerBlock(Blocks.DISPENSER, CreativeModeTab.TAB_REDSTONE);
       SANDSTONE = registerBlock(Blocks.SANDSTONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       CHISELED_SANDSTONE = registerBlock(Blocks.CHISELED_SANDSTONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       CUT_SANDSTONE = registerBlock(Blocks.CUT_SANDSTONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      NOTE_BLOCK = registerBlock(Blocks.NOTE_BLOCK, CreativeModeTab.TAB_REDSTONE);
       POWERED_RAIL = registerBlock(Blocks.POWERED_RAIL, CreativeModeTab.TAB_TRANSPORTATION);
       DETECTOR_RAIL = registerBlock(Blocks.DETECTOR_RAIL, CreativeModeTab.TAB_TRANSPORTATION);
-      STICKY_PISTON = registerBlock(Blocks.STICKY_PISTON, CreativeModeTab.TAB_REDSTONE);
       COBWEB = registerBlock(Blocks.COBWEB, CreativeModeTab.TAB_DECORATIONS);
       GRASS = registerBlock(Blocks.GRASS, CreativeModeTab.TAB_DECORATIONS);
       FERN = registerBlock(Blocks.FERN, CreativeModeTab.TAB_DECORATIONS);
+      AZALEA = registerBlock(Blocks.AZALEA, CreativeModeTab.TAB_DECORATIONS);
+      FLOWERING_AZALEA = registerBlock(Blocks.FLOWERING_AZALEA, CreativeModeTab.TAB_DECORATIONS);
       DEAD_BUSH = registerBlock(Blocks.DEAD_BUSH, CreativeModeTab.TAB_DECORATIONS);
       SEAGRASS = registerBlock(Blocks.SEAGRASS, CreativeModeTab.TAB_DECORATIONS);
       SEA_PICKLE = registerBlock(Blocks.SEA_PICKLE, CreativeModeTab.TAB_DECORATIONS);
-      PISTON = registerBlock(Blocks.PISTON, CreativeModeTab.TAB_REDSTONE);
       WHITE_WOOL = registerBlock(Blocks.WHITE_WOOL, CreativeModeTab.TAB_BUILDING_BLOCKS);
       ORANGE_WOOL = registerBlock(Blocks.ORANGE_WOOL, CreativeModeTab.TAB_BUILDING_BLOCKS);
       MAGENTA_WOOL = registerBlock(Blocks.MAGENTA_WOOL, CreativeModeTab.TAB_BUILDING_BLOCKS);
       LIGHT_BLUE_WOOL = registerBlock(Blocks.LIGHT_BLUE_WOOL, CreativeModeTab.TAB_BUILDING_BLOCKS);
       YELLOW_WOOL = registerBlock(Blocks.YELLOW_WOOL, CreativeModeTab.TAB_BUILDING_BLOCKS);
@@ -1140,10 +1264,11 @@
       ORANGE_TULIP = registerBlock(Blocks.ORANGE_TULIP, CreativeModeTab.TAB_DECORATIONS);
       WHITE_TULIP = registerBlock(Blocks.WHITE_TULIP, CreativeModeTab.TAB_DECORATIONS);
       PINK_TULIP = registerBlock(Blocks.PINK_TULIP, CreativeModeTab.TAB_DECORATIONS);
       OXEYE_DAISY = registerBlock(Blocks.OXEYE_DAISY, CreativeModeTab.TAB_DECORATIONS);
       CORNFLOWER = registerBlock(Blocks.CORNFLOWER, CreativeModeTab.TAB_DECORATIONS);
+      SPORE_BLOSSOM = registerBlock(Blocks.SPORE_BLOSSOM, CreativeModeTab.TAB_DECORATIONS);
       LILY_OF_THE_VALLEY = registerBlock(Blocks.LILY_OF_THE_VALLEY, CreativeModeTab.TAB_DECORATIONS);
       WITHER_ROSE = registerBlock(Blocks.WITHER_ROSE, CreativeModeTab.TAB_DECORATIONS);
       BROWN_MUSHROOM = registerBlock(Blocks.BROWN_MUSHROOM, CreativeModeTab.TAB_DECORATIONS);
       RED_MUSHROOM = registerBlock(Blocks.RED_MUSHROOM, CreativeModeTab.TAB_DECORATIONS);
       CRIMSON_FUNGUS = registerBlock(Blocks.CRIMSON_FUNGUS, CreativeModeTab.TAB_DECORATIONS);
@@ -1153,10 +1278,16 @@
       NETHER_SPROUTS = registerBlock(Blocks.NETHER_SPROUTS, CreativeModeTab.TAB_DECORATIONS);
       WEEPING_VINES = registerBlock(Blocks.WEEPING_VINES, CreativeModeTab.TAB_DECORATIONS);
       TWISTING_VINES = registerBlock(Blocks.TWISTING_VINES, CreativeModeTab.TAB_DECORATIONS);
       SUGAR_CANE = registerBlock(Blocks.SUGAR_CANE, CreativeModeTab.TAB_DECORATIONS);
       KELP = registerBlock(Blocks.KELP, CreativeModeTab.TAB_DECORATIONS);
+      MOSS_CARPET = registerBlock(Blocks.MOSS_CARPET, CreativeModeTab.TAB_DECORATIONS);
+      MOSS_BLOCK = registerBlock(Blocks.MOSS_BLOCK, CreativeModeTab.TAB_DECORATIONS);
+      ROOTED_DIRT = registerBlock(Blocks.ROOTED_DIRT, CreativeModeTab.TAB_DECORATIONS);
+      HANGING_ROOTS = registerBlock(Blocks.HANGING_ROOTS, CreativeModeTab.TAB_DECORATIONS);
+      BIG_DRIPLEAF = registerBlock(Blocks.BIG_DRIPLEAF, CreativeModeTab.TAB_DECORATIONS);
+      SMALL_DRIPLEAF = registerBlock(Blocks.SMALL_DRIPLEAF, CreativeModeTab.TAB_DECORATIONS);
       BAMBOO = registerBlock(Blocks.BAMBOO, CreativeModeTab.TAB_DECORATIONS);
       GOLD_BLOCK = registerBlock(Blocks.GOLD_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       IRON_BLOCK = registerBlock(Blocks.IRON_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       OAK_SLAB = registerBlock(Blocks.OAK_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
       SPRUCE_SLAB = registerBlock(Blocks.SPRUCE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
@@ -1185,11 +1316,10 @@
       SMOOTH_QUARTZ = registerBlock(Blocks.SMOOTH_QUARTZ, CreativeModeTab.TAB_BUILDING_BLOCKS);
       SMOOTH_RED_SANDSTONE = registerBlock(Blocks.SMOOTH_RED_SANDSTONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       SMOOTH_SANDSTONE = registerBlock(Blocks.SMOOTH_SANDSTONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       SMOOTH_STONE = registerBlock(Blocks.SMOOTH_STONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       BRICKS = registerBlock(Blocks.BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      TNT = registerBlock(Blocks.TNT, CreativeModeTab.TAB_REDSTONE);
       BOOKSHELF = registerBlock(Blocks.BOOKSHELF, CreativeModeTab.TAB_BUILDING_BLOCKS);
       MOSSY_COBBLESTONE = registerBlock(Blocks.MOSSY_COBBLESTONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       OBSIDIAN = registerBlock(Blocks.OBSIDIAN, CreativeModeTab.TAB_BUILDING_BLOCKS);
       TORCH = registerBlock((BlockItem)(new StandingAndWallBlockItem(Blocks.TORCH, Blocks.WALL_TORCH, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
       END_ROD = registerBlock(Blocks.END_ROD, CreativeModeTab.TAB_DECORATIONS);
@@ -1200,30 +1330,20 @@
       PURPUR_STAIRS = registerBlock(Blocks.PURPUR_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       SPAWNER = registerBlock(Blocks.SPAWNER);
       OAK_STAIRS = registerBlock(Blocks.OAK_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       CHEST = registerBlock(Blocks.CHEST, CreativeModeTab.TAB_DECORATIONS);
       DIAMOND_ORE = registerBlock(Blocks.DIAMOND_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      DEEPSLATE_DIAMOND_ORE = registerBlock(Blocks.DEEPSLATE_DIAMOND_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       DIAMOND_BLOCK = registerBlock(Blocks.DIAMOND_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       CRAFTING_TABLE = registerBlock(Blocks.CRAFTING_TABLE, CreativeModeTab.TAB_DECORATIONS);
       FARMLAND = registerBlock(Blocks.FARMLAND, CreativeModeTab.TAB_DECORATIONS);
       FURNACE = registerBlock(Blocks.FURNACE, CreativeModeTab.TAB_DECORATIONS);
       LADDER = registerBlock(Blocks.LADDER, CreativeModeTab.TAB_DECORATIONS);
       RAIL = registerBlock(Blocks.RAIL, CreativeModeTab.TAB_TRANSPORTATION);
       COBBLESTONE_STAIRS = registerBlock(Blocks.COBBLESTONE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      LEVER = registerBlock(Blocks.LEVER, CreativeModeTab.TAB_REDSTONE);
-      STONE_PRESSURE_PLATE = registerBlock(Blocks.STONE_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
-      OAK_PRESSURE_PLATE = registerBlock(Blocks.OAK_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
-      SPRUCE_PRESSURE_PLATE = registerBlock(Blocks.SPRUCE_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
-      BIRCH_PRESSURE_PLATE = registerBlock(Blocks.BIRCH_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
-      JUNGLE_PRESSURE_PLATE = registerBlock(Blocks.JUNGLE_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
-      ACACIA_PRESSURE_PLATE = registerBlock(Blocks.ACACIA_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
-      DARK_OAK_PRESSURE_PLATE = registerBlock(Blocks.DARK_OAK_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
-      CRIMSON_PRESSURE_PLATE = registerBlock(Blocks.CRIMSON_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
-      WARPED_PRESSURE_PLATE = registerBlock(Blocks.WARPED_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
-      POLISHED_BLACKSTONE_PRESSURE_PLATE = registerBlock(Blocks.POLISHED_BLACKSTONE_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
       REDSTONE_ORE = registerBlock(Blocks.REDSTONE_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      REDSTONE_TORCH = registerBlock((BlockItem)(new StandingAndWallBlockItem(Blocks.REDSTONE_TORCH, Blocks.REDSTONE_WALL_TORCH, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE))));
+      DEEPSLATE_REDSTONE_ORE = registerBlock(Blocks.DEEPSLATE_REDSTONE_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       SNOW = registerBlock(Blocks.SNOW, CreativeModeTab.TAB_DECORATIONS);
       ICE = registerBlock(Blocks.ICE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       SNOW_BLOCK = registerBlock(Blocks.SNOW_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       CACTUS = registerBlock(Blocks.CACTUS, CreativeModeTab.TAB_DECORATIONS);
       CLAY = registerBlock(Blocks.CLAY, CreativeModeTab.TAB_BUILDING_BLOCKS);
@@ -1236,52 +1356,44 @@
       DARK_OAK_FENCE = registerBlock(Blocks.DARK_OAK_FENCE, CreativeModeTab.TAB_DECORATIONS);
       CRIMSON_FENCE = registerBlock(Blocks.CRIMSON_FENCE, CreativeModeTab.TAB_DECORATIONS);
       WARPED_FENCE = registerBlock(Blocks.WARPED_FENCE, CreativeModeTab.TAB_DECORATIONS);
       PUMPKIN = registerBlock(Blocks.PUMPKIN, CreativeModeTab.TAB_BUILDING_BLOCKS);
       CARVED_PUMPKIN = registerBlock(Blocks.CARVED_PUMPKIN, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      JACK_O_LANTERN = registerBlock(Blocks.JACK_O_LANTERN, CreativeModeTab.TAB_BUILDING_BLOCKS);
       NETHERRACK = registerBlock(Blocks.NETHERRACK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       SOUL_SAND = registerBlock(Blocks.SOUL_SAND, CreativeModeTab.TAB_BUILDING_BLOCKS);
       SOUL_SOIL = registerBlock(Blocks.SOUL_SOIL, CreativeModeTab.TAB_BUILDING_BLOCKS);
       BASALT = registerBlock(Blocks.BASALT, CreativeModeTab.TAB_BUILDING_BLOCKS);
       POLISHED_BASALT = registerBlock(Blocks.POLISHED_BASALT, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      SMOOTH_BASALT = registerBlock(Blocks.SMOOTH_BASALT, CreativeModeTab.TAB_BUILDING_BLOCKS);
       SOUL_TORCH = registerBlock((BlockItem)(new StandingAndWallBlockItem(Blocks.SOUL_TORCH, Blocks.SOUL_WALL_TORCH, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
       GLOWSTONE = registerBlock(Blocks.GLOWSTONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      JACK_O_LANTERN = registerBlock(Blocks.JACK_O_LANTERN, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      OAK_TRAPDOOR = registerBlock(Blocks.OAK_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
-      SPRUCE_TRAPDOOR = registerBlock(Blocks.SPRUCE_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
-      BIRCH_TRAPDOOR = registerBlock(Blocks.BIRCH_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
-      JUNGLE_TRAPDOOR = registerBlock(Blocks.JUNGLE_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
-      ACACIA_TRAPDOOR = registerBlock(Blocks.ACACIA_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
-      DARK_OAK_TRAPDOOR = registerBlock(Blocks.DARK_OAK_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
-      CRIMSON_TRAPDOOR = registerBlock(Blocks.CRIMSON_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
-      WARPED_TRAPDOOR = registerBlock(Blocks.WARPED_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
       INFESTED_STONE = registerBlock(Blocks.INFESTED_STONE, CreativeModeTab.TAB_DECORATIONS);
       INFESTED_COBBLESTONE = registerBlock(Blocks.INFESTED_COBBLESTONE, CreativeModeTab.TAB_DECORATIONS);
       INFESTED_STONE_BRICKS = registerBlock(Blocks.INFESTED_STONE_BRICKS, CreativeModeTab.TAB_DECORATIONS);
       INFESTED_MOSSY_STONE_BRICKS = registerBlock(Blocks.INFESTED_MOSSY_STONE_BRICKS, CreativeModeTab.TAB_DECORATIONS);
       INFESTED_CRACKED_STONE_BRICKS = registerBlock(Blocks.INFESTED_CRACKED_STONE_BRICKS, CreativeModeTab.TAB_DECORATIONS);
       INFESTED_CHISELED_STONE_BRICKS = registerBlock(Blocks.INFESTED_CHISELED_STONE_BRICKS, CreativeModeTab.TAB_DECORATIONS);
+      INFESTED_DEEPSLATE = registerBlock(Blocks.INFESTED_DEEPSLATE, CreativeModeTab.TAB_DECORATIONS);
       STONE_BRICKS = registerBlock(Blocks.STONE_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       MOSSY_STONE_BRICKS = registerBlock(Blocks.MOSSY_STONE_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       CRACKED_STONE_BRICKS = registerBlock(Blocks.CRACKED_STONE_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       CHISELED_STONE_BRICKS = registerBlock(Blocks.CHISELED_STONE_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      CRACKED_DEEPSLATE_BRICKS = registerBlock(Blocks.CRACKED_DEEPSLATE_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      DEEPSLATE_BRICKS = registerBlock(Blocks.DEEPSLATE_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      CRACKED_DEEPSLATE_TILES = registerBlock(Blocks.CRACKED_DEEPSLATE_TILES, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      DEEPSLATE_TILES = registerBlock(Blocks.DEEPSLATE_TILES, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      CHISELED_DEEPSLATE = registerBlock(Blocks.CHISELED_DEEPSLATE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       BROWN_MUSHROOM_BLOCK = registerBlock(Blocks.BROWN_MUSHROOM_BLOCK, CreativeModeTab.TAB_DECORATIONS);
       RED_MUSHROOM_BLOCK = registerBlock(Blocks.RED_MUSHROOM_BLOCK, CreativeModeTab.TAB_DECORATIONS);
       MUSHROOM_STEM = registerBlock(Blocks.MUSHROOM_STEM, CreativeModeTab.TAB_DECORATIONS);
       IRON_BARS = registerBlock(Blocks.IRON_BARS, CreativeModeTab.TAB_DECORATIONS);
       CHAIN = registerBlock(Blocks.CHAIN, CreativeModeTab.TAB_DECORATIONS);
       GLASS_PANE = registerBlock(Blocks.GLASS_PANE, CreativeModeTab.TAB_DECORATIONS);
       MELON = registerBlock(Blocks.MELON, CreativeModeTab.TAB_BUILDING_BLOCKS);
       VINE = registerBlock(Blocks.VINE, CreativeModeTab.TAB_DECORATIONS);
-      OAK_FENCE_GATE = registerBlock(Blocks.OAK_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
-      SPRUCE_FENCE_GATE = registerBlock(Blocks.SPRUCE_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
-      BIRCH_FENCE_GATE = registerBlock(Blocks.BIRCH_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
-      JUNGLE_FENCE_GATE = registerBlock(Blocks.JUNGLE_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
-      ACACIA_FENCE_GATE = registerBlock(Blocks.ACACIA_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
-      DARK_OAK_FENCE_GATE = registerBlock(Blocks.DARK_OAK_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
-      CRIMSON_FENCE_GATE = registerBlock(Blocks.CRIMSON_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
-      WARPED_FENCE_GATE = registerBlock(Blocks.WARPED_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
+      GLOW_LICHEN = registerBlock(Blocks.GLOW_LICHEN, CreativeModeTab.TAB_DECORATIONS);
       BRICK_STAIRS = registerBlock(Blocks.BRICK_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       STONE_BRICK_STAIRS = registerBlock(Blocks.STONE_BRICK_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       MYCELIUM = registerBlock(Blocks.MYCELIUM, CreativeModeTab.TAB_BUILDING_BLOCKS);
       LILY_PAD = registerBlock((BlockItem)(new WaterLilyBlockItem(Blocks.LILY_PAD, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
       NETHER_BRICKS = registerBlock(Blocks.NETHER_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
@@ -1292,15 +1404,14 @@
       ENCHANTING_TABLE = registerBlock(Blocks.ENCHANTING_TABLE, CreativeModeTab.TAB_DECORATIONS);
       END_PORTAL_FRAME = registerBlock(Blocks.END_PORTAL_FRAME, CreativeModeTab.TAB_DECORATIONS);
       END_STONE = registerBlock(Blocks.END_STONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       END_STONE_BRICKS = registerBlock(Blocks.END_STONE_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       DRAGON_EGG = registerBlock(new BlockItem(Blocks.DRAGON_EGG, (new Item.Properties()).rarity(Rarity.EPIC)));
-      REDSTONE_LAMP = registerBlock(Blocks.REDSTONE_LAMP, CreativeModeTab.TAB_REDSTONE);
       SANDSTONE_STAIRS = registerBlock(Blocks.SANDSTONE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       EMERALD_ORE = registerBlock(Blocks.EMERALD_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      DEEPSLATE_EMERALD_ORE = registerBlock(Blocks.DEEPSLATE_EMERALD_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       ENDER_CHEST = registerBlock(Blocks.ENDER_CHEST, CreativeModeTab.TAB_DECORATIONS);
-      TRIPWIRE_HOOK = registerBlock(Blocks.TRIPWIRE_HOOK, CreativeModeTab.TAB_REDSTONE);
       EMERALD_BLOCK = registerBlock(Blocks.EMERALD_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       SPRUCE_STAIRS = registerBlock(Blocks.SPRUCE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       BIRCH_STAIRS = registerBlock(Blocks.BIRCH_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       JUNGLE_STAIRS = registerBlock(Blocks.JUNGLE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       CRIMSON_STAIRS = registerBlock(Blocks.CRIMSON_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
@@ -1322,37 +1433,24 @@
       END_STONE_BRICK_WALL = registerBlock(Blocks.END_STONE_BRICK_WALL, CreativeModeTab.TAB_DECORATIONS);
       DIORITE_WALL = registerBlock(Blocks.DIORITE_WALL, CreativeModeTab.TAB_DECORATIONS);
       BLACKSTONE_WALL = registerBlock(Blocks.BLACKSTONE_WALL, CreativeModeTab.TAB_DECORATIONS);
       POLISHED_BLACKSTONE_WALL = registerBlock(Blocks.POLISHED_BLACKSTONE_WALL, CreativeModeTab.TAB_DECORATIONS);
       POLISHED_BLACKSTONE_BRICK_WALL = registerBlock(Blocks.POLISHED_BLACKSTONE_BRICK_WALL, CreativeModeTab.TAB_DECORATIONS);
-      STONE_BUTTON = registerBlock(Blocks.STONE_BUTTON, CreativeModeTab.TAB_REDSTONE);
-      OAK_BUTTON = registerBlock(Blocks.OAK_BUTTON, CreativeModeTab.TAB_REDSTONE);
-      SPRUCE_BUTTON = registerBlock(Blocks.SPRUCE_BUTTON, CreativeModeTab.TAB_REDSTONE);
-      BIRCH_BUTTON = registerBlock(Blocks.BIRCH_BUTTON, CreativeModeTab.TAB_REDSTONE);
-      JUNGLE_BUTTON = registerBlock(Blocks.JUNGLE_BUTTON, CreativeModeTab.TAB_REDSTONE);
-      ACACIA_BUTTON = registerBlock(Blocks.ACACIA_BUTTON, CreativeModeTab.TAB_REDSTONE);
-      DARK_OAK_BUTTON = registerBlock(Blocks.DARK_OAK_BUTTON, CreativeModeTab.TAB_REDSTONE);
-      CRIMSON_BUTTON = registerBlock(Blocks.CRIMSON_BUTTON, CreativeModeTab.TAB_REDSTONE);
-      WARPED_BUTTON = registerBlock(Blocks.WARPED_BUTTON, CreativeModeTab.TAB_REDSTONE);
-      POLISHED_BLACKSTONE_BUTTON = registerBlock(Blocks.POLISHED_BLACKSTONE_BUTTON, CreativeModeTab.TAB_REDSTONE);
+      COBBLED_DEEPSLATE_WALL = registerBlock(Blocks.COBBLED_DEEPSLATE_WALL, CreativeModeTab.TAB_DECORATIONS);
+      POLISHED_DEEPSLATE_WALL = registerBlock(Blocks.POLISHED_DEEPSLATE_WALL, CreativeModeTab.TAB_DECORATIONS);
+      DEEPSLATE_BRICK_WALL = registerBlock(Blocks.DEEPSLATE_BRICK_WALL, CreativeModeTab.TAB_DECORATIONS);
+      DEEPSLATE_TILE_WALL = registerBlock(Blocks.DEEPSLATE_TILE_WALL, CreativeModeTab.TAB_DECORATIONS);
       ANVIL = registerBlock(Blocks.ANVIL, CreativeModeTab.TAB_DECORATIONS);
       CHIPPED_ANVIL = registerBlock(Blocks.CHIPPED_ANVIL, CreativeModeTab.TAB_DECORATIONS);
       DAMAGED_ANVIL = registerBlock(Blocks.DAMAGED_ANVIL, CreativeModeTab.TAB_DECORATIONS);
-      TRAPPED_CHEST = registerBlock(Blocks.TRAPPED_CHEST, CreativeModeTab.TAB_REDSTONE);
-      LIGHT_WEIGHTED_PRESSURE_PLATE = registerBlock(Blocks.LIGHT_WEIGHTED_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
-      HEAVY_WEIGHTED_PRESSURE_PLATE = registerBlock(Blocks.HEAVY_WEIGHTED_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
-      DAYLIGHT_DETECTOR = registerBlock(Blocks.DAYLIGHT_DETECTOR, CreativeModeTab.TAB_REDSTONE);
-      REDSTONE_BLOCK = registerBlock(Blocks.REDSTONE_BLOCK, CreativeModeTab.TAB_REDSTONE);
       NETHER_QUARTZ_ORE = registerBlock(Blocks.NETHER_QUARTZ_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      HOPPER = registerBlock(Blocks.HOPPER, CreativeModeTab.TAB_REDSTONE);
       CHISELED_QUARTZ_BLOCK = registerBlock(Blocks.CHISELED_QUARTZ_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       QUARTZ_BLOCK = registerBlock(Blocks.QUARTZ_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       QUARTZ_BRICKS = registerBlock(Blocks.QUARTZ_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       QUARTZ_PILLAR = registerBlock(Blocks.QUARTZ_PILLAR, CreativeModeTab.TAB_BUILDING_BLOCKS);
       QUARTZ_STAIRS = registerBlock(Blocks.QUARTZ_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       ACTIVATOR_RAIL = registerBlock(Blocks.ACTIVATOR_RAIL, CreativeModeTab.TAB_TRANSPORTATION);
-      DROPPER = registerBlock(Blocks.DROPPER, CreativeModeTab.TAB_REDSTONE);
       WHITE_TERRACOTTA = registerBlock(Blocks.WHITE_TERRACOTTA, CreativeModeTab.TAB_BUILDING_BLOCKS);
       ORANGE_TERRACOTTA = registerBlock(Blocks.ORANGE_TERRACOTTA, CreativeModeTab.TAB_BUILDING_BLOCKS);
       MAGENTA_TERRACOTTA = registerBlock(Blocks.MAGENTA_TERRACOTTA, CreativeModeTab.TAB_BUILDING_BLOCKS);
       LIGHT_BLUE_TERRACOTTA = registerBlock(Blocks.LIGHT_BLUE_TERRACOTTA, CreativeModeTab.TAB_BUILDING_BLOCKS);
       YELLOW_TERRACOTTA = registerBlock(Blocks.YELLOW_TERRACOTTA, CreativeModeTab.TAB_BUILDING_BLOCKS);
@@ -1366,11 +1464,10 @@
       BROWN_TERRACOTTA = registerBlock(Blocks.BROWN_TERRACOTTA, CreativeModeTab.TAB_BUILDING_BLOCKS);
       GREEN_TERRACOTTA = registerBlock(Blocks.GREEN_TERRACOTTA, CreativeModeTab.TAB_BUILDING_BLOCKS);
       RED_TERRACOTTA = registerBlock(Blocks.RED_TERRACOTTA, CreativeModeTab.TAB_BUILDING_BLOCKS);
       BLACK_TERRACOTTA = registerBlock(Blocks.BLACK_TERRACOTTA, CreativeModeTab.TAB_BUILDING_BLOCKS);
       BARRIER = registerBlock(Blocks.BARRIER);
-      IRON_TRAPDOOR = registerBlock(Blocks.IRON_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
       HAY_BLOCK = registerBlock(Blocks.HAY_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       WHITE_CARPET = registerBlock(Blocks.WHITE_CARPET, CreativeModeTab.TAB_DECORATIONS);
       ORANGE_CARPET = registerBlock(Blocks.ORANGE_CARPET, CreativeModeTab.TAB_DECORATIONS);
       MAGENTA_CARPET = registerBlock(Blocks.MAGENTA_CARPET, CreativeModeTab.TAB_DECORATIONS);
       LIGHT_BLUE_CARPET = registerBlock(Blocks.LIGHT_BLUE_CARPET, CreativeModeTab.TAB_DECORATIONS);
@@ -1389,12 +1486,11 @@
       TERRACOTTA = registerBlock(Blocks.TERRACOTTA, CreativeModeTab.TAB_BUILDING_BLOCKS);
       COAL_BLOCK = registerBlock(Blocks.COAL_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       PACKED_ICE = registerBlock(Blocks.PACKED_ICE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       ACACIA_STAIRS = registerBlock(Blocks.ACACIA_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       DARK_OAK_STAIRS = registerBlock(Blocks.DARK_OAK_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      SLIME_BLOCK = registerBlock(Blocks.SLIME_BLOCK, CreativeModeTab.TAB_DECORATIONS);
-      GRASS_PATH = registerBlock(Blocks.GRASS_PATH, CreativeModeTab.TAB_DECORATIONS);
+      DIRT_PATH = registerBlock(Blocks.DIRT_PATH, CreativeModeTab.TAB_DECORATIONS);
       SUNFLOWER = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.SUNFLOWER, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
       LILAC = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.LILAC, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
       ROSE_BUSH = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.ROSE_BUSH, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
       PEONY = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.PEONY, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
       TALL_GRASS = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.TALL_GRASS, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
@@ -1448,11 +1544,10 @@
       NETHER_WART_BLOCK = registerBlock(Blocks.NETHER_WART_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       WARPED_WART_BLOCK = registerBlock(Blocks.WARPED_WART_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       RED_NETHER_BRICKS = registerBlock(Blocks.RED_NETHER_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       BONE_BLOCK = registerBlock(Blocks.BONE_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       STRUCTURE_VOID = registerBlock(Blocks.STRUCTURE_VOID);
-      OBSERVER = registerBlock(Blocks.OBSERVER, CreativeModeTab.TAB_REDSTONE);
       SHULKER_BOX = registerBlock(new BlockItem(Blocks.SHULKER_BOX, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS)));
       WHITE_SHULKER_BOX = registerBlock(new BlockItem(Blocks.WHITE_SHULKER_BOX, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS)));
       ORANGE_SHULKER_BOX = registerBlock(new BlockItem(Blocks.ORANGE_SHULKER_BOX, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS)));
       MAGENTA_SHULKER_BOX = registerBlock(new BlockItem(Blocks.MAGENTA_SHULKER_BOX, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS)));
       LIGHT_BLUE_SHULKER_BOX = registerBlock(new BlockItem(Blocks.LIGHT_BLUE_SHULKER_BOX, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS)));
@@ -1561,10 +1656,14 @@
       GRANITE_STAIRS = registerBlock(Blocks.GRANITE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       ANDESITE_STAIRS = registerBlock(Blocks.ANDESITE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       RED_NETHER_BRICK_STAIRS = registerBlock(Blocks.RED_NETHER_BRICK_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       POLISHED_ANDESITE_STAIRS = registerBlock(Blocks.POLISHED_ANDESITE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       DIORITE_STAIRS = registerBlock(Blocks.DIORITE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      COBBLED_DEEPSLATE_STAIRS = registerBlock(Blocks.COBBLED_DEEPSLATE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      POLISHED_DEEPSLATE_STAIRS = registerBlock(Blocks.POLISHED_DEEPSLATE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      DEEPSLATE_TILE_STAIRS = registerBlock(Blocks.DEEPSLATE_TILE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      DEEPSLATE_BRICK_STAIRS = registerBlock(Blocks.DEEPSLATE_BRICK_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       POLISHED_GRANITE_SLAB = registerBlock(Blocks.POLISHED_GRANITE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
       SMOOTH_RED_SANDSTONE_SLAB = registerBlock(Blocks.SMOOTH_RED_SANDSTONE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
       MOSSY_STONE_BRICK_SLAB = registerBlock(Blocks.MOSSY_STONE_BRICK_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
       POLISHED_DIORITE_SLAB = registerBlock(Blocks.POLISHED_DIORITE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
       MOSSY_COBBLESTONE_SLAB = registerBlock(Blocks.MOSSY_COBBLESTONE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
@@ -1574,22 +1673,87 @@
       GRANITE_SLAB = registerBlock(Blocks.GRANITE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
       ANDESITE_SLAB = registerBlock(Blocks.ANDESITE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
       RED_NETHER_BRICK_SLAB = registerBlock(Blocks.RED_NETHER_BRICK_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
       POLISHED_ANDESITE_SLAB = registerBlock(Blocks.POLISHED_ANDESITE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
       DIORITE_SLAB = registerBlock(Blocks.DIORITE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      COBBLED_DEEPSLATE_SLAB = registerBlock(Blocks.COBBLED_DEEPSLATE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      POLISHED_DEEPSLATE_SLAB = registerBlock(Blocks.POLISHED_DEEPSLATE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      DEEPSLATE_BRICK_SLAB = registerBlock(Blocks.DEEPSLATE_BRICK_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      DEEPSLATE_TILE_SLAB = registerBlock(Blocks.DEEPSLATE_TILE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
       SCAFFOLDING = registerBlock((BlockItem)(new ScaffoldingBlockItem(Blocks.SCAFFOLDING, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
+      REDSTONE = registerItem((String)"redstone", new ItemNameBlockItem(Blocks.REDSTONE_WIRE, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE)));
+      REDSTONE_TORCH = registerBlock((BlockItem)(new StandingAndWallBlockItem(Blocks.REDSTONE_TORCH, Blocks.REDSTONE_WALL_TORCH, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE))));
+      REDSTONE_BLOCK = registerBlock(Blocks.REDSTONE_BLOCK, CreativeModeTab.TAB_REDSTONE);
+      REPEATER = registerBlock(Blocks.REPEATER, CreativeModeTab.TAB_REDSTONE);
+      COMPARATOR = registerBlock(Blocks.COMPARATOR, CreativeModeTab.TAB_REDSTONE);
+      PISTON = registerBlock(Blocks.PISTON, CreativeModeTab.TAB_REDSTONE);
+      STICKY_PISTON = registerBlock(Blocks.STICKY_PISTON, CreativeModeTab.TAB_REDSTONE);
+      SLIME_BLOCK = registerBlock(Blocks.SLIME_BLOCK, CreativeModeTab.TAB_REDSTONE);
+      HONEY_BLOCK = registerBlock(Blocks.HONEY_BLOCK, CreativeModeTab.TAB_REDSTONE);
+      OBSERVER = registerBlock(Blocks.OBSERVER, CreativeModeTab.TAB_REDSTONE);
+      HOPPER = registerBlock(Blocks.HOPPER, CreativeModeTab.TAB_REDSTONE);
+      DISPENSER = registerBlock(Blocks.DISPENSER, CreativeModeTab.TAB_REDSTONE);
+      DROPPER = registerBlock(Blocks.DROPPER, CreativeModeTab.TAB_REDSTONE);
+      LECTERN = registerBlock(Blocks.LECTERN, CreativeModeTab.TAB_REDSTONE);
+      TARGET = registerBlock(Blocks.TARGET, CreativeModeTab.TAB_REDSTONE);
+      LEVER = registerBlock(Blocks.LEVER, CreativeModeTab.TAB_REDSTONE);
+      LIGHTNING_ROD = registerBlock(Blocks.LIGHTNING_ROD, CreativeModeTab.TAB_REDSTONE);
+      DAYLIGHT_DETECTOR = registerBlock(Blocks.DAYLIGHT_DETECTOR, CreativeModeTab.TAB_REDSTONE);
+      SCULK_SENSOR = registerBlock(Blocks.SCULK_SENSOR, CreativeModeTab.TAB_REDSTONE);
+      TRIPWIRE_HOOK = registerBlock(Blocks.TRIPWIRE_HOOK, CreativeModeTab.TAB_REDSTONE);
+      TRAPPED_CHEST = registerBlock(Blocks.TRAPPED_CHEST, CreativeModeTab.TAB_REDSTONE);
+      TNT = registerBlock(Blocks.TNT, CreativeModeTab.TAB_REDSTONE);
+      REDSTONE_LAMP = registerBlock(Blocks.REDSTONE_LAMP, CreativeModeTab.TAB_REDSTONE);
+      NOTE_BLOCK = registerBlock(Blocks.NOTE_BLOCK, CreativeModeTab.TAB_REDSTONE);
+      STONE_BUTTON = registerBlock(Blocks.STONE_BUTTON, CreativeModeTab.TAB_REDSTONE);
+      POLISHED_BLACKSTONE_BUTTON = registerBlock(Blocks.POLISHED_BLACKSTONE_BUTTON, CreativeModeTab.TAB_REDSTONE);
+      OAK_BUTTON = registerBlock(Blocks.OAK_BUTTON, CreativeModeTab.TAB_REDSTONE);
+      SPRUCE_BUTTON = registerBlock(Blocks.SPRUCE_BUTTON, CreativeModeTab.TAB_REDSTONE);
+      BIRCH_BUTTON = registerBlock(Blocks.BIRCH_BUTTON, CreativeModeTab.TAB_REDSTONE);
+      JUNGLE_BUTTON = registerBlock(Blocks.JUNGLE_BUTTON, CreativeModeTab.TAB_REDSTONE);
+      ACACIA_BUTTON = registerBlock(Blocks.ACACIA_BUTTON, CreativeModeTab.TAB_REDSTONE);
+      DARK_OAK_BUTTON = registerBlock(Blocks.DARK_OAK_BUTTON, CreativeModeTab.TAB_REDSTONE);
+      CRIMSON_BUTTON = registerBlock(Blocks.CRIMSON_BUTTON, CreativeModeTab.TAB_REDSTONE);
+      WARPED_BUTTON = registerBlock(Blocks.WARPED_BUTTON, CreativeModeTab.TAB_REDSTONE);
+      STONE_PRESSURE_PLATE = registerBlock(Blocks.STONE_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
+      POLISHED_BLACKSTONE_PRESSURE_PLATE = registerBlock(Blocks.POLISHED_BLACKSTONE_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
+      LIGHT_WEIGHTED_PRESSURE_PLATE = registerBlock(Blocks.LIGHT_WEIGHTED_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
+      HEAVY_WEIGHTED_PRESSURE_PLATE = registerBlock(Blocks.HEAVY_WEIGHTED_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
+      OAK_PRESSURE_PLATE = registerBlock(Blocks.OAK_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
+      SPRUCE_PRESSURE_PLATE = registerBlock(Blocks.SPRUCE_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
+      BIRCH_PRESSURE_PLATE = registerBlock(Blocks.BIRCH_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
+      JUNGLE_PRESSURE_PLATE = registerBlock(Blocks.JUNGLE_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
+      ACACIA_PRESSURE_PLATE = registerBlock(Blocks.ACACIA_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
+      DARK_OAK_PRESSURE_PLATE = registerBlock(Blocks.DARK_OAK_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
+      CRIMSON_PRESSURE_PLATE = registerBlock(Blocks.CRIMSON_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
+      WARPED_PRESSURE_PLATE = registerBlock(Blocks.WARPED_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
       IRON_DOOR = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.IRON_DOOR, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE))));
       OAK_DOOR = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.OAK_DOOR, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE))));
       SPRUCE_DOOR = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.SPRUCE_DOOR, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE))));
       BIRCH_DOOR = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.BIRCH_DOOR, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE))));
       JUNGLE_DOOR = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.JUNGLE_DOOR, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE))));
       ACACIA_DOOR = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.ACACIA_DOOR, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE))));
       DARK_OAK_DOOR = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.DARK_OAK_DOOR, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE))));
       CRIMSON_DOOR = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.CRIMSON_DOOR, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE))));
       WARPED_DOOR = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.WARPED_DOOR, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE))));
-      REPEATER = registerBlock(Blocks.REPEATER, CreativeModeTab.TAB_REDSTONE);
-      COMPARATOR = registerBlock(Blocks.COMPARATOR, CreativeModeTab.TAB_REDSTONE);
+      IRON_TRAPDOOR = registerBlock(Blocks.IRON_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
+      OAK_TRAPDOOR = registerBlock(Blocks.OAK_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
+      SPRUCE_TRAPDOOR = registerBlock(Blocks.SPRUCE_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
+      BIRCH_TRAPDOOR = registerBlock(Blocks.BIRCH_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
+      JUNGLE_TRAPDOOR = registerBlock(Blocks.JUNGLE_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
+      ACACIA_TRAPDOOR = registerBlock(Blocks.ACACIA_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
+      DARK_OAK_TRAPDOOR = registerBlock(Blocks.DARK_OAK_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
+      CRIMSON_TRAPDOOR = registerBlock(Blocks.CRIMSON_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
+      WARPED_TRAPDOOR = registerBlock(Blocks.WARPED_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
+      OAK_FENCE_GATE = registerBlock(Blocks.OAK_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
+      SPRUCE_FENCE_GATE = registerBlock(Blocks.SPRUCE_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
+      BIRCH_FENCE_GATE = registerBlock(Blocks.BIRCH_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
+      JUNGLE_FENCE_GATE = registerBlock(Blocks.JUNGLE_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
+      ACACIA_FENCE_GATE = registerBlock(Blocks.ACACIA_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
+      DARK_OAK_FENCE_GATE = registerBlock(Blocks.DARK_OAK_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
+      CRIMSON_FENCE_GATE = registerBlock(Blocks.CRIMSON_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
+      WARPED_FENCE_GATE = registerBlock(Blocks.WARPED_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
       STRUCTURE_BLOCK = registerBlock((BlockItem)(new GameMasterBlockItem(Blocks.STRUCTURE_BLOCK, (new Item.Properties()).rarity(Rarity.EPIC))));
       JIGSAW = registerBlock((BlockItem)(new GameMasterBlockItem(Blocks.JIGSAW, (new Item.Properties()).rarity(Rarity.EPIC))));
       TURTLE_HELMET = registerItem((String)"turtle_helmet", new ArmorItem(ArmorMaterials.TURTLE, EquipmentSlot.HEAD, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
       SCUTE = registerItem("scute", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       FLINT_AND_STEEL = registerItem((String)"flint_and_steel", new FlintAndSteelItem((new Item.Properties()).durability(64).tab(CreativeModeTab.TAB_TOOLS)));
@@ -1598,10 +1762,11 @@
       ARROW = registerItem((String)"arrow", new ArrowItem((new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
       COAL = registerItem("coal", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       CHARCOAL = registerItem("charcoal", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       DIAMOND = registerItem("diamond", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       IRON_INGOT = registerItem("iron_ingot", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
+      COPPER_INGOT = registerItem("copper_ingot", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       GOLD_INGOT = registerItem("gold_ingot", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       NETHERITE_INGOT = registerItem("netherite_ingot", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS).fireResistant()));
       NETHERITE_SCRAP = registerItem("netherite_scrap", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS).fireResistant()));
       WOODEN_SWORD = registerItem((String)"wooden_sword", new SwordItem(Tiers.WOOD, 3, -2.4F, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
       WOODEN_SHOVEL = registerItem((String)"wooden_shovel", new ShovelItem(Tiers.WOOD, 1.5F, -3.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
@@ -1683,39 +1848,41 @@
       BUCKET = registerItem((String)"bucket", new BucketItem(Fluids.EMPTY, (new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_MISC)));
       WATER_BUCKET = registerItem((String)"water_bucket", new BucketItem(Fluids.WATER, (new Item.Properties()).craftRemainder(BUCKET).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
       LAVA_BUCKET = registerItem((String)"lava_bucket", new BucketItem(Fluids.LAVA, (new Item.Properties()).craftRemainder(BUCKET).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
       MINECART = registerItem((String)"minecart", new MinecartItem(AbstractMinecart.Type.RIDEABLE, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
       SADDLE = registerItem((String)"saddle", new SaddleItem((new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
-      REDSTONE = registerItem((String)"redstone", new ItemNameBlockItem(Blocks.REDSTONE_WIRE, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE)));
       SNOWBALL = registerItem((String)"snowball", new SnowballItem((new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_MISC)));
       OAK_BOAT = registerItem((String)"oak_boat", new BoatItem(Boat.Type.OAK, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
       LEATHER = registerItem("leather", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       MILK_BUCKET = registerItem((String)"milk_bucket", new MilkBucketItem((new Item.Properties()).craftRemainder(BUCKET).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
-      PUFFERFISH_BUCKET = registerItem((String)"pufferfish_bucket", new FishBucketItem(EntityType.PUFFERFISH, Fluids.WATER, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
-      SALMON_BUCKET = registerItem((String)"salmon_bucket", new FishBucketItem(EntityType.SALMON, Fluids.WATER, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
-      COD_BUCKET = registerItem((String)"cod_bucket", new FishBucketItem(EntityType.COD, Fluids.WATER, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
-      TROPICAL_FISH_BUCKET = registerItem((String)"tropical_fish_bucket", new FishBucketItem(EntityType.TROPICAL_FISH, Fluids.WATER, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
+      PUFFERFISH_BUCKET = registerItem((String)"pufferfish_bucket", new MobBucketItem(EntityType.PUFFERFISH, Fluids.WATER, SoundEvents.BUCKET_EMPTY_FISH, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
+      SALMON_BUCKET = registerItem((String)"salmon_bucket", new MobBucketItem(EntityType.SALMON, Fluids.WATER, SoundEvents.BUCKET_EMPTY_FISH, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
+      COD_BUCKET = registerItem((String)"cod_bucket", new MobBucketItem(EntityType.COD, Fluids.WATER, SoundEvents.BUCKET_EMPTY_FISH, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
+      TROPICAL_FISH_BUCKET = registerItem((String)"tropical_fish_bucket", new MobBucketItem(EntityType.TROPICAL_FISH, Fluids.WATER, SoundEvents.BUCKET_EMPTY_FISH, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
+      AXOLOTL_BUCKET = registerItem((String)"axolotl_bucket", new MobBucketItem(EntityType.AXOLOTL, Fluids.WATER, SoundEvents.BUCKET_EMPTY_AXOLOTL, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
       BRICK = registerItem("brick", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       CLAY_BALL = registerItem("clay_ball", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       DRIED_KELP_BLOCK = registerBlock(Blocks.DRIED_KELP_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       PAPER = registerItem("paper", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       BOOK = registerItem((String)"book", new BookItem((new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       SLIME_BALL = registerItem("slime_ball", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       CHEST_MINECART = registerItem((String)"chest_minecart", new MinecartItem(AbstractMinecart.Type.CHEST, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
       FURNACE_MINECART = registerItem((String)"furnace_minecart", new MinecartItem(AbstractMinecart.Type.FURNACE, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
       EGG = registerItem((String)"egg", new EggItem((new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_MATERIALS)));
       COMPASS = registerItem((String)"compass", new CompassItem((new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
+      BUNDLE = registerItem((String)"bundle", new BundleItem((new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TOOLS)));
       FISHING_ROD = registerItem((String)"fishing_rod", new FishingRodItem((new Item.Properties()).durability(64).tab(CreativeModeTab.TAB_TOOLS)));
       CLOCK = registerItem("clock", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
       GLOWSTONE_DUST = registerItem("glowstone_dust", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       COD = registerItem("cod", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.COD)));
       SALMON = registerItem("salmon", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.SALMON)));
       TROPICAL_FISH = registerItem("tropical_fish", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.TROPICAL_FISH)));
       PUFFERFISH = registerItem("pufferfish", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.PUFFERFISH)));
       COOKED_COD = registerItem("cooked_cod", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.COOKED_COD)));
       COOKED_SALMON = registerItem("cooked_salmon", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.COOKED_SALMON)));
       INK_SAC = registerItem("ink_sac", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
+      GLOW_INK_SAC = registerItem("glow_ink_sac", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       COCOA_BEANS = registerItem((String)"cocoa_beans", new ItemNameBlockItem(Blocks.COCOA, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       LAPIS_LAZULI = registerItem("lapis_lazuli", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       WHITE_DYE = registerItem((String)"white_dye", new DyeItem(DyeColor.WHITE, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       ORANGE_DYE = registerItem((String)"orange_dye", new DyeItem(DyeColor.ORANGE, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       MAGENTA_DYE = registerItem((String)"magenta_dye", new DyeItem(DyeColor.MAGENTA, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
@@ -1777,10 +1944,11 @@
       MAGMA_CREAM = registerItem("magma_cream", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_BREWING)));
       BREWING_STAND = registerBlock(Blocks.BREWING_STAND, CreativeModeTab.TAB_BREWING);
       CAULDRON = registerBlock(Blocks.CAULDRON, CreativeModeTab.TAB_BREWING);
       ENDER_EYE = registerItem((String)"ender_eye", new EnderEyeItem((new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       GLISTERING_MELON_SLICE = registerItem("glistering_melon_slice", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_BREWING)));
+      AXOLOTL_SPAWN_EGG = registerItem((String)"axolotl_spawn_egg", new SpawnEggItem(EntityType.AXOLOTL, 16499171, 10890612, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       BAT_SPAWN_EGG = registerItem((String)"bat_spawn_egg", new SpawnEggItem(EntityType.BAT, 4996656, 986895, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       BEE_SPAWN_EGG = registerItem((String)"bee_spawn_egg", new SpawnEggItem(EntityType.BEE, 15582019, 4400155, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       BLAZE_SPAWN_EGG = registerItem((String)"blaze_spawn_egg", new SpawnEggItem(EntityType.BLAZE, 16167425, 16775294, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       CAT_SPAWN_EGG = registerItem((String)"cat_spawn_egg", new SpawnEggItem(EntityType.CAT, 15714446, 9794134, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       CAVE_SPIDER_SPAWN_EGG = registerItem((String)"cave_spider_spawn_egg", new SpawnEggItem(EntityType.CAVE_SPIDER, 803406, 11013646, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
@@ -1795,10 +1963,11 @@
       ENDERMAN_SPAWN_EGG = registerItem((String)"enderman_spawn_egg", new SpawnEggItem(EntityType.ENDERMAN, 1447446, 0, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       ENDERMITE_SPAWN_EGG = registerItem((String)"endermite_spawn_egg", new SpawnEggItem(EntityType.ENDERMITE, 1447446, 7237230, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       EVOKER_SPAWN_EGG = registerItem((String)"evoker_spawn_egg", new SpawnEggItem(EntityType.EVOKER, 9804699, 1973274, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       FOX_SPAWN_EGG = registerItem((String)"fox_spawn_egg", new SpawnEggItem(EntityType.FOX, 14005919, 13396256, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       GHAST_SPAWN_EGG = registerItem((String)"ghast_spawn_egg", new SpawnEggItem(EntityType.GHAST, 16382457, 12369084, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
+      GLOW_SQUID_SPAWN_EGG = registerItem((String)"glow_squid_spawn_egg", new SpawnEggItem(EntityType.GLOW_SQUID, 611926, 8778172, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       GUARDIAN_SPAWN_EGG = registerItem((String)"guardian_spawn_egg", new SpawnEggItem(EntityType.GUARDIAN, 5931634, 15826224, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       HOGLIN_SPAWN_EGG = registerItem((String)"hoglin_spawn_egg", new SpawnEggItem(EntityType.HOGLIN, 13004373, 6251620, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       HORSE_SPAWN_EGG = registerItem((String)"horse_spawn_egg", new SpawnEggItem(EntityType.HORSE, 12623485, 15656192, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       HUSK_SPAWN_EGG = registerItem((String)"husk_spawn_egg", new SpawnEggItem(EntityType.HUSK, 7958625, 15125652, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       LLAMA_SPAWN_EGG = registerItem((String)"llama_spawn_egg", new SpawnEggItem(EntityType.LLAMA, 12623485, 10051392, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
@@ -1846,11 +2015,12 @@
       EXPERIENCE_BOTTLE = registerItem((String)"experience_bottle", new ExperienceBottleItem((new Item.Properties()).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.UNCOMMON)));
       FIRE_CHARGE = registerItem((String)"fire_charge", new FireChargeItem((new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       WRITABLE_BOOK = registerItem((String)"writable_book", new WritableBookItem((new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
       WRITTEN_BOOK = registerItem((String)"written_book", new WrittenBookItem((new Item.Properties()).stacksTo(16)));
       EMERALD = registerItem("emerald", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
-      ITEM_FRAME = registerItem((String)"item_frame", new ItemFrameItem((new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS)));
+      ITEM_FRAME = registerItem((String)"item_frame", new ItemFrameItem(EntityType.ITEM_FRAME, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS)));
+      GLOW_ITEM_FRAME = registerItem((String)"glow_item_frame", new ItemFrameItem(EntityType.GLOW_ITEM_FRAME, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS)));
       FLOWER_POT = registerBlock(Blocks.FLOWER_POT, CreativeModeTab.TAB_DECORATIONS);
       CARROT = registerItem((String)"carrot", new ItemNameBlockItem(Blocks.CARROTS, (new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.CARROT)));
       POTATO = registerItem((String)"potato", new ItemNameBlockItem(Blocks.POTATOES, (new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.POTATO)));
       BAKED_POTATO = registerItem("baked_potato", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.BAKED_POTATO)));
       POISONOUS_POTATO = registerItem("poisonous_potato", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.POISONOUS_POTATO)));
@@ -1960,30 +2130,28 @@
       SMOKER = registerBlock(Blocks.SMOKER, CreativeModeTab.TAB_DECORATIONS);
       BLAST_FURNACE = registerBlock(Blocks.BLAST_FURNACE, CreativeModeTab.TAB_DECORATIONS);
       CARTOGRAPHY_TABLE = registerBlock(Blocks.CARTOGRAPHY_TABLE, CreativeModeTab.TAB_DECORATIONS);
       FLETCHING_TABLE = registerBlock(Blocks.FLETCHING_TABLE, CreativeModeTab.TAB_DECORATIONS);
       GRINDSTONE = registerBlock(Blocks.GRINDSTONE, CreativeModeTab.TAB_DECORATIONS);
-      LECTERN = registerBlock(Blocks.LECTERN, CreativeModeTab.TAB_REDSTONE);
       SMITHING_TABLE = registerBlock(Blocks.SMITHING_TABLE, CreativeModeTab.TAB_DECORATIONS);
       STONECUTTER = registerBlock(Blocks.STONECUTTER, CreativeModeTab.TAB_DECORATIONS);
       BELL = registerBlock(Blocks.BELL, CreativeModeTab.TAB_DECORATIONS);
       LANTERN = registerBlock(Blocks.LANTERN, CreativeModeTab.TAB_DECORATIONS);
       SOUL_LANTERN = registerBlock(Blocks.SOUL_LANTERN, CreativeModeTab.TAB_DECORATIONS);
       SWEET_BERRIES = registerItem((String)"sweet_berries", new ItemNameBlockItem(Blocks.SWEET_BERRY_BUSH, (new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.SWEET_BERRIES)));
+      GLOW_BERRIES = registerItem((String)"glow_berries", new ItemNameBlockItem(Blocks.CAVE_VINES_HEAD, (new Item.Properties()).food(Foods.GLOW_BERRIES).tab(CreativeModeTab.TAB_FOOD)));
       CAMPFIRE = registerBlock(Blocks.CAMPFIRE, CreativeModeTab.TAB_DECORATIONS);
       SOUL_CAMPFIRE = registerBlock(Blocks.SOUL_CAMPFIRE, CreativeModeTab.TAB_DECORATIONS);
       SHROOMLIGHT = registerBlock(Blocks.SHROOMLIGHT, CreativeModeTab.TAB_DECORATIONS);
       HONEYCOMB = registerItem("honeycomb", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       BEE_NEST = registerBlock(Blocks.BEE_NEST, CreativeModeTab.TAB_DECORATIONS);
       BEEHIVE = registerBlock(Blocks.BEEHIVE, CreativeModeTab.TAB_DECORATIONS);
       HONEY_BOTTLE = registerItem((String)"honey_bottle", new HoneyBottleItem((new Item.Properties()).craftRemainder(GLASS_BOTTLE).food(Foods.HONEY_BOTTLE).tab(CreativeModeTab.TAB_FOOD).stacksTo(16)));
-      HONEY_BLOCK = registerBlock(Blocks.HONEY_BLOCK, CreativeModeTab.TAB_DECORATIONS);
       HONEYCOMB_BLOCK = registerBlock(Blocks.HONEYCOMB_BLOCK, CreativeModeTab.TAB_DECORATIONS);
       LODESTONE = registerBlock(Blocks.LODESTONE, CreativeModeTab.TAB_DECORATIONS);
       NETHERITE_BLOCK = registerBlock(new BlockItem(Blocks.NETHERITE_BLOCK, (new Item.Properties()).tab(CreativeModeTab.TAB_BUILDING_BLOCKS).fireResistant()));
       ANCIENT_DEBRIS = registerBlock(new BlockItem(Blocks.ANCIENT_DEBRIS, (new Item.Properties()).tab(CreativeModeTab.TAB_BUILDING_BLOCKS).fireResistant()));
-      TARGET = registerBlock(Blocks.TARGET, CreativeModeTab.TAB_REDSTONE);
       CRYING_OBSIDIAN = registerBlock(Blocks.CRYING_OBSIDIAN, CreativeModeTab.TAB_BUILDING_BLOCKS);
       BLACKSTONE = registerBlock(Blocks.BLACKSTONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       BLACKSTONE_SLAB = registerBlock(Blocks.BLACKSTONE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
       BLACKSTONE_STAIRS = registerBlock(Blocks.BLACKSTONE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       GILDED_BLACKSTONE = registerBlock(Blocks.GILDED_BLACKSTONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
@@ -1994,7 +2162,63 @@
       POLISHED_BLACKSTONE_BRICKS = registerBlock(Blocks.POLISHED_BLACKSTONE_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       POLISHED_BLACKSTONE_BRICK_SLAB = registerBlock(Blocks.POLISHED_BLACKSTONE_BRICK_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
       POLISHED_BLACKSTONE_BRICK_STAIRS = registerBlock(Blocks.POLISHED_BLACKSTONE_BRICK_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       CRACKED_POLISHED_BLACKSTONE_BRICKS = registerBlock(Blocks.CRACKED_POLISHED_BLACKSTONE_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       RESPAWN_ANCHOR = registerBlock(Blocks.RESPAWN_ANCHOR, CreativeModeTab.TAB_DECORATIONS);
+      CANDLE = registerBlock(Blocks.CANDLE, CreativeModeTab.TAB_DECORATIONS);
+      WHITE_CANDLE = registerBlock(Blocks.WHITE_CANDLE, CreativeModeTab.TAB_DECORATIONS);
+      ORANGE_CANDLE = registerBlock(Blocks.ORANGE_CANDLE, CreativeModeTab.TAB_DECORATIONS);
+      MAGENTA_CANDLE = registerBlock(Blocks.MAGENTA_CANDLE, CreativeModeTab.TAB_DECORATIONS);
+      LIGHT_BLUE_CANDLE = registerBlock(Blocks.LIGHT_BLUE_CANDLE, CreativeModeTab.TAB_DECORATIONS);
+      YELLOW_CANDLE = registerBlock(Blocks.YELLOW_CANDLE, CreativeModeTab.TAB_DECORATIONS);
+      LIME_CANDLE = registerBlock(Blocks.LIME_CANDLE, CreativeModeTab.TAB_DECORATIONS);
+      PINK_CANDLE = registerBlock(Blocks.PINK_CANDLE, CreativeModeTab.TAB_DECORATIONS);
+      GRAY_CANDLE = registerBlock(Blocks.GRAY_CANDLE, CreativeModeTab.TAB_DECORATIONS);
+      LIGHT_GRAY_CANDLE = registerBlock(Blocks.LIGHT_GRAY_CANDLE, CreativeModeTab.TAB_DECORATIONS);
+      CYAN_CANDLE = registerBlock(Blocks.CYAN_CANDLE, CreativeModeTab.TAB_DECORATIONS);
+      PURPLE_CANDLE = registerBlock(Blocks.PURPLE_CANDLE, CreativeModeTab.TAB_DECORATIONS);
+      BLUE_CANDLE = registerBlock(Blocks.BLUE_CANDLE, CreativeModeTab.TAB_DECORATIONS);
+      BROWN_CANDLE = registerBlock(Blocks.BROWN_CANDLE, CreativeModeTab.TAB_DECORATIONS);
+      GREEN_CANDLE = registerBlock(Blocks.GREEN_CANDLE, CreativeModeTab.TAB_DECORATIONS);
+      RED_CANDLE = registerBlock(Blocks.RED_CANDLE, CreativeModeTab.TAB_DECORATIONS);
+      BLACK_CANDLE = registerBlock(Blocks.BLACK_CANDLE, CreativeModeTab.TAB_DECORATIONS);
+      AMETHYST_SHARD = registerItem("amethyst_shard", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
+      AMETHYST_BLOCK = registerBlock(Blocks.AMETHYST_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      BUDDING_AMETHYST = registerBlock(Blocks.BUDDING_AMETHYST, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      SMALL_AMETHYST_BUD = registerBlock(Blocks.SMALL_AMETHYST_BUD, CreativeModeTab.TAB_DECORATIONS);
+      MEDIUM_AMETHYST_BUD = registerBlock(Blocks.MEDIUM_AMETHYST_BUD, CreativeModeTab.TAB_DECORATIONS);
+      LARGE_AMETHYST_BUD = registerBlock(Blocks.LARGE_AMETHYST_BUD, CreativeModeTab.TAB_DECORATIONS);
+      AMETHYST_CLUSTER = registerBlock(Blocks.AMETHYST_CLUSTER, CreativeModeTab.TAB_DECORATIONS);
+      SPYGLASS = registerItem((String)"spyglass", new SpyglassItem((new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS).stacksTo(1)));
+      COPPER_BLOCK = registerBlock(Blocks.COPPER_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      EXPOSED_COPPER_BLOCK = registerBlock(Blocks.EXPOSED_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WEATHERED_COPPER_BLOCK = registerBlock(Blocks.WEATHERED_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      OXIDIZED_COPPER_BLOCK = registerBlock(Blocks.OXIDIZED_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      CUT_COPPER = registerBlock(Blocks.CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      EXPOSED_CUT_COPPER = registerBlock(Blocks.EXPOSED_CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WEATHERED_CUT_COPPER = registerBlock(Blocks.WEATHERED_CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      OXIDIZED_CUT_COPPER = registerBlock(Blocks.OXIDIZED_CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      CUT_COPPER_STAIRS = registerBlock(Blocks.CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      EXPOSED_CUT_COPPER_STAIRS = registerBlock(Blocks.EXPOSED_CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WEATHERED_CUT_COPPER_STAIRS = registerBlock(Blocks.WEATHERED_CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      OXIDIZED_CUT_COPPER_STAIRS = registerBlock(Blocks.OXIDIZED_CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      CUT_COPPER_SLAB = registerBlock(Blocks.CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      EXPOSED_CUT_COPPER_SLAB = registerBlock(Blocks.EXPOSED_CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WEATHERED_CUT_COPPER_SLAB = registerBlock(Blocks.WEATHERED_CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      OXIDIZED_CUT_COPPER_SLAB = registerBlock(Blocks.OXIDIZED_CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WAXED_COPPER = registerBlock(Blocks.WAXED_COPPER_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WAXED_EXPOSED_COPPER = registerBlock(Blocks.WAXED_EXPOSED_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WAXED_WEATHERED_COPPER = registerBlock(Blocks.WAXED_WEATHERED_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WAXED_CUT_COPPER = registerBlock(Blocks.WAXED_CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WAXED_EXPOSED_CUT_COPPER = registerBlock(Blocks.WAXED_EXPOSED_CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WAXED_WEATHERED_CUT_COPPER = registerBlock(Blocks.WAXED_WEATHERED_CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WAXED_CUT_COPPER_STAIRS = registerBlock(Blocks.WAXED_CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WAXED_EXPOSED_CUT_COPPER_STAIRS = registerBlock(Blocks.WAXED_EXPOSED_CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WAXED_WEATHERED_CUT_COPPER_STAIRS = registerBlock(Blocks.WAXED_WEATHERED_CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WAXED_CUT_COPPER_SLAB = registerBlock(Blocks.WAXED_CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WAXED_EXPOSED_CUT_COPPER_SLAB = registerBlock(Blocks.WAXED_EXPOSED_CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WAXED_WEATHERED_CUT_COPPER_SLAB = registerBlock(Blocks.WAXED_WEATHERED_CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      POWDER_SNOW_BUCKET = registerItem((String)"powder_snow_bucket", new SolidBucketItem(Blocks.POWDER_SNOW, SoundEvents.BUCKET_EMPTY_POWDER_SNOW, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
+      POINTED_DRIPSTONE = registerBlock(Blocks.POINTED_DRIPSTONE, CreativeModeTab.TAB_DECORATIONS);
+      DRIPSTONE_BLOCK = registerBlock(Blocks.DRIPSTONE_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
    }
 }
