--- net/minecraft/world/item/DiggerItem.java
+++ net/minecraft/world/item/DiggerItem.java
@@ -1,27 +1,28 @@
 package net.minecraft.world.item;
 
 import com.google.common.collect.ImmutableMultimap;
 import com.google.common.collect.Multimap;
-import java.util.Set;
 import net.minecraft.core.BlockPos;
+import net.minecraft.tags.BlockTags;
+import net.minecraft.tags.Tag;
 import net.minecraft.world.entity.EquipmentSlot;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.ai.attributes.Attribute;
 import net.minecraft.world.entity.ai.attributes.AttributeModifier;
 import net.minecraft.world.entity.ai.attributes.Attributes;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.Block;
 import net.minecraft.world.level.block.state.BlockState;
 
 public class DiggerItem extends TieredItem implements Vanishable {
-   private final Set<Block> blocks;
+   private final Tag<Block> blocks;
    protected final float speed;
    private final float attackDamageBaseline;
    private final Multimap<Attribute, AttributeModifier> defaultModifiers;
 
-   protected DiggerItem(float var1, float var2, Tier var3, Set<Block> var4, Item.Properties var5) {
+   protected DiggerItem(float var1, float var2, Tier var3, Tag<Block> var4, Item.Properties var5) {
       super(var3, var5);
       this.blocks = var4;
       this.speed = var3.getSpeed();
       this.attackDamageBaseline = var1 + var3.getAttackDamageBonus();
       ImmutableMultimap.Builder var6 = ImmutableMultimap.builder();
@@ -56,6 +57,17 @@
    }
 
    public float getAttackDamage() {
       return this.attackDamageBaseline;
    }
+
+   public boolean isCorrectToolForDrops(BlockState var1) {
+      int var2 = this.getTier().getLevel();
+      if (var2 < 3 && var1.is(BlockTags.NEEDS_DIAMOND_TOOL)) {
+         return false;
+      } else if (var2 < 2 && var1.is(BlockTags.NEEDS_IRON_TOOL)) {
+         return false;
+      } else {
+         return var2 < 1 && var1.is(BlockTags.NEEDS_STONE_TOOL) ? false : var1.is(this.blocks);
+      }
+   }
 }
