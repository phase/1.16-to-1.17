--- net/minecraft/world/entity/animal/Squid.java
+++ net/minecraft/world/entity/animal/Squid.java
@@ -1,17 +1,19 @@
 package net.minecraft.world.entity.animal;
 
 import java.util.Random;
 import net.minecraft.core.BlockPos;
+import net.minecraft.core.particles.ParticleOptions;
 import net.minecraft.core.particles.ParticleTypes;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.sounds.SoundEvent;
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.tags.FluidTags;
 import net.minecraft.util.Mth;
 import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.effect.MobEffects;
+import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityDimensions;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.Mob;
 import net.minecraft.world.entity.MobSpawnType;
@@ -71,16 +73,20 @@
 
    protected SoundEvent getDeathSound() {
       return SoundEvents.SQUID_DEATH;
    }
 
+   protected SoundEvent getSquirtSound() {
+      return SoundEvents.SQUID_SQUIRT;
+   }
+
    protected float getSoundVolume() {
       return 0.4F;
    }
 
-   protected boolean isMovementNoisy() {
-      return false;
+   protected Entity.MovementEmission getMovementEmission() {
+      return Entity.MovementEmission.EVENTS;
    }
 
    public void aiStep() {
       super.aiStep();
       this.xBodyRotO = this.xBodyRot;
@@ -159,21 +165,25 @@
       var2 = var2.yRot(-this.yBodyRotO * 0.017453292F);
       return var2;
    }
 
    private void spawnInk() {
-      this.playSound(SoundEvents.SQUID_SQUIRT, this.getSoundVolume(), this.getVoicePitch());
+      this.playSound(this.getSquirtSound(), this.getSoundVolume(), this.getVoicePitch());
       Vec3 var1 = this.rotateVector(new Vec3(0.0D, -1.0D, 0.0D)).add(this.getX(), this.getY(), this.getZ());
 
       for(int var2 = 0; var2 < 30; ++var2) {
          Vec3 var3 = this.rotateVector(new Vec3((double)this.random.nextFloat() * 0.6D - 0.3D, -1.0D, (double)this.random.nextFloat() * 0.6D - 0.3D));
          Vec3 var4 = var3.scale(0.3D + (double)(this.random.nextFloat() * 2.0F));
-         ((ServerLevel)this.level).sendParticles(ParticleTypes.SQUID_INK, var1.x, var1.y + 0.5D, var1.z, 0, var4.x, var4.y, var4.z, 0.10000000149011612D);
+         ((ServerLevel)this.level).sendParticles(this.getInkParticle(), var1.x, var1.y + 0.5D, var1.z, 0, var4.x, var4.y, var4.z, 0.10000000149011612D);
       }
 
    }
 
+   protected ParticleOptions getInkParticle() {
+      return ParticleTypes.SQUID_INK;
+   }
+
    public void travel(Vec3 var1) {
       this.move(MoverType.SELF, this.getDeltaMovement());
    }
 
    public static boolean checkSquidSpawnRules(EntityType<Squid> var0, LevelAccessor var1, MobSpawnType var2, BlockPos var3, Random var4) {
