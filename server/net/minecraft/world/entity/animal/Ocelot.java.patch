--- net/minecraft/world/entity/animal/Ocelot.java
+++ net/minecraft/world/entity/animal/Ocelot.java
@@ -16,11 +16,11 @@
 import net.minecraft.tags.BlockTags;
 import net.minecraft.world.DifficultyInstance;
 import net.minecraft.world.InteractionHand;
 import net.minecraft.world.InteractionResult;
 import net.minecraft.world.damagesource.DamageSource;
-import net.minecraft.world.entity.AgableMob;
+import net.minecraft.world.entity.AgeableMob;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntitySelector;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.Mob;
@@ -123,11 +123,11 @@
 
    public static AttributeSupplier.Builder createAttributes() {
       return Mob.createMobAttributes().add(Attributes.MAX_HEALTH, 10.0D).add(Attributes.MOVEMENT_SPEED, 0.30000001192092896D).add(Attributes.ATTACK_DAMAGE, 3.0D);
    }
 
-   public boolean causeFallDamage(float var1, float var2) {
+   public boolean causeFallDamage(float var1, float var2, DamageSource var3) {
       return false;
    }
 
    @Nullable
    protected SoundEvent getAmbientSound() {
@@ -152,18 +152,14 @@
 
    public boolean doHurtTarget(Entity var1) {
       return var1.hurt(DamageSource.mobAttack(this), this.getAttackDamage());
    }
 
-   public boolean hurt(DamageSource var1, float var2) {
-      return this.isInvulnerableTo(var1) ? false : super.hurt(var1, var2);
-   }
-
    public InteractionResult mobInteract(Player var1, InteractionHand var2) {
       ItemStack var3 = var1.getItemInHand(var2);
       if ((this.temptGoal == null || this.temptGoal.isRunning()) && !this.isTrusting() && this.isFood(var3) && var1.distanceToSqr(this) < 9.0D) {
-         this.usePlayerItem(var1, var3);
+         this.usePlayerItem(var1, var2, var3);
          if (!this.level.isClientSide) {
             if (this.random.nextInt(3) == 0) {
                this.setTrusting(true);
                this.spawnTrustingParticles(true);
                this.level.broadcastEntityEvent(this, (byte)41);
@@ -204,11 +200,11 @@
          this.goalSelector.addGoal(4, this.ocelotAvoidPlayersGoal);
       }
 
    }
 
-   public Ocelot getBreedOffspring(ServerLevel var1, AgableMob var2) {
+   public Ocelot getBreedOffspring(ServerLevel var1, AgeableMob var2) {
       return (Ocelot)EntityType.OCELOT.create(var1);
    }
 
    public boolean isFood(ItemStack var1) {
       return TEMPT_INGREDIENT.test(var1);
@@ -235,11 +231,11 @@
    }
 
    @Nullable
    public SpawnGroupData finalizeSpawn(ServerLevelAccessor var1, DifficultyInstance var2, MobSpawnType var3, @Nullable SpawnGroupData var4, @Nullable CompoundTag var5) {
       if (var4 == null) {
-         var4 = new AgableMob.AgableMobGroupData(1.0F);
+         var4 = new AgeableMob.AgeableMobGroupData(1.0F);
       }
 
       return super.finalizeSpawn(var1, var2, var3, (SpawnGroupData)var4, var5);
    }
 
