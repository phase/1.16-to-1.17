--- net/minecraft/world/entity/animal/PolarBear.java
+++ net/minecraft/world/entity/animal/PolarBear.java
@@ -14,16 +14,16 @@
 import net.minecraft.network.syncher.EntityDataSerializers;
 import net.minecraft.network.syncher.SynchedEntityData;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.sounds.SoundEvent;
 import net.minecraft.sounds.SoundEvents;
-import net.minecraft.util.IntRange;
 import net.minecraft.util.Mth;
 import net.minecraft.util.TimeUtil;
+import net.minecraft.util.valueproviders.UniformInt;
 import net.minecraft.world.DifficultyInstance;
 import net.minecraft.world.damagesource.DamageSource;
-import net.minecraft.world.entity.AgableMob;
+import net.minecraft.world.entity.AgeableMob;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityDimensions;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.Mob;
@@ -52,23 +52,24 @@
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.state.BlockState;
 
 public class PolarBear extends Animal implements NeutralMob {
    private static final EntityDataAccessor<Boolean> DATA_STANDING_ID;
+   private static final float STAND_ANIMATION_TICKS = 6.0F;
    private float clientSideStandAnimationO;
    private float clientSideStandAnimation;
    private int warningSoundTicks;
-   private static final IntRange PERSISTENT_ANGER_TIME;
+   private static final UniformInt PERSISTENT_ANGER_TIME;
    private int remainingPersistentAngerTime;
    private UUID persistentAngerTarget;
 
    public PolarBear(EntityType<? extends PolarBear> var1, Level var2) {
       super(var1, var2);
    }
 
-   public AgableMob getBreedOffspring(ServerLevel var1, AgableMob var2) {
-      return (AgableMob)EntityType.POLAR_BEAR.create(var1);
+   public AgeableMob getBreedOffspring(ServerLevel var1, AgeableMob var2) {
+      return (AgeableMob)EntityType.POLAR_BEAR.create(var1);
    }
 
    public boolean isFood(ItemStack var1) {
       return false;
    }
@@ -102,20 +103,20 @@
       }
    }
 
    public void readAdditionalSaveData(CompoundTag var1) {
       super.readAdditionalSaveData(var1);
-      this.readPersistentAngerSaveData((ServerLevel)this.level, var1);
+      this.readPersistentAngerSaveData(this.level, var1);
    }
 
    public void addAdditionalSaveData(CompoundTag var1) {
       super.addAdditionalSaveData(var1);
       this.addPersistentAngerSaveData(var1);
    }
 
    public void startPersistentAngerTimer() {
-      this.setRemainingPersistentAngerTime(PERSISTENT_ANGER_TIME.randomValue(this.random));
+      this.setRemainingPersistentAngerTime(PERSISTENT_ANGER_TIME.sample(this.random));
    }
 
    public void setRemainingPersistentAngerTime(int var1) {
       this.remainingPersistentAngerTime = var1;
    }
@@ -211,38 +212,32 @@
 
    public void setStanding(boolean var1) {
       this.entityData.set(DATA_STANDING_ID, var1);
    }
 
+   public float getStandingAnimationScale(float var1) {
+      return Mth.lerp(var1, this.clientSideStandAnimationO, this.clientSideStandAnimation) / 6.0F;
+   }
+
    protected float getWaterSlowDown() {
       return 0.98F;
    }
 
    public SpawnGroupData finalizeSpawn(ServerLevelAccessor var1, DifficultyInstance var2, MobSpawnType var3, @Nullable SpawnGroupData var4, @Nullable CompoundTag var5) {
       if (var4 == null) {
-         var4 = new AgableMob.AgableMobGroupData(1.0F);
+         var4 = new AgeableMob.AgeableMobGroupData(1.0F);
       }
 
       return super.finalizeSpawn(var1, var2, var3, (SpawnGroupData)var4, var5);
    }
 
    static {
       DATA_STANDING_ID = SynchedEntityData.defineId(PolarBear.class, EntityDataSerializers.BOOLEAN);
       PERSISTENT_ANGER_TIME = TimeUtil.rangeOfSeconds(20, 39);
    }
 
-   class PolarBearPanicGoal extends PanicGoal {
-      public PolarBearPanicGoal() {
-         super(PolarBear.this, 2.0D);
-      }
-
-      public boolean canUse() {
-         return !PolarBear.this.isBaby() && !PolarBear.this.isOnFire() ? false : super.canUse();
-      }
-   }
-
-   class PolarBearMeleeAttackGoal extends MeleeAttackGoal {
+   private class PolarBearMeleeAttackGoal extends MeleeAttackGoal {
       public PolarBearMeleeAttackGoal() {
          super(PolarBear.this, 1.25D, true);
       }
 
       protected void checkAndPerformAttack(LivingEntity var1, double var2) {
@@ -276,10 +271,42 @@
       protected double getAttackReachSqr(LivingEntity var1) {
          return (double)(4.0F + var1.getBbWidth());
       }
    }
 
+   class PolarBearPanicGoal extends PanicGoal {
+      public PolarBearPanicGoal() {
+         super(PolarBear.this, 2.0D);
+      }
+
+      public boolean canUse() {
+         return !PolarBear.this.isBaby() && !PolarBear.this.isOnFire() ? false : super.canUse();
+      }
+   }
+
+   class PolarBearHurtByTargetGoal extends HurtByTargetGoal {
+      public PolarBearHurtByTargetGoal() {
+         super(PolarBear.this);
+      }
+
+      public void start() {
+         super.start();
+         if (PolarBear.this.isBaby()) {
+            this.alertOthers();
+            this.stop();
+         }
+
+      }
+
+      protected void alertOther(Mob var1, LivingEntity var2) {
+         if (var1 instanceof PolarBear && !var1.isBaby()) {
+            super.alertOther(var1, var2);
+         }
+
+      }
+   }
+
    class PolarBearAttackPlayersGoal extends NearestAttackableTargetGoal<Player> {
       public PolarBearAttackPlayersGoal() {
          super(PolarBear.this, Player.class, 20, true, true, (Predicate)null);
       }
 
@@ -305,28 +332,6 @@
 
       protected double getFollowDistance() {
          return super.getFollowDistance() * 0.5D;
       }
    }
-
-   class PolarBearHurtByTargetGoal extends HurtByTargetGoal {
-      public PolarBearHurtByTargetGoal() {
-         super(PolarBear.this);
-      }
-
-      public void start() {
-         super.start();
-         if (PolarBear.this.isBaby()) {
-            this.alertOthers();
-            this.stop();
-         }
-
-      }
-
-      protected void alertOther(Mob var1, LivingEntity var2) {
-         if (var1 instanceof PolarBear && !var1.isBaby()) {
-            super.alertOther(var1, var2);
-         }
-
-      }
-   }
 }
