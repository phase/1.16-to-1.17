--- net/minecraft/world/entity/animal/Rabbit.java
+++ net/minecraft/world/entity/animal/Rabbit.java
@@ -15,11 +15,11 @@
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.sounds.SoundSource;
 import net.minecraft.util.Mth;
 import net.minecraft.world.DifficultyInstance;
 import net.minecraft.world.damagesource.DamageSource;
-import net.minecraft.world.entity.AgableMob;
+import net.minecraft.world.entity.AgeableMob;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.Mob;
 import net.minecraft.world.entity.MobSpawnType;
@@ -39,11 +39,10 @@
 import net.minecraft.world.entity.ai.goal.WaterAvoidingRandomStrollGoal;
 import net.minecraft.world.entity.ai.goal.target.HurtByTargetGoal;
 import net.minecraft.world.entity.ai.goal.target.NearestAttackableTargetGoal;
 import net.minecraft.world.entity.monster.Monster;
 import net.minecraft.world.entity.player.Player;
-import net.minecraft.world.item.Item;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.Items;
 import net.minecraft.world.item.crafting.Ingredient;
 import net.minecraft.world.level.GameRules;
 import net.minecraft.world.level.Level;
@@ -57,12 +56,27 @@
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.pathfinder.Path;
 import net.minecraft.world.phys.Vec3;
 
 public class Rabbit extends Animal {
+   public static final double STROLL_SPEED_MOD = 0.6D;
+   public static final double BREED_SPEED_MOD = 0.8D;
+   public static final double FOLLOW_SPEED_MOD = 1.0D;
+   public static final double FLEE_SPEED_MOD = 2.2D;
+   public static final double ATTACK_SPEED_MOD = 1.4D;
    private static final EntityDataAccessor<Integer> DATA_TYPE_ID;
+   public static final int TYPE_BROWN = 0;
+   public static final int TYPE_WHITE = 1;
+   public static final int TYPE_BLACK = 2;
+   public static final int TYPE_WHITE_SPLOTCHED = 3;
+   public static final int TYPE_GOLD = 4;
+   public static final int TYPE_SALT = 5;
+   public static final int TYPE_EVIL = 99;
    private static final ResourceLocation KILLER_BUNNY;
+   public static final int EVIL_ATTACK_POWER = 8;
+   public static final int EVIL_ARMOR_VALUE = 8;
+   private static final int MORE_CARROTS_DELAY = 40;
    private int jumpTicks;
    private int jumpDuration;
    private boolean wasOnGround;
    private int jumpDelayTicks;
    private int moreCarrotTicks;
@@ -117,10 +131,14 @@
          this.level.broadcastEntityEvent(this, (byte)1);
       }
 
    }
 
+   public float getJumpCompletion(float var1) {
+      return this.jumpDuration == 0 ? 0.0F : ((float)this.jumpTicks + var1) / (float)this.jumpDuration;
+   }
+
    public void setSpeedModifier(double var1) {
       this.getNavigation().setSpeedModifier(var1);
       this.moveControl.setWantedPosition(this.moveControl.getWantedX(), this.moveControl.getWantedY(), this.moveControl.getWantedZ(), var1);
    }
 
@@ -276,19 +294,15 @@
 
    public SoundSource getSoundSource() {
       return this.getRabbitType() == 99 ? SoundSource.HOSTILE : SoundSource.NEUTRAL;
    }
 
-   public boolean hurt(DamageSource var1, float var2) {
-      return this.isInvulnerableTo(var1) ? false : super.hurt(var1, var2);
+   private static boolean isTemptingItem(ItemStack var0) {
+      return var0.is(Items.CARROT) || var0.is(Items.GOLDEN_CARROT) || var0.is(Blocks.DANDELION.asItem());
    }
 
-   private boolean isTemptingItem(Item var1) {
-      return var1 == Items.CARROT || var1 == Items.GOLDEN_CARROT || var1 == Blocks.DANDELION.asItem();
-   }
-
-   public Rabbit getBreedOffspring(ServerLevel var1, AgableMob var2) {
+   public Rabbit getBreedOffspring(ServerLevel var1, AgeableMob var2) {
       Rabbit var3 = (Rabbit)EntityType.RABBIT.create(var1);
       int var4 = this.getRandomRabbitType(var1);
       if (this.random.nextInt(20) != 0) {
          if (var2 instanceof Rabbit && this.random.nextBoolean()) {
             var4 = ((Rabbit)var2).getRabbitType();
@@ -300,11 +314,11 @@
       var3.setRabbitType(var4);
       return var3;
    }
 
    public boolean isFood(ItemStack var1) {
-      return this.isTemptingItem(var1.getItem());
+      return isTemptingItem(var1);
    }
 
    public int getRabbitType() {
       return (Integer)this.entityData.get(DATA_TYPE_ID);
    }
@@ -356,10 +370,25 @@
 
    private boolean wantsMoreFood() {
       return this.moreCarrotTicks == 0;
    }
 
+   public void handleEntityEvent(byte var1) {
+      if (var1 == 1) {
+         this.spawnSprintParticle();
+         this.jumpDuration = 10;
+         this.jumpTicks = 0;
+      } else {
+         super.handleEntityEvent(var1);
+      }
+
+   }
+
+   public Vec3 getLeashOffset() {
+      return new Vec3(0.0D, (double)(0.6F * this.getEyeHeight()), (double)(this.getBbWidth() * 0.4F));
+   }
+
    static {
       DATA_TYPE_ID = SynchedEntityData.defineId(Rabbit.class, EntityDataSerializers.INT);
       KILLER_BUNNY = new ResourceLocation("killer_bunny");
    }
 
@@ -422,11 +451,11 @@
             Level var1 = this.rabbit.level;
             BlockPos var2 = this.blockPos.above();
             BlockState var3 = var1.getBlockState(var2);
             Block var4 = var3.getBlock();
             if (this.canRaid && var4 instanceof CarrotBlock) {
-               Integer var5 = (Integer)var3.getValue(CarrotBlock.AGE);
+               int var5 = (Integer)var3.getValue(CarrotBlock.AGE);
                if (var5 == 0) {
                   var1.setBlock(var2, Blocks.AIR.defaultBlockState(), 2);
                   var1.destroyBlock(var2, true, this.rabbit);
                } else {
                   var1.setBlock(var2, (BlockState)var3.setValue(CarrotBlock.AGE, var5 - 1), 2);
@@ -441,16 +470,14 @@
          }
 
       }
 
       protected boolean isValidTarget(LevelReader var1, BlockPos var2) {
-         Block var3 = var1.getBlockState(var2).getBlock();
-         if (var3 == Blocks.FARMLAND && this.wantsToRaid && !this.canRaid) {
-            var2 = var2.above();
-            BlockState var4 = var1.getBlockState(var2);
-            var3 = var4.getBlock();
-            if (var3 instanceof CarrotBlock && ((CarrotBlock)var3).isMaxAge(var4)) {
+         BlockState var3 = var1.getBlockState(var2);
+         if (var3.is(Blocks.FARMLAND) && this.wantsToRaid && !this.canRaid) {
+            var3 = var1.getBlockState(var2.above());
+            if (var3.getBlock() instanceof CarrotBlock && ((CarrotBlock)var3.getBlock()).isMaxAge(var3)) {
                this.canRaid = true;
                return true;
             }
          }
 
@@ -531,11 +558,11 @@
          }
 
       }
    }
 
-   public static class RabbitGroupData extends AgableMob.AgableMobGroupData {
+   public static class RabbitGroupData extends AgeableMob.AgeableMobGroupData {
       public final int rabbitType;
 
       public RabbitGroupData(int var1) {
          super(1.0F);
          this.rabbitType = var1;
