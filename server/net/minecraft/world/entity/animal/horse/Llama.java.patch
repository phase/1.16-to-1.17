--- net/minecraft/world/entity/animal/horse/Llama.java
+++ net/minecraft/world/entity/animal/horse/Llama.java
@@ -10,15 +10,16 @@
 import net.minecraft.network.syncher.SynchedEntityData;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.sounds.SoundEvent;
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.tags.ItemTags;
+import net.minecraft.tags.Tag;
 import net.minecraft.util.Mth;
 import net.minecraft.world.Container;
 import net.minecraft.world.DifficultyInstance;
 import net.minecraft.world.damagesource.DamageSource;
-import net.minecraft.world.entity.AgableMob;
+import net.minecraft.world.entity.AgeableMob;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.MobSpawnType;
 import net.minecraft.world.entity.SpawnGroupData;
@@ -40,36 +41,43 @@
 import net.minecraft.world.entity.animal.Wolf;
 import net.minecraft.world.entity.monster.RangedAttackMob;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.entity.projectile.LlamaSpit;
 import net.minecraft.world.item.DyeColor;
-import net.minecraft.world.item.Item;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.Items;
 import net.minecraft.world.item.crafting.Ingredient;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.ServerLevelAccessor;
 import net.minecraft.world.level.block.Block;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.WoolCarpetBlock;
 import net.minecraft.world.level.block.state.BlockState;
+import net.minecraft.world.level.gameevent.GameEvent;
+import net.minecraft.world.phys.Vec3;
 
 public class Llama extends AbstractChestedHorse implements RangedAttackMob {
+   private static final int MAX_STRENGTH = 5;
+   private static final int VARIANTS = 4;
    private static final Ingredient FOOD_ITEMS;
    private static final EntityDataAccessor<Integer> DATA_STRENGTH_ID;
    private static final EntityDataAccessor<Integer> DATA_SWAG_ID;
    private static final EntityDataAccessor<Integer> DATA_VARIANT_ID;
-   private boolean didSpit;
+   boolean didSpit;
    @Nullable
    private Llama caravanHead;
    @Nullable
    private Llama caravanTail;
 
    public Llama(EntityType<? extends Llama> var1, Level var2) {
       super(var1, var2);
    }
 
+   public boolean isTraderLlama() {
+      return false;
+   }
+
    private void setStrength(int var1) {
       this.entityData.set(DATA_STRENGTH_ID, Math.max(1, Math.min(5, var1)));
    }
 
    private void setRandomStrength() {
@@ -127,11 +135,11 @@
       this.entityData.define(DATA_SWAG_ID, -1);
       this.entityData.define(DATA_VARIANT_ID, 0);
    }
 
    public int getVariant() {
-      return Mth.clamp((Integer)this.entityData.get(DATA_VARIANT_ID), 0, 3);
+      return Mth.clamp((int)(Integer)this.entityData.get(DATA_VARIANT_ID), (int)0, (int)3);
    }
 
    public void setVariant(int var1) {
       this.entityData.set(DATA_VARIANT_ID, var1);
    }
@@ -164,16 +172,15 @@
    protected boolean handleEating(Player var1, ItemStack var2) {
       byte var3 = 0;
       byte var4 = 0;
       float var5 = 0.0F;
       boolean var6 = false;
-      Item var7 = var2.getItem();
-      if (var7 == Items.WHEAT) {
+      if (var2.is(Items.WHEAT)) {
          var3 = 10;
          var4 = 3;
          var5 = 2.0F;
-      } else if (var7 == Blocks.HAY_BLOCK.asItem()) {
+      } else if (var2.is(Blocks.HAY_BLOCK.asItem())) {
          var3 = 90;
          var4 = 6;
          var5 = 10.0F;
          if (this.isTamed() && this.getAge() == 0 && this.canFallInLove()) {
             var6 = true;
@@ -200,14 +207,17 @@
          if (!this.level.isClientSide) {
             this.modifyTemper(var4);
          }
       }
 
-      if (var6 && !this.isSilent()) {
-         SoundEvent var8 = this.getEatingSound();
-         if (var8 != null) {
-            this.level.playSound((Player)null, this.getX(), this.getY(), this.getZ(), this.getEatingSound(), this.getSoundSource(), 1.0F, 1.0F + (this.random.nextFloat() - this.random.nextFloat()) * 0.2F);
+      if (var6) {
+         this.gameEvent(GameEvent.MOB_INTERACT, this.eyeBlockPosition());
+         if (!this.isSilent()) {
+            SoundEvent var7 = this.getEatingSound();
+            if (var7 != null) {
+               this.level.playSound((Player)null, this.getX(), this.getY(), this.getZ(), this.getEatingSound(), this.getSoundSource(), 1.0F, 1.0F + (this.random.nextFloat() - this.random.nextFloat()) * 0.2F);
+            }
          }
       }
 
       return var6;
    }
@@ -279,12 +289,11 @@
    public boolean isWearingArmor() {
       return !this.inventory.getItem(1).isEmpty();
    }
 
    public boolean isArmor(ItemStack var1) {
-      Item var2 = var1.getItem();
-      return ItemTags.CARPETS.contains(var2);
+      return var1.is((Tag)ItemTags.CARPETS);
    }
 
    public boolean isSaddleable() {
       return false;
    }
@@ -328,11 +337,11 @@
 
    public boolean canMate(Animal var1) {
       return var1 != this && var1 instanceof Llama && this.canParent() && ((Llama)var1).canParent();
    }
 
-   public Llama getBreedOffspring(ServerLevel var1, AgableMob var2) {
+   public Llama getBreedOffspring(ServerLevel var1, AgeableMob var2) {
       Llama var3 = this.makeBabyLlama();
       this.setOffspringAttributes(var2, var3);
       Llama var4 = (Llama)var2;
       int var5 = this.random.nextInt(Math.max(this.getStrength(), var4.getStrength())) + 1;
       if (this.random.nextFloat() < 0.03F) {
@@ -351,37 +360,37 @@
    private void spit(LivingEntity var1) {
       LlamaSpit var2 = new LlamaSpit(this.level, this);
       double var3 = var1.getX() - this.getX();
       double var5 = var1.getY(0.3333333333333333D) - var2.getY();
       double var7 = var1.getZ() - this.getZ();
-      float var9 = Mth.sqrt(var3 * var3 + var7 * var7) * 0.2F;
-      var2.shoot(var3, var5 + (double)var9, var7, 1.5F, 10.0F);
+      double var9 = Math.sqrt(var3 * var3 + var7 * var7) * 0.20000000298023224D;
+      var2.shoot(var3, var5 + var9, var7, 1.5F, 10.0F);
       if (!this.isSilent()) {
          this.level.playSound((Player)null, this.getX(), this.getY(), this.getZ(), SoundEvents.LLAMA_SPIT, this.getSoundSource(), 1.0F, 1.0F + (this.random.nextFloat() - this.random.nextFloat()) * 0.2F);
       }
 
       this.level.addFreshEntity(var2);
       this.didSpit = true;
    }
 
-   private void setDidSpit(boolean var1) {
+   void setDidSpit(boolean var1) {
       this.didSpit = var1;
    }
 
-   public boolean causeFallDamage(float var1, float var2) {
-      int var3 = this.calculateFallDamage(var1, var2);
-      if (var3 <= 0) {
+   public boolean causeFallDamage(float var1, float var2, DamageSource var3) {
+      int var4 = this.calculateFallDamage(var1, var2);
+      if (var4 <= 0) {
          return false;
       } else {
          if (var1 >= 6.0F) {
-            this.hurt(DamageSource.FALL, (float)var3);
+            this.hurt(var3, (float)var4);
             if (this.isVehicle()) {
-               Iterator var4 = this.getIndirectPassengers().iterator();
+               Iterator var5 = this.getIndirectPassengers().iterator();
 
-               while(var4.hasNext()) {
-                  Entity var5 = (Entity)var4.next();
-                  var5.hurt(DamageSource.FALL, (float)var3);
+               while(var5.hasNext()) {
+                  Entity var6 = (Entity)var5.next();
+                  var6.hurt(var3, (float)var4);
                }
             }
          }
 
          this.playBlockFallSound();
@@ -432,29 +441,21 @@
 
    public void performRangedAttack(LivingEntity var1, float var2) {
       this.spit(var1);
    }
 
+   public Vec3 getLeashOffset() {
+      return new Vec3(0.0D, 0.75D * (double)this.getEyeHeight(), (double)this.getBbWidth() * 0.5D);
+   }
+
    static {
       FOOD_ITEMS = Ingredient.of(Items.WHEAT, Blocks.HAY_BLOCK.asItem());
       DATA_STRENGTH_ID = SynchedEntityData.defineId(Llama.class, EntityDataSerializers.INT);
       DATA_SWAG_ID = SynchedEntityData.defineId(Llama.class, EntityDataSerializers.INT);
       DATA_VARIANT_ID = SynchedEntityData.defineId(Llama.class, EntityDataSerializers.INT);
    }
 
-   static class LlamaAttackWolfGoal extends NearestAttackableTargetGoal<Wolf> {
-      public LlamaAttackWolfGoal(Llama var1) {
-         super(var1, Wolf.class, 16, false, true, (var0) -> {
-            return !((Wolf)var0).isTame();
-         });
-      }
-
-      protected double getFollowDistance() {
-         return super.getFollowDistance() * 0.25D;
-      }
-   }
-
    static class LlamaHurtByTargetGoal extends HurtByTargetGoal {
       public LlamaHurtByTargetGoal(Llama var1) {
          super(var1);
       }
 
@@ -469,14 +470,26 @@
 
          return super.canContinueToUse();
       }
    }
 
-   static class LlamaGroupData extends AgableMob.AgableMobGroupData {
+   static class LlamaAttackWolfGoal extends NearestAttackableTargetGoal<Wolf> {
+      public LlamaAttackWolfGoal(Llama var1) {
+         super(var1, Wolf.class, 16, false, true, (var0) -> {
+            return !((Wolf)var0).isTame();
+         });
+      }
+
+      protected double getFollowDistance() {
+         return super.getFollowDistance() * 0.25D;
+      }
+   }
+
+   static class LlamaGroupData extends AgeableMob.AgeableMobGroupData {
       public final int variant;
 
-      private LlamaGroupData(int var1) {
+      LlamaGroupData(int var1) {
          super(true);
          this.variant = var1;
       }
    }
 }
