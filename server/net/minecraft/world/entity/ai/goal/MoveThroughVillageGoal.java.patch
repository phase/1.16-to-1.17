--- net/minecraft/world/entity/ai/goal/MoveThroughVillageGoal.java
+++ net/minecraft/world/entity/ai/goal/MoveThroughVillageGoal.java
@@ -9,12 +9,13 @@
 import java.util.function.BooleanSupplier;
 import net.minecraft.core.BlockPos;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.world.entity.PathfinderMob;
 import net.minecraft.world.entity.ai.navigation.GroundPathNavigation;
+import net.minecraft.world.entity.ai.util.DefaultRandomPos;
 import net.minecraft.world.entity.ai.util.GoalUtils;
-import net.minecraft.world.entity.ai.util.RandomPos;
+import net.minecraft.world.entity.ai.util.LandRandomPos;
 import net.minecraft.world.entity.ai.village.poi.PoiManager;
 import net.minecraft.world.entity.ai.village.poi.PoiType;
 import net.minecraft.world.level.block.DoorBlock;
 import net.minecraft.world.level.pathfinder.Node;
 import net.minecraft.world.level.pathfinder.Path;
@@ -53,11 +54,11 @@
             ServerLevel var1 = (ServerLevel)this.mob.level;
             BlockPos var2 = this.mob.blockPosition();
             if (!var1.isCloseToVillage(var2, 6)) {
                return false;
             } else {
-               Vec3 var3 = RandomPos.getLandPos(this.mob, 15, 7, (var3x) -> {
+               Vec3 var3 = LandRandomPos.getPos(this.mob, 15, 7, (var3x) -> {
                   if (!var1.isVillage(var3x)) {
                      return Double.NEGATIVE_INFINITY;
                   } else {
                      Optional var4 = var1.getPoiManager().find(PoiType.ALL, this::hasNotVisited, var3x, 10, PoiManager.Occupancy.IS_OCCUPIED);
                      return !var4.isPresent() ? Double.NEGATIVE_INFINITY : -((BlockPos)var4.get()).distSqr(var2);
@@ -75,11 +76,11 @@
                      boolean var6 = var5.canOpenDoors();
                      var5.setCanOpenDoors(this.canDealWithDoors.getAsBoolean());
                      this.path = var5.createPath((BlockPos)this.poiPos, 0);
                      var5.setCanOpenDoors(var6);
                      if (this.path == null) {
-                        Vec3 var7 = RandomPos.getPosTowards(this.mob, 10, 7, Vec3.atBottomCenterOf(this.poiPos));
+                        Vec3 var7 = DefaultRandomPos.getPosTowards(this.mob, 10, 7, Vec3.atBottomCenterOf(this.poiPos), 1.5707963705062866D);
                         if (var7 == null) {
                            return false;
                         }
 
                         var5.setCanOpenDoors(this.canDealWithDoors.getAsBoolean());
