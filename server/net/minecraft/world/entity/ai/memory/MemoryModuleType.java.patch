--- net/minecraft/world/entity/ai/memory/MemoryModuleType.java
+++ net/minecraft/world/entity/ai/memory/MemoryModuleType.java
@@ -9,11 +9,11 @@
 import net.minecraft.core.GlobalPos;
 import net.minecraft.core.Registry;
 import net.minecraft.core.SerializableUUID;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.world.damagesource.DamageSource;
-import net.minecraft.world.entity.AgableMob;
+import net.minecraft.world.entity.AgeableMob;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.Mob;
 import net.minecraft.world.entity.ai.behavior.PositionTracker;
 import net.minecraft.world.entity.item.ItemEntity;
@@ -38,11 +38,11 @@
    public static final MemoryModuleType<WalkTarget> WALK_TARGET;
    public static final MemoryModuleType<PositionTracker> LOOK_TARGET;
    public static final MemoryModuleType<LivingEntity> ATTACK_TARGET;
    public static final MemoryModuleType<Boolean> ATTACK_COOLING_DOWN;
    public static final MemoryModuleType<LivingEntity> INTERACTION_TARGET;
-   public static final MemoryModuleType<AgableMob> BREED_TARGET;
+   public static final MemoryModuleType<AgeableMob> BREED_TARGET;
    public static final MemoryModuleType<Entity> RIDE_TARGET;
    public static final MemoryModuleType<Path> PATH;
    public static final MemoryModuleType<List<GlobalPos>> INTERACTABLE_DOORS;
    public static final MemoryModuleType<Set<GlobalPos>> DOORS_TO_CLOSE;
    public static final MemoryModuleType<BlockPos> NEAREST_BED;
@@ -55,11 +55,11 @@
    public static final MemoryModuleType<Long> CANT_REACH_WALK_TARGET_SINCE;
    public static final MemoryModuleType<Boolean> GOLEM_DETECTED_RECENTLY;
    public static final MemoryModuleType<Long> LAST_SLEPT;
    public static final MemoryModuleType<Long> LAST_WOKEN;
    public static final MemoryModuleType<Long> LAST_WORKED_AT_POI;
-   public static final MemoryModuleType<AgableMob> NEAREST_VISIBLE_ADULT;
+   public static final MemoryModuleType<AgeableMob> NEAREST_VISIBLE_ADULT;
    public static final MemoryModuleType<ItemEntity> NEAREST_VISIBLE_WANTED_ITEM;
    public static final MemoryModuleType<Mob> NEAREST_VISIBLE_NEMESIS;
    public static final MemoryModuleType<UUID> ANGRY_AT;
    public static final MemoryModuleType<Boolean> UNIVERSAL_ANGER;
    public static final MemoryModuleType<Boolean> ADMIRING_ITEM;
@@ -81,10 +81,14 @@
    public static final MemoryModuleType<Integer> VISIBLE_ADULT_HOGLIN_COUNT;
    public static final MemoryModuleType<Player> NEAREST_PLAYER_HOLDING_WANTED_ITEM;
    public static final MemoryModuleType<Boolean> ATE_RECENTLY;
    public static final MemoryModuleType<BlockPos> NEAREST_REPELLENT;
    public static final MemoryModuleType<Boolean> PACIFIED;
+   public static final MemoryModuleType<Integer> PLAY_DEAD_TICKS;
+   public static final MemoryModuleType<Player> TEMPTING_PLAYER;
+   public static final MemoryModuleType<Integer> TEMPTATION_COOLDOWN_TICKS;
+   public static final MemoryModuleType<Boolean> IS_TEMPTED;
    private final Optional<Codec<ExpirableValue<U>>> codec;
 
    private MemoryModuleType(Optional<Codec<U>> var1) {
       this.codec = var1.map(ExpirableValue::codec);
    }
@@ -163,7 +167,11 @@
       VISIBLE_ADULT_HOGLIN_COUNT = register("visible_adult_hoglin_count");
       NEAREST_PLAYER_HOLDING_WANTED_ITEM = register("nearest_player_holding_wanted_item");
       ATE_RECENTLY = register("ate_recently");
       NEAREST_REPELLENT = register("nearest_repellent");
       PACIFIED = register("pacified");
+      PLAY_DEAD_TICKS = register("play_dead_ticks", Codec.INT);
+      TEMPTING_PLAYER = register("tempting_player");
+      TEMPTATION_COOLDOWN_TICKS = register("temptation_cooldown_ticks", Codec.INT);
+      IS_TEMPTED = register("is_tempted", Codec.BOOL);
    }
 }
