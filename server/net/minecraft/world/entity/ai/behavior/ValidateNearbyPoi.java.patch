--- net/minecraft/world/entity/ai/behavior/ValidateNearbyPoi.java
+++ net/minecraft/world/entity/ai/behavior/ValidateNearbyPoi.java
@@ -5,20 +5,20 @@
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.GlobalPos;
 import net.minecraft.network.protocol.game.DebugPackets;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.tags.BlockTags;
-import net.minecraft.tags.Tag;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.ai.Brain;
 import net.minecraft.world.entity.ai.memory.MemoryModuleType;
 import net.minecraft.world.entity.ai.memory.MemoryStatus;
 import net.minecraft.world.entity.ai.village.poi.PoiType;
 import net.minecraft.world.level.block.BedBlock;
 import net.minecraft.world.level.block.state.BlockState;
 
 public class ValidateNearbyPoi extends Behavior<LivingEntity> {
+   private static final int MAX_DISTANCE = 16;
    private final MemoryModuleType<GlobalPos> memoryType;
    private final Predicate<PoiType> poiPredicate;
 
    public ValidateNearbyPoi(PoiType var1, MemoryModuleType<GlobalPos> var2) {
       super(ImmutableMap.of(var2, MemoryStatus.VALUE_PRESENT));
@@ -48,11 +48,11 @@
 
    }
 
    private boolean bedIsOccupied(ServerLevel var1, BlockPos var2, LivingEntity var3) {
       BlockState var4 = var1.getBlockState(var2);
-      return var4.getBlock().is((Tag)BlockTags.BEDS) && (Boolean)var4.getValue(BedBlock.OCCUPIED) && !var3.isSleeping();
+      return var4.is(BlockTags.BEDS) && (Boolean)var4.getValue(BedBlock.OCCUPIED) && !var3.isSleeping();
    }
 
    private boolean poiDoesntExist(ServerLevel var1, BlockPos var2) {
       return !var1.getPoiManager().exists(var2, this.poiPredicate);
    }
