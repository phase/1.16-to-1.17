--- net/minecraft/world/entity/projectile/ThrownTrident.java
+++ net/minecraft/world/entity/projectile/ThrownTrident.java
@@ -53,21 +53,21 @@
       if (this.inGroundTime > 4) {
          this.dealtDamage = true;
       }
 
       Entity var1 = this.getOwner();
-      if ((this.dealtDamage || this.isNoPhysics()) && var1 != null) {
-         byte var2 = (Byte)this.entityData.get(ID_LOYALTY);
-         if (var2 > 0 && !this.isAcceptibleReturnOwner()) {
+      byte var2 = (Byte)this.entityData.get(ID_LOYALTY);
+      if (var2 > 0 && (this.dealtDamage || this.isNoPhysics()) && var1 != null) {
+         if (!this.isAcceptibleReturnOwner()) {
             if (!this.level.isClientSide && this.pickup == AbstractArrow.Pickup.ALLOWED) {
                this.spawnAtLocation(this.getPickupItem(), 0.1F);
             }
 
-            this.remove();
-         } else if (var2 > 0) {
+            this.discard();
+         } else {
             this.setNoPhysics(true);
-            Vec3 var3 = new Vec3(var1.getX() - this.getX(), var1.getEyeY() - this.getY(), var1.getZ() - this.getZ());
+            Vec3 var3 = var1.getEyePosition().subtract(this.position());
             this.setPosRaw(this.getX(), this.getY() + var3.y * 0.015D * (double)var2, this.getZ());
             if (this.level.isClientSide) {
                this.yOld = this.getY();
             }
 
@@ -95,10 +95,14 @@
 
    protected ItemStack getPickupItem() {
       return this.tridentItem.copy();
    }
 
+   public boolean isFoil() {
+      return (Boolean)this.entityData.get(ID_FOIL);
+   }
+
    @Nullable
    protected EntityHitResult findHitEntity(Vec3 var1, Vec3 var2) {
       return this.dealtDamage ? null : super.findHitEntity(var1, var2);
    }
 
@@ -130,11 +134,11 @@
          }
       }
 
       this.setDeltaMovement(this.getDeltaMovement().multiply(-0.01D, -0.1D, -0.01D));
       float var11 = 1.0F;
-      if (this.level instanceof ServerLevel && this.level.isThundering() && EnchantmentHelper.hasChanneling(this.tridentItem)) {
+      if (this.level instanceof ServerLevel && this.level.isThundering() && this.isChanneling()) {
          BlockPos var8 = var2.blockPosition();
          if (this.level.canSeeSky(var8)) {
             LightningBolt var9 = (LightningBolt)EntityType.LIGHTNING_BOLT.create(this.level);
             var9.moveTo(Vec3.atBottomCenterOf(var8));
             var9.setCause(var10 instanceof ServerPlayer ? (ServerPlayer)var10 : null);
@@ -145,19 +149,27 @@
       }
 
       this.playSound(var6, var11, 1.0F);
    }
 
+   public boolean isChanneling() {
+      return EnchantmentHelper.hasChanneling(this.tridentItem);
+   }
+
+   protected boolean tryPickup(Player var1) {
+      return super.tryPickup(var1) || this.isNoPhysics() && this.ownedBy(var1) && var1.getInventory().add(this.getPickupItem());
+   }
+
    protected SoundEvent getDefaultHitGroundSoundEvent() {
       return SoundEvents.TRIDENT_HIT_GROUND;
    }
 
    public void playerTouch(Player var1) {
-      Entity var2 = this.getOwner();
-      if (var2 == null || var2.getUUID() == var1.getUUID()) {
+      if (this.ownedBy(var1) || this.getOwner() == null) {
          super.playerTouch(var1);
       }
+
    }
 
    public void readAdditionalSaveData(CompoundTag var1) {
       super.readAdditionalSaveData(var1);
       if (var1.contains("Trident", 10)) {
@@ -184,10 +196,14 @@
 
    protected float getWaterInertia() {
       return 0.99F;
    }
 
+   public boolean shouldRender(double var1, double var3, double var5) {
+      return true;
+   }
+
    static {
       ID_LOYALTY = SynchedEntityData.defineId(ThrownTrident.class, EntityDataSerializers.BYTE);
       ID_FOIL = SynchedEntityData.defineId(ThrownTrident.class, EntityDataSerializers.BOOLEAN);
    }
 }
