--- net/minecraft/world/entity/projectile/Fireball.java
+++ net/minecraft/world/entity/projectile/Fireball.java
@@ -9,11 +9,11 @@
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.Items;
 import net.minecraft.world.level.Level;
 
-public abstract class Fireball extends AbstractHurtingProjectile {
+public abstract class Fireball extends AbstractHurtingProjectile implements ItemSupplier {
    private static final EntityDataAccessor<ItemStack> DATA_ITEM_STACK;
 
    public Fireball(EntityType<? extends Fireball> var1, Level var2) {
       super(var1, var2);
    }
@@ -25,11 +25,11 @@
    public Fireball(EntityType<? extends Fireball> var1, LivingEntity var2, double var3, double var5, double var7, Level var9) {
       super(var1, var2, var3, var5, var7, var9);
    }
 
    public void setItem(ItemStack var1) {
-      if (var1.getItem() != Items.FIRE_CHARGE || var1.hasTag()) {
+      if (!var1.is(Items.FIRE_CHARGE) || var1.hasTag()) {
          this.getEntityData().set(DATA_ITEM_STACK, Util.make(var1.copy(), (var0) -> {
             var0.setCount(1);
          }));
       }
 
@@ -37,10 +37,15 @@
 
    protected ItemStack getItemRaw() {
       return (ItemStack)this.getEntityData().get(DATA_ITEM_STACK);
    }
 
+   public ItemStack getItem() {
+      ItemStack var1 = this.getItemRaw();
+      return var1.isEmpty() ? new ItemStack(Items.FIRE_CHARGE) : var1;
+   }
+
    protected void defineSynchedData() {
       this.getEntityData().define(DATA_ITEM_STACK, ItemStack.EMPTY);
    }
 
    public void addAdditionalSaveData(CompoundTag var1) {
