--- net/minecraft/world/entity/projectile/ShulkerBullet.java
+++ net/minecraft/world/entity/projectile/ShulkerBullet.java
@@ -6,12 +6,10 @@
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.core.particles.ParticleTypes;
 import net.minecraft.nbt.CompoundTag;
-import net.minecraft.network.protocol.Packet;
-import net.minecraft.network.protocol.game.ClientboundAddEntityPacket;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.sounds.SoundSource;
 import net.minecraft.util.Mth;
 import net.minecraft.world.Difficulty;
@@ -174,11 +172,11 @@
       this.flightSteps = 10 + this.random.nextInt(5) * 10;
    }
 
    public void checkDespawn() {
       if (this.level.getDifficulty() == Difficulty.PEACEFUL) {
-         this.remove();
+         this.discard();
       }
 
    }
 
    public void tick() {
@@ -214,11 +212,11 @@
       var1 = this.getDeltaMovement();
       this.setPos(this.getX() + var1.x, this.getY() + var1.y, this.getZ() + var1.z);
       ProjectileUtil.rotateTowardsMovement(this, 0.5F);
       if (this.level.isClientSide) {
          this.level.addParticle(ParticleTypes.END_ROD, this.getX() - var1.x, this.getY() - var1.y + 0.15D, this.getZ() - var1.z, 0.0D, 0.0D, 0.0D);
-      } else if (this.finalTarget != null && !this.finalTarget.removed) {
+      } else if (this.finalTarget != null && !this.finalTarget.isRemoved()) {
          if (this.flightSteps > 0) {
             --this.flightSteps;
             if (this.flightSteps == 0) {
                this.selectNextMoveDirection(this.currentMoveDirection == null ? null : this.currentMoveDirection.getAxis());
             }
@@ -273,26 +271,22 @@
       this.playSound(SoundEvents.SHULKER_BULLET_HIT, 1.0F, 1.0F);
    }
 
    protected void onHit(HitResult var1) {
       super.onHit(var1);
-      this.remove();
+      this.discard();
    }
 
    public boolean isPickable() {
       return true;
    }
 
    public boolean hurt(DamageSource var1, float var2) {
       if (!this.level.isClientSide) {
          this.playSound(SoundEvents.SHULKER_BULLET_HURT, 1.0F, 1.0F);
          ((ServerLevel)this.level).sendParticles(ParticleTypes.CRIT, this.getX(), this.getY(), this.getZ(), 15, 0.2D, 0.2D, 0.2D, 0.0D);
-         this.remove();
+         this.discard();
       }
 
       return true;
    }
-
-   public Packet<?> getAddEntityPacket() {
-      return new ClientboundAddEntityPacket(this);
-   }
 }
