--- net/minecraft/world/entity/projectile/ShulkerBullet.java
+++ net/minecraft/world/entity/projectile/ShulkerBullet.java
@@ -1,16 +1,16 @@
 package net.minecraft.world.entity.projectile;
 
+import com.google.common.base.MoreObjects;
 import com.google.common.collect.Lists;
 import java.util.ArrayList;
 import java.util.UUID;
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.core.particles.ParticleTypes;
 import net.minecraft.nbt.CompoundTag;
-import net.minecraft.network.protocol.Packet;
 import net.minecraft.network.protocol.game.ClientboundAddEntityPacket;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.sounds.SoundSource;
 import net.minecraft.util.Mth;
@@ -27,10 +27,12 @@
 import net.minecraft.world.phys.EntityHitResult;
 import net.minecraft.world.phys.HitResult;
 import net.minecraft.world.phys.Vec3;
 
 public class ShulkerBullet extends Projectile {
+   private static final double SPEED = 0.15D;
+   @Nullable
    private Entity finalTarget;
    @Nullable
    private Direction currentMoveDirection;
    private int flightSteps;
    private double targetDeltaX;
@@ -49,11 +51,11 @@
       this.setOwner(var2);
       BlockPos var5 = var2.blockPosition();
       double var6 = (double)var5.getX() + 0.5D;
       double var8 = (double)var5.getY() + 0.5D;
       double var10 = (double)var5.getZ() + 0.5D;
-      this.moveTo(var6, var8, var10, this.yRot, this.xRot);
+      this.moveTo(var6, var8, var10, this.getYRot(), this.getXRot());
       this.finalTarget = var3;
       this.currentMoveDirection = Direction.UP;
       this.selectNextMoveDirection(var4);
    }
 
@@ -94,10 +96,15 @@
    }
 
    protected void defineSynchedData() {
    }
 
+   @Nullable
+   private Direction getMoveDirection() {
+      return this.currentMoveDirection;
+   }
+
    private void setMoveDirection(@Nullable Direction var1) {
       this.currentMoveDirection = var1;
    }
 
    private void selectNextMoveDirection(@Nullable Direction.Axis var1) {
@@ -157,11 +164,11 @@
 
       this.setMoveDirection(var11);
       double var20 = var5 - this.getX();
       double var21 = var7 - this.getY();
       double var16 = var9 - this.getZ();
-      double var18 = (double)Mth.sqrt(var20 * var20 + var21 * var21 + var16 * var16);
+      double var18 = Math.sqrt(var20 * var20 + var21 * var21 + var16 * var16);
       if (var18 == 0.0D) {
          this.targetDeltaX = 0.0D;
          this.targetDeltaY = 0.0D;
          this.targetDeltaZ = 0.0D;
       } else {
@@ -174,11 +181,11 @@
       this.flightSteps = 10 + this.random.nextInt(5) * 10;
    }
 
    public void checkDespawn() {
       if (this.level.getDifficulty() == Difficulty.PEACEFUL) {
-         this.remove();
+         this.discard();
       }
 
    }
 
    public void tick() {
@@ -190,11 +197,11 @@
             if (this.finalTarget == null) {
                this.targetId = null;
             }
          }
 
-         if (this.finalTarget == null || !this.finalTarget.isAlive() || this.finalTarget instanceof Player && ((Player)this.finalTarget).isSpectator()) {
+         if (this.finalTarget == null || !this.finalTarget.isAlive() || this.finalTarget instanceof Player && this.finalTarget.isSpectator()) {
             if (!this.isNoGravity()) {
                this.setDeltaMovement(this.getDeltaMovement().add(0.0D, -0.04D, 0.0D));
             }
          } else {
             this.targetDeltaX = Mth.clamp(this.targetDeltaX * 1.025D, -1.0D, 1.0D);
@@ -214,11 +221,11 @@
       var1 = this.getDeltaMovement();
       this.setPos(this.getX() + var1.x, this.getY() + var1.y, this.getZ() + var1.z);
       ProjectileUtil.rotateTowardsMovement(this, 0.5F);
       if (this.level.isClientSide) {
          this.level.addParticle(ParticleTypes.END_ROD, this.getX() - var1.x, this.getY() - var1.y + 0.15D, this.getZ() - var1.z, 0.0D, 0.0D, 0.0D);
-      } else if (this.finalTarget != null && !this.finalTarget.removed) {
+      } else if (this.finalTarget != null && !this.finalTarget.isRemoved()) {
          if (this.flightSteps > 0) {
             --this.flightSteps;
             if (this.flightSteps == 0) {
                this.selectNextMoveDirection(this.currentMoveDirection == null ? null : this.currentMoveDirection.getAxis());
             }
@@ -246,10 +253,14 @@
 
    public boolean isOnFire() {
       return false;
    }
 
+   public boolean shouldRenderAtSqrDistance(double var1) {
+      return var1 < 16384.0D;
+   }
+
    public float getBrightness() {
       return 1.0F;
    }
 
    protected void onHitEntity(EntityHitResult var1) {
@@ -259,11 +270,11 @@
       LivingEntity var4 = var3 instanceof LivingEntity ? (LivingEntity)var3 : null;
       boolean var5 = var2.hurt(DamageSource.indirectMobAttack(this, var4).setProjectile(), 4.0F);
       if (var5) {
          this.doEnchantDamageEffects(var4, var2);
          if (var2 instanceof LivingEntity) {
-            ((LivingEntity)var2).addEffect(new MobEffectInstance(MobEffects.LEVITATION, 200));
+            ((LivingEntity)var2).addEffect(new MobEffectInstance(MobEffects.LEVITATION, 200), (Entity)MoreObjects.firstNonNull(var3, this));
          }
       }
 
    }
 
@@ -273,26 +284,30 @@
       this.playSound(SoundEvents.SHULKER_BULLET_HIT, 1.0F, 1.0F);
    }
 
    protected void onHit(HitResult var1) {
       super.onHit(var1);
-      this.remove();
+      this.discard();
    }
 
    public boolean isPickable() {
       return true;
    }
 
    public boolean hurt(DamageSource var1, float var2) {
       if (!this.level.isClientSide) {
          this.playSound(SoundEvents.SHULKER_BULLET_HURT, 1.0F, 1.0F);
          ((ServerLevel)this.level).sendParticles(ParticleTypes.CRIT, this.getX(), this.getY(), this.getZ(), 15, 0.2D, 0.2D, 0.2D, 0.0D);
-         this.remove();
+         this.discard();
       }
 
       return true;
    }
 
-   public Packet<?> getAddEntityPacket() {
-      return new ClientboundAddEntityPacket(this);
+   public void recreateFromPacket(ClientboundAddEntityPacket var1) {
+      super.recreateFromPacket(var1);
+      double var2 = var1.getXa();
+      double var4 = var1.getYa();
+      double var6 = var1.getZa();
+      this.setDeltaMovement(var2, var4, var6);
    }
 }
