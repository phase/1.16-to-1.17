--- net/minecraft/world/entity/raid/Raider.java
+++ net/minecraft/world/entity/raid/Raider.java
@@ -27,11 +27,11 @@
 import net.minecraft.world.entity.MobSpawnType;
 import net.minecraft.world.entity.SpawnGroupData;
 import net.minecraft.world.entity.ai.goal.Goal;
 import net.minecraft.world.entity.ai.goal.PathfindToRaidGoal;
 import net.minecraft.world.entity.ai.targeting.TargetingConditions;
-import net.minecraft.world.entity.ai.util.RandomPos;
+import net.minecraft.world.entity.ai.util.DefaultRandomPos;
 import net.minecraft.world.entity.ai.village.poi.PoiManager;
 import net.minecraft.world.entity.ai.village.poi.PoiType;
 import net.minecraft.world.entity.animal.Wolf;
 import net.minecraft.world.entity.item.ItemEntity;
 import net.minecraft.world.entity.monster.AbstractIllager;
@@ -144,11 +144,11 @@
                   var5.removeEffectNoUpdate(MobEffects.BAD_OMEN);
                } else {
                   var12 = var11 - 1;
                }
 
-               var12 = Mth.clamp(var12, 0, 4);
+               var12 = Mth.clamp((int)var12, (int)0, (int)4);
                MobEffectInstance var9 = new MobEffectInstance(MobEffects.BAD_OMEN, 120000, var12, false, false, true);
                if (!this.level.getGameRules().getBoolean(GameRules.RULE_DISABLE_RAIDS)) {
                   var5.addEffect(var9);
                }
             }
@@ -181,10 +181,14 @@
 
    public int getWave() {
       return this.wave;
    }
 
+   public boolean isCelebrating() {
+      return (Boolean)this.entityData.get(IS_CELEBRATING);
+   }
+
    public void setCelebrating(boolean var1) {
       this.entityData.set(IS_CELEBRATING, var1);
    }
 
    public void addAdditionalSaveData(CompoundTag var1) {
@@ -228,11 +232,11 @@
          }
 
          this.onItemPickup(var1);
          this.setItemSlot(var4, var2);
          this.take(var1, var2.getCount());
-         var1.remove();
+         var1.discard();
          this.getCurrentRaid().setLeader(this.getWave(), this);
          this.setPatrolLeader(true);
       } else {
          super.pickUpItem(var1);
       }
@@ -339,13 +343,13 @@
       }
 
       public void tick() {
          if (this.raider.getNavigation().isDone()) {
             Vec3 var1 = Vec3.atBottomCenterOf(this.poiPos);
-            Vec3 var2 = RandomPos.getPosTowards(this.raider, 16, 7, var1, 0.3141592741012573D);
+            Vec3 var2 = DefaultRandomPos.getPosTowards(this.raider, 16, 7, var1, 0.3141592741012573D);
             if (var2 == null) {
-               var2 = RandomPos.getPosTowards(this.raider, 8, 7, var1);
+               var2 = DefaultRandomPos.getPosTowards(this.raider, 8, 7, var1, 1.5707963705062866D);
             }
 
             if (var2 == null) {
                this.stuck = true;
                return;
