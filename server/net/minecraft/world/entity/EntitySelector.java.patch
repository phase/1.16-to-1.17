--- net/minecraft/world/entity/EntitySelector.java
+++ net/minecraft/world/entity/EntitySelector.java
@@ -2,34 +2,35 @@
 
 import com.google.common.base.Predicates;
 import java.util.function.Predicate;
 import javax.annotation.Nullable;
 import net.minecraft.world.Container;
-import net.minecraft.world.Difficulty;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.scores.Team;
 
 public final class EntitySelector {
    public static final Predicate<Entity> ENTITY_STILL_ALIVE = Entity::isAlive;
-   public static final Predicate<LivingEntity> LIVING_ENTITY_STILL_ALIVE = LivingEntity::isAlive;
+   public static final Predicate<Entity> LIVING_ENTITY_STILL_ALIVE = (var0) -> {
+      return var0.isAlive() && var0 instanceof LivingEntity;
+   };
    public static final Predicate<Entity> ENTITY_NOT_BEING_RIDDEN = (var0) -> {
       return var0.isAlive() && !var0.isVehicle() && !var0.isPassenger();
    };
    public static final Predicate<Entity> CONTAINER_ENTITY_SELECTOR = (var0) -> {
       return var0 instanceof Container && var0.isAlive();
    };
    public static final Predicate<Entity> NO_CREATIVE_OR_SPECTATOR = (var0) -> {
       return !(var0 instanceof Player) || !var0.isSpectator() && !((Player)var0).isCreative();
    };
-   public static final Predicate<Entity> ATTACK_ALLOWED = (var0) -> {
-      return !(var0 instanceof Player) || !var0.isSpectator() && !((Player)var0).isCreative() && var0.level.getDifficulty() != Difficulty.PEACEFUL;
-   };
    public static final Predicate<Entity> NO_SPECTATORS = (var0) -> {
       return !var0.isSpectator();
    };
 
+   private EntitySelector() {
+   }
+
    public static Predicate<Entity> withinDistance(double var0, double var2, double var4, double var6) {
       double var8 = var6 * var6;
       return (var8x) -> {
          return var8x != null && var8x.distanceToSqr(var0, var2, var4) <= var8;
       };
