--- net/minecraft/world/entity/npc/Villager.java
+++ net/minecraft/world/entity/npc/Villager.java
@@ -40,11 +40,11 @@
 import net.minecraft.world.InteractionResult;
 import net.minecraft.world.SimpleContainer;
 import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.effect.MobEffectInstance;
 import net.minecraft.world.effect.MobEffects;
-import net.minecraft.world.entity.AgableMob;
+import net.minecraft.world.entity.AgeableMob;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.ExperienceOrb;
 import net.minecraft.world.entity.LightningBolt;
 import net.minecraft.world.entity.LivingEntity;
@@ -229,11 +229,11 @@
       this.maybeDecayGossip();
    }
 
    public InteractionResult mobInteract(Player var1, InteractionHand var2) {
       ItemStack var3 = var1.getItemInHand(var2);
-      if (var3.getItem() != Items.VILLAGER_SPAWN_EGG && this.isAlive() && !this.isTrading() && !this.isSleeping()) {
+      if (!var3.is(Items.VILLAGER_SPAWN_EGG) && this.isAlive() && !this.isTrading() && !this.isSleeping()) {
          if (this.isBaby()) {
             this.setUnhappy();
             return InteractionResult.sidedSuccess(this.level.isClientSide);
          } else {
             boolean var4 = this.getOffers().isEmpty();
@@ -668,11 +668,11 @@
       }
 
       return super.finalizeSpawn(var1, var2, var3, var4, var5);
    }
 
-   public Villager getBreedOffspring(ServerLevel var1, AgableMob var2) {
+   public Villager getBreedOffspring(ServerLevel var1, AgeableMob var2) {
       double var4 = this.random.nextDouble();
       VillagerType var3;
       if (var4 < 0.5D) {
          var3 = VillagerType.byBiome(var1.getBiomeName(this.blockPosition()));
       } else if (var4 < 0.75D) {
@@ -699,11 +699,11 @@
          }
 
          var3.setPersistenceRequired();
          var1.addFreshEntityWithPassengers(var3);
          this.releaseAllPois();
-         this.remove();
+         this.discard();
       } else {
          super.thunderHit(var1, var2);
       }
 
    }
@@ -719,11 +719,11 @@
 
          this.onItemPickup(var1);
          this.take(var1, var2.getCount());
          ItemStack var5 = var3.addItem(var2);
          if (var5.isEmpty()) {
-            var1.remove();
+            var1.discard();
          } else {
             var2.setCount(var5.getCount());
          }
       }
 
@@ -822,11 +822,11 @@
                if (var9.checkSpawnRules(var1, MobSpawnType.MOB_SUMMONED) && var9.checkSpawnObstruction(var1)) {
                   var1.addFreshEntityWithPassengers(var9);
                   return var9;
                }
 
-               var9.remove();
+               var9.discard();
             }
          }
       }
 
       return null;
