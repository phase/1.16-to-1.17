--- net/minecraft/world/entity/monster/Vex.java
+++ net/minecraft/world/entity/monster/Vex.java
@@ -37,11 +37,14 @@
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.ServerLevelAccessor;
 import net.minecraft.world.phys.Vec3;
 
 public class Vex extends Monster {
+   public static final float FLAP_DEGREES_PER_TICK = 45.836624F;
+   public static final int TICKS_PER_FLAP = Mth.ceil(3.9269907F);
    protected static final EntityDataAccessor<Byte> DATA_FLAGS_ID;
+   private static final int FLAG_IS_CHARGING = 1;
    private Mob owner;
    @Nullable
    private BlockPos boundOrigin;
    private boolean hasLimitedLife;
    private int limitedLifeTicks;
@@ -50,10 +53,14 @@
       super(var1, var2);
       this.moveControl = new Vex.VexMoveControl(this);
       this.xpReward = 3;
    }
 
+   public boolean isFlapping() {
+      return this.tickCount % TICKS_PER_FLAP == 0;
+   }
+
    public void move(MoverType var1, Vec3 var2) {
       super.move(var1, var2);
       this.checkInsideBlocks();
    }
 
@@ -262,11 +269,11 @@
          return Vex.this.getMoveControl().hasWanted() && Vex.this.isCharging() && Vex.this.getTarget() != null && Vex.this.getTarget().isAlive();
       }
 
       public void start() {
          LivingEntity var1 = Vex.this.getTarget();
-         Vec3 var2 = var1.getEyePosition(1.0F);
+         Vec3 var2 = var1.getEyePosition();
          Vex.this.moveControl.setWantedPosition(var2.x, var2.y, var2.z, 1.0D);
          Vex.this.setIsCharging(true);
          Vex.this.playSound(SoundEvents.VEX_CHARGE, 1.0F, 1.0F);
       }
 
@@ -280,11 +287,11 @@
             Vex.this.doHurtTarget(var1);
             Vex.this.setIsCharging(false);
          } else {
             double var2 = Vex.this.distanceToSqr(var1);
             if (var2 < 9.0D) {
-               Vec3 var4 = var1.getEyePosition(1.0F);
+               Vec3 var4 = var1.getEyePosition();
                Vex.this.moveControl.setWantedPosition(var4.x, var4.y, var4.z, 1.0D);
             }
          }
 
       }
