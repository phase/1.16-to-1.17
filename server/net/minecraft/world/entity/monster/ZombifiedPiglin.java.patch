--- net/minecraft/world/entity/monster/ZombifiedPiglin.java
+++ net/minecraft/world/entity/monster/ZombifiedPiglin.java
@@ -11,10 +11,11 @@
 import net.minecraft.util.IntRange;
 import net.minecraft.util.TimeUtil;
 import net.minecraft.world.Difficulty;
 import net.minecraft.world.DifficultyInstance;
 import net.minecraft.world.damagesource.DamageSource;
+import net.minecraft.world.entity.EntitySelector;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.EquipmentSlot;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.MobSpawnType;
 import net.minecraft.world.entity.NeutralMob;
@@ -124,11 +125,11 @@
    }
 
    private void alertOthers() {
       double var1 = this.getAttributeValue(Attributes.FOLLOW_RANGE);
       AABB var3 = AABB.unitCubeFromLowerCorner(this.position()).inflate(var1, 10.0D, var1);
-      this.level.getLoadedEntitiesOfClass(ZombifiedPiglin.class, var3).stream().filter((var1x) -> {
+      this.level.getEntitiesOfClass(ZombifiedPiglin.class, var3, EntitySelector.NO_SPECTATORS).stream().filter((var1x) -> {
          return var1x != this;
       }).filter((var0) -> {
          return var0.getTarget() == null;
       }).filter((var1x) -> {
          return !var1x.isAlliedTo(this.getTarget());
@@ -157,11 +158,11 @@
    public void startPersistentAngerTimer() {
       this.setRemainingPersistentAngerTime(PERSISTENT_ANGER_TIME.randomValue(this.random));
    }
 
    public static boolean checkZombifiedPiglinSpawnRules(EntityType<ZombifiedPiglin> var0, LevelAccessor var1, MobSpawnType var2, BlockPos var3, Random var4) {
-      return var1.getDifficulty() != Difficulty.PEACEFUL && var1.getBlockState(var3.below()).getBlock() != Blocks.NETHER_WART_BLOCK;
+      return var1.getDifficulty() != Difficulty.PEACEFUL && !var1.getBlockState(var3.below()).is(Blocks.NETHER_WART_BLOCK);
    }
 
    public boolean checkSpawnObstruction(LevelReader var1) {
       return var1.isUnobstructed(this) && !var1.containsAnyLiquid(this.getBoundingBox());
    }
@@ -171,25 +172,21 @@
       this.addPersistentAngerSaveData(var1);
    }
 
    public void readAdditionalSaveData(CompoundTag var1) {
       super.readAdditionalSaveData(var1);
-      this.readPersistentAngerSaveData((ServerLevel)this.level, var1);
+      this.readPersistentAngerSaveData(this.level, var1);
    }
 
    public void setRemainingPersistentAngerTime(int var1) {
       this.remainingPersistentAngerTime = var1;
    }
 
    public int getRemainingPersistentAngerTime() {
       return this.remainingPersistentAngerTime;
    }
 
-   public boolean hurt(DamageSource var1, float var2) {
-      return this.isInvulnerableTo(var1) ? false : super.hurt(var1, var2);
-   }
-
    protected SoundEvent getAmbientSound() {
       return this.isAngry() ? SoundEvents.ZOMBIFIED_PIGLIN_ANGRY : SoundEvents.ZOMBIFIED_PIGLIN_AMBIENT;
    }
 
    protected SoundEvent getHurtSound(DamageSource var1) {
