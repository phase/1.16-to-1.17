--- net/minecraft/world/entity/monster/Spider.java
+++ net/minecraft/world/entity/monster/Spider.java
@@ -42,10 +42,11 @@
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.phys.Vec3;
 
 public class Spider extends Monster {
    private static final EntityDataAccessor<Byte> DATA_FLAGS_ID;
+   private static final float SPIDER_SPECIAL_EFFECT_CHANCE = 0.1F;
 
    public Spider(EntityType<? extends Spider> var1, Level var2) {
       super(var1, var2);
    }
 
@@ -139,11 +140,11 @@
    @Nullable
    public SpawnGroupData finalizeSpawn(ServerLevelAccessor var1, DifficultyInstance var2, MobSpawnType var3, @Nullable SpawnGroupData var4, @Nullable CompoundTag var5) {
       Object var7 = super.finalizeSpawn(var1, var2, var3, var4, var5);
       if (var1.getRandom().nextInt(100) == 0) {
          Skeleton var6 = (Skeleton)EntityType.SKELETON.create(this.level);
-         var6.moveTo(this.getX(), this.getY(), this.getZ(), this.yRot, 0.0F);
+         var6.moveTo(this.getX(), this.getY(), this.getZ(), this.getYRot(), 0.0F);
          var6.finalizeSpawn(var1, var2, var3, (SpawnGroupData)null, (CompoundTag)null);
          var6.startRiding(this);
       }
 
       if (var7 == null) {
@@ -169,21 +170,10 @@
 
    static {
       DATA_FLAGS_ID = SynchedEntityData.defineId(Spider.class, EntityDataSerializers.BYTE);
    }
 
-   static class SpiderTargetGoal<T extends LivingEntity> extends NearestAttackableTargetGoal<T> {
-      public SpiderTargetGoal(Spider var1, Class<T> var2) {
-         super(var1, var2, true);
-      }
-
-      public boolean canUse() {
-         float var1 = this.mob.getBrightness();
-         return var1 >= 0.5F ? false : super.canUse();
-      }
-   }
-
    static class SpiderAttackGoal extends MeleeAttackGoal {
       public SpiderAttackGoal(Spider var1) {
          super(var1, 1.0D, true);
       }
 
@@ -204,10 +194,21 @@
       protected double getAttackReachSqr(LivingEntity var1) {
          return (double)(4.0F + var1.getBbWidth());
       }
    }
 
+   static class SpiderTargetGoal<T extends LivingEntity> extends NearestAttackableTargetGoal<T> {
+      public SpiderTargetGoal(Spider var1, Class<T> var2) {
+         super(var1, var2, true);
+      }
+
+      public boolean canUse() {
+         float var1 = this.mob.getBrightness();
+         return var1 >= 0.5F ? false : super.canUse();
+      }
+   }
+
    public static class SpiderEffectsGroupData implements SpawnGroupData {
       public MobEffect effect;
 
       public SpiderEffectsGroupData() {
       }
