--- net/minecraft/world/entity/monster/hoglin/Hoglin.java
+++ net/minecraft/world/entity/monster/hoglin/Hoglin.java
@@ -18,11 +18,11 @@
 import net.minecraft.world.InteractionHand;
 import net.minecraft.world.InteractionResult;
 import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.effect.MobEffectInstance;
 import net.minecraft.world.effect.MobEffects;
-import net.minecraft.world.entity.AgableMob;
+import net.minecraft.world.entity.AgeableMob;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.MobSpawnType;
 import net.minecraft.world.entity.SpawnGroupData;
@@ -46,13 +46,21 @@
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.state.BlockState;
 
 public class Hoglin extends Animal implements Enemy, HoglinBase {
    private static final EntityDataAccessor<Boolean> DATA_IMMUNE_TO_ZOMBIFICATION;
+   private static final float PROBABILITY_OF_SPAWNING_AS_BABY = 0.2F;
+   private static final int MAX_HEALTH = 40;
+   private static final float MOVEMENT_SPEED_WHEN_FIGHTING = 0.3F;
+   private static final int ATTACK_KNOCKBACK = 1;
+   private static final float KNOCKBACK_RESISTANCE = 0.6F;
+   private static final int ATTACK_DAMAGE = 6;
+   private static final float BABY_ATTACK_DAMAGE = 0.5F;
+   private static final int CONVERSION_TIME = 300;
    private int attackAnimationRemainingTicks;
-   private int timeInOverworld = 0;
-   private boolean cannotBeHunted = false;
+   private int timeInOverworld;
+   private boolean cannotBeHunted;
    protected static final ImmutableList<? extends SensorType<? extends Sensor<? super Hoglin>>> SENSOR_TYPES;
    protected static final ImmutableList<? extends MemoryModuleType<?>> MEMORY_TYPES;
 
    public Hoglin(EntityType<? extends Hoglin> var1, Level var2) {
       super(var1, var2);
@@ -183,10 +191,24 @@
       }
 
       return var3;
    }
 
+   public void handleEntityEvent(byte var1) {
+      if (var1 == 4) {
+         this.attackAnimationRemainingTicks = 10;
+         this.playSound(SoundEvents.HOGLIN_ATTACK, 1.0F, this.getVoicePitch());
+      } else {
+         super.handleEntityEvent(var1);
+      }
+
+   }
+
+   public int getAttackAnimationRemainingTicks() {
+      return this.attackAnimationRemainingTicks;
+   }
+
    protected boolean shouldDropExperience() {
       return true;
    }
 
    protected int getExperienceReward(Player var1) {
@@ -200,11 +222,11 @@
       }
 
    }
 
    public boolean isFood(ItemStack var1) {
-      return var1.getItem() == Items.CRIMSON_FUNGUS;
+      return var1.is(Items.CRIMSON_FUNGUS);
    }
 
    public boolean isAdult() {
       return !this.isBaby();
    }
@@ -253,11 +275,11 @@
    public boolean canBeHunted() {
       return this.isAdult() && !this.cannotBeHunted;
    }
 
    @Nullable
-   public AgableMob getBreedOffspring(ServerLevel var1, AgableMob var2) {
+   public AgeableMob getBreedOffspring(ServerLevel var1, AgeableMob var2) {
       Hoglin var3 = (Hoglin)EntityType.HOGLIN.create(var1);
       if (var3 != null) {
          var3.setPersistenceRequired();
       }
 
