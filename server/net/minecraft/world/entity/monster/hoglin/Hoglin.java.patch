--- net/minecraft/world/entity/monster/hoglin/Hoglin.java
+++ net/minecraft/world/entity/monster/hoglin/Hoglin.java
@@ -18,11 +18,11 @@
 import net.minecraft.world.InteractionHand;
 import net.minecraft.world.InteractionResult;
 import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.effect.MobEffectInstance;
 import net.minecraft.world.effect.MobEffects;
-import net.minecraft.world.entity.AgableMob;
+import net.minecraft.world.entity.AgeableMob;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.MobSpawnType;
 import net.minecraft.world.entity.SpawnGroupData;
@@ -47,12 +47,12 @@
 import net.minecraft.world.level.block.state.BlockState;
 
 public class Hoglin extends Animal implements Enemy, HoglinBase {
    private static final EntityDataAccessor<Boolean> DATA_IMMUNE_TO_ZOMBIFICATION;
    private int attackAnimationRemainingTicks;
-   private int timeInOverworld = 0;
-   private boolean cannotBeHunted = false;
+   private int timeInOverworld;
+   private boolean cannotBeHunted;
    protected static final ImmutableList<? extends SensorType<? extends Sensor<? super Hoglin>>> SENSOR_TYPES;
    protected static final ImmutableList<? extends MemoryModuleType<?>> MEMORY_TYPES;
 
    public Hoglin(EntityType<? extends Hoglin> var1, Level var2) {
       super(var1, var2);
@@ -200,11 +200,11 @@
       }
 
    }
 
    public boolean isFood(ItemStack var1) {
-      return var1.getItem() == Items.CRIMSON_FUNGUS;
+      return var1.is(Items.CRIMSON_FUNGUS);
    }
 
    public boolean isAdult() {
       return !this.isBaby();
    }
@@ -253,11 +253,11 @@
    public boolean canBeHunted() {
       return this.isAdult() && !this.cannotBeHunted;
    }
 
    @Nullable
-   public AgableMob getBreedOffspring(ServerLevel var1, AgableMob var2) {
+   public AgeableMob getBreedOffspring(ServerLevel var1, AgeableMob var2) {
       Hoglin var3 = (Hoglin)EntityType.HOGLIN.create(var1);
       if (var3 != null) {
          var3.setPersistenceRequired();
       }
 
