--- net/minecraft/world/entity/monster/Creeper.java
+++ net/minecraft/world/entity/monster/Creeper.java
@@ -34,10 +34,11 @@
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.Items;
 import net.minecraft.world.level.Explosion;
 import net.minecraft.world.level.GameRules;
 import net.minecraft.world.level.Level;
+import net.minecraft.world.level.gameevent.GameEvent;
 
 public class Creeper extends Monster {
    private static final EntityDataAccessor<Integer> DATA_SWELL_DIR;
    private static final EntityDataAccessor<Boolean> DATA_IS_POWERED;
    private static final EntityDataAccessor<Boolean> DATA_IS_IGNITED;
@@ -70,18 +71,18 @@
 
    public int getMaxFallDistance() {
       return this.getTarget() == null ? 3 : 3 + (int)(this.getHealth() - 1.0F);
    }
 
-   public boolean causeFallDamage(float var1, float var2) {
-      boolean var3 = super.causeFallDamage(var1, var2);
+   public boolean causeFallDamage(float var1, float var2, DamageSource var3) {
+      boolean var4 = super.causeFallDamage(var1, var2, var3);
       this.swell = (int)((float)this.swell + var1 * 1.5F);
       if (this.swell > this.maxSwell - 5) {
          this.swell = this.maxSwell - 5;
       }
 
-      return var3;
+      return var4;
    }
 
    protected void defineSynchedData() {
       super.defineSynchedData();
       this.entityData.define(DATA_SWELL_DIR, -1);
@@ -125,10 +126,11 @@
          }
 
          int var1 = this.getSwellDir();
          if (var1 > 0 && this.swell == 0) {
             this.playSound(SoundEvents.CREEPER_PRIMED, 1.0F, 0.5F);
+            this.gameEvent(GameEvent.PRIME_FUSE);
          }
 
          this.swell += var1;
          if (this.swell < 0) {
             this.swell = 0;
@@ -185,11 +187,11 @@
       this.entityData.set(DATA_IS_POWERED, true);
    }
 
    protected InteractionResult mobInteract(Player var1, InteractionHand var2) {
       ItemStack var3 = var1.getItemInHand(var2);
-      if (var3.getItem() == Items.FLINT_AND_STEEL) {
+      if (var3.is(Items.FLINT_AND_STEEL)) {
          this.level.playSound(var1, this.getX(), this.getY(), this.getZ(), SoundEvents.FLINTANDSTEEL_USE, this.getSoundSource(), 1.0F, this.random.nextFloat() * 0.4F + 0.8F);
          if (!this.level.isClientSide) {
             this.ignite();
             var3.hurtAndBreak(1, var1, (var1x) -> {
                var1x.broadcastBreakEvent(var2);
@@ -206,11 +208,11 @@
       if (!this.level.isClientSide) {
          Explosion.BlockInteraction var1 = this.level.getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING) ? Explosion.BlockInteraction.DESTROY : Explosion.BlockInteraction.NONE;
          float var2 = this.isPowered() ? 2.0F : 1.0F;
          this.dead = true;
          this.level.explode(this, this.getX(), this.getY(), this.getZ(), (float)this.explosionRadius * var2, var1);
-         this.remove();
+         this.discard();
          this.spawnLingeringCloud();
       }
 
    }
 
