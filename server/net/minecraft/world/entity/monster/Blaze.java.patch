--- net/minecraft/world/entity/monster/Blaze.java
+++ net/minecraft/world/entity/monster/Blaze.java
@@ -5,11 +5,10 @@
 import net.minecraft.network.syncher.EntityDataAccessor;
 import net.minecraft.network.syncher.EntityDataSerializers;
 import net.minecraft.network.syncher.SynchedEntityData;
 import net.minecraft.sounds.SoundEvent;
 import net.minecraft.sounds.SoundEvents;
-import net.minecraft.util.Mth;
 import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.ai.attributes.AttributeSupplier;
 import net.minecraft.world.entity.ai.attributes.Attributes;
@@ -112,11 +111,11 @@
       }
 
       super.customServerAiStep();
    }
 
-   public boolean causeFallDamage(float var1, float var2) {
+   public boolean causeFallDamage(float var1, float var2, DamageSource var3) {
       return false;
    }
 
    public boolean isOnFire() {
       return this.isCharged();
@@ -124,11 +123,11 @@
 
    private boolean isCharged() {
       return ((Byte)this.entityData.get(DATA_FLAGS_ID) & 1) != 0;
    }
 
-   private void setCharged(boolean var1) {
+   void setCharged(boolean var1) {
       byte var2 = (Byte)this.entityData.get(DATA_FLAGS_ID);
       if (var1) {
          var2 = (byte)(var2 | 1);
       } else {
          var2 &= -2;
@@ -168,11 +167,11 @@
 
       public void tick() {
          --this.attackTime;
          LivingEntity var1 = this.blaze.getTarget();
          if (var1 != null) {
-            boolean var2 = this.blaze.getSensing().canSee(var1);
+            boolean var2 = this.blaze.getSensing().hasLineOfSight(var1);
             if (var2) {
                this.lastSeen = 0;
             } else {
                ++this.lastSeen;
             }
@@ -205,19 +204,19 @@
                      this.attackStep = 0;
                      this.blaze.setCharged(false);
                   }
 
                   if (this.attackStep > 1) {
-                     float var11 = Mth.sqrt(Mth.sqrt(var3)) * 0.5F;
+                     double var11 = Math.sqrt(Math.sqrt(var3)) * 0.5D;
                      if (!this.blaze.isSilent()) {
                         this.blaze.level.levelEvent((Player)null, 1018, this.blaze.blockPosition(), 0);
                      }
 
-                     for(int var12 = 0; var12 < 1; ++var12) {
-                        SmallFireball var13 = new SmallFireball(this.blaze.level, this.blaze, var5 + this.blaze.getRandom().nextGaussian() * (double)var11, var7, var9 + this.blaze.getRandom().nextGaussian() * (double)var11);
-                        var13.setPos(var13.getX(), this.blaze.getY(0.5D) + 0.5D, var13.getZ());
-                        this.blaze.level.addFreshEntity(var13);
+                     for(int var13 = 0; var13 < 1; ++var13) {
+                        SmallFireball var14 = new SmallFireball(this.blaze.level, this.blaze, var5 + this.blaze.getRandom().nextGaussian() * var11, var7, var9 + this.blaze.getRandom().nextGaussian() * var11);
+                        var14.setPos(var14.getX(), this.blaze.getY(0.5D) + 0.5D, var14.getZ());
+                        this.blaze.level.addFreshEntity(var14);
                      }
                   }
                }
 
                this.blaze.getLookControl().setLookAt(var1, 10.0F, 10.0F);
