--- net/minecraft/world/entity/monster/SpellcasterIllager.java
+++ net/minecraft/world/entity/monster/SpellcasterIllager.java
@@ -37,10 +37,18 @@
    public void addAdditionalSaveData(CompoundTag var1) {
       super.addAdditionalSaveData(var1);
       var1.putInt("SpellTicks", this.spellCastingTickCount);
    }
 
+   public AbstractIllager.IllagerArmPose getArmPose() {
+      if (this.isCastingSpell()) {
+         return AbstractIllager.IllagerArmPose.SPELLCASTING;
+      } else {
+         return this.isCelebrating() ? AbstractIllager.IllagerArmPose.CELEBRATING : AbstractIllager.IllagerArmPose.CROSSED;
+      }
+   }
+
    public boolean isCastingSpell() {
       if (this.level.isClientSide) {
          return (Byte)this.entityData.get(DATA_SPELL_CASTING_ID) > 0;
       } else {
          return this.spellCastingTickCount > 0;
@@ -88,20 +96,20 @@
 
    static {
       DATA_SPELL_CASTING_ID = SynchedEntityData.defineId(SpellcasterIllager.class, EntityDataSerializers.BYTE);
    }
 
-   public static enum IllagerSpell {
+   protected static enum IllagerSpell {
       NONE(0, 0.0D, 0.0D, 0.0D),
       SUMMON_VEX(1, 0.7D, 0.7D, 0.8D),
       FANGS(2, 0.4D, 0.3D, 0.35D),
       WOLOLO(3, 0.7D, 0.5D, 0.2D),
       DISAPPEAR(4, 0.3D, 0.3D, 0.8D),
       BLINDNESS(5, 0.1D, 0.1D, 0.2D);
 
-      private final int id;
-      private final double[] spellColor;
+      final int id;
+      final double[] spellColor;
 
       private IllagerSpell(int var3, double var4, double var6, double var8) {
          this.id = var3;
          this.spellColor = new double[]{var4, var6, var8};
       }
@@ -119,11 +127,11 @@
 
          return NONE;
       }
    }
 
-   public abstract class SpellcasterUseSpellGoal extends Goal {
+   protected abstract class SpellcasterUseSpellGoal extends Goal {
       protected int attackWarmupDelay;
       protected int nextAttackTickCount;
 
       protected SpellcasterUseSpellGoal() {
       }
@@ -181,11 +189,11 @@
       protected abstract SoundEvent getSpellPrepareSound();
 
       protected abstract SpellcasterIllager.IllagerSpell getSpell();
    }
 
-   public class SpellcasterCastingSpellGoal extends Goal {
+   protected class SpellcasterCastingSpellGoal extends Goal {
       public SpellcasterCastingSpellGoal() {
          this.setFlags(EnumSet.of(Goal.Flag.MOVE, Goal.Flag.LOOK));
       }
 
       public boolean canUse() {
