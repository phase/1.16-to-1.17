--- net/minecraft/world/entity/monster/Guardian.java
+++ net/minecraft/world/entity/monster/Guardian.java
@@ -34,18 +34,20 @@
 import net.minecraft.world.entity.ai.goal.RandomStrollGoal;
 import net.minecraft.world.entity.ai.goal.target.NearestAttackableTargetGoal;
 import net.minecraft.world.entity.ai.navigation.PathNavigation;
 import net.minecraft.world.entity.ai.navigation.WaterBoundPathNavigation;
 import net.minecraft.world.entity.animal.Squid;
+import net.minecraft.world.entity.animal.axolotl.Axolotl;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.LevelReader;
 import net.minecraft.world.level.pathfinder.BlockPathTypes;
 import net.minecraft.world.phys.Vec3;
 
 public class Guardian extends Monster {
+   protected static final int ATTACK_TIME = 80;
    private static final EntityDataAccessor<Boolean> DATA_ID_MOVING;
    private static final EntityDataAccessor<Integer> DATA_ID_ATTACK_TARGET;
    private float clientSideTailAnimation;
    private float clientSideTailAnimationO;
    private float clientSideTailAnimationSpeed;
@@ -165,12 +167,12 @@
 
    protected SoundEvent getDeathSound() {
       return this.isInWaterOrBubble() ? SoundEvents.GUARDIAN_DEATH : SoundEvents.GUARDIAN_DEATH_LAND;
    }
 
-   protected boolean isMovementNoisy() {
-      return false;
+   protected Entity.MovementEmission getMovementEmission() {
+      return Entity.MovementEmission.EVENTS;
    }
 
    protected float getStandingEyeHeight(Pose var1, EntityDimensions var2) {
       return var2.height * 0.5F;
    }
@@ -266,10 +268,18 @@
 
    protected SoundEvent getFlopSound() {
       return SoundEvents.GUARDIAN_FLOP;
    }
 
+   public float getTailAnimation(float var1) {
+      return Mth.lerp(var1, this.clientSideTailAnimationO, this.clientSideTailAnimation);
+   }
+
+   public float getSpikesAnimation(float var1) {
+      return Mth.lerp(var1, this.clientSideSpikesAnimationO, this.clientSideSpikesAnimation);
+   }
+
    public float getAttackAnimationScale(float var1) {
       return ((float)this.clientSideAttackTime + var1) / (float)this.getAttackDuration();
    }
 
    public boolean checkSpawnObstruction(LevelReader var1) {
@@ -438,9 +448,9 @@
       public GuardianAttackSelector(Guardian var1) {
          this.guardian = var1;
       }
 
       public boolean test(@Nullable LivingEntity var1) {
-         return (var1 instanceof Player || var1 instanceof Squid) && var1.distanceToSqr(this.guardian) > 9.0D;
+         return (var1 instanceof Player || var1 instanceof Squid || var1 != null && Axolotl.NOT_PLAYING_DEAD_SELECTOR.test(var1)) && var1.distanceToSqr(this.guardian) > 9.0D;
       }
    }
 }
