--- net/minecraft/world/scores/ScoreboardSaveData.java
+++ net/minecraft/world/scores/ScoreboardSaveData.java
@@ -8,48 +8,34 @@
 import net.minecraft.nbt.StringTag;
 import net.minecraft.network.chat.Component;
 import net.minecraft.network.chat.MutableComponent;
 import net.minecraft.world.level.saveddata.SavedData;
 import net.minecraft.world.scores.criteria.ObjectiveCriteria;
-import org.apache.logging.log4j.LogManager;
-import org.apache.logging.log4j.Logger;
 
 public class ScoreboardSaveData extends SavedData {
-   private static final Logger LOGGER = LogManager.getLogger();
-   private Scoreboard scoreboard;
-   private CompoundTag delayLoad;
+   public static final String FILE_ID = "scoreboard";
+   private final Scoreboard scoreboard;
 
-   public ScoreboardSaveData() {
-      super("scoreboard");
+   public ScoreboardSaveData(Scoreboard var1) {
+      this.scoreboard = var1;
    }
 
-   public void setScoreboard(Scoreboard var1) {
-      this.scoreboard = var1;
-      if (this.delayLoad != null) {
-         this.load(this.delayLoad);
+   public ScoreboardSaveData load(CompoundTag var1) {
+      this.loadObjectives(var1.getList("Objectives", 10));
+      this.scoreboard.loadPlayerScores(var1.getList("PlayerScores", 10));
+      if (var1.contains("DisplaySlots", 10)) {
+         this.loadDisplaySlots(var1.getCompound("DisplaySlots"));
       }
 
-   }
-
-   public void load(CompoundTag var1) {
-      if (this.scoreboard == null) {
-         this.delayLoad = var1;
-      } else {
-         this.loadObjectives(var1.getList("Objectives", 10));
-         this.scoreboard.loadPlayerScores(var1.getList("PlayerScores", 10));
-         if (var1.contains("DisplaySlots", 10)) {
-            this.loadDisplaySlots(var1.getCompound("DisplaySlots"));
-         }
-
-         if (var1.contains("Teams", 9)) {
-            this.loadTeams(var1.getList("Teams", 10));
-         }
-
+      if (var1.contains("Teams", 9)) {
+         this.loadTeams(var1.getList("Teams", 10));
       }
+
+      return this;
    }
 
-   protected void loadTeams(ListTag var1) {
+   private void loadTeams(ListTag var1) {
       for(int var2 = 0; var2 < var1.size(); ++var2) {
          CompoundTag var3 = var1.getCompound(var2);
          String var4 = var3.getString("Name");
          if (var4.length() > 16) {
             var4 = var4.substring(0, 16);
@@ -113,29 +99,29 @@
          this.loadTeamPlayers(var5, var3.getList("Players", 8));
       }
 
    }
 
-   protected void loadTeamPlayers(PlayerTeam var1, ListTag var2) {
+   private void loadTeamPlayers(PlayerTeam var1, ListTag var2) {
       for(int var3 = 0; var3 < var2.size(); ++var3) {
          this.scoreboard.addPlayerToTeam(var2.getString(var3), var1);
       }
 
    }
 
-   protected void loadDisplaySlots(CompoundTag var1) {
+   private void loadDisplaySlots(CompoundTag var1) {
       for(int var2 = 0; var2 < 19; ++var2) {
          if (var1.contains("slot_" + var2, 8)) {
             String var3 = var1.getString("slot_" + var2);
             Objective var4 = this.scoreboard.getObjective(var3);
             this.scoreboard.setDisplayObjective(var2, var4);
          }
       }
 
    }
 
-   protected void loadObjectives(ListTag var1) {
+   private void loadObjectives(ListTag var1) {
       for(int var2 = 0; var2 < var1.size(); ++var2) {
          CompoundTag var3 = var1.getCompound(var2);
          ObjectiveCriteria.byName(var3.getString("CriteriaName")).ifPresent((var2x) -> {
             String var3x = var3.getString("Name");
             if (var3x.length() > 16) {
@@ -149,23 +135,18 @@
       }
 
    }
 
    public CompoundTag save(CompoundTag var1) {
-      if (this.scoreboard == null) {
-         LOGGER.warn("Tried to save scoreboard without having a scoreboard...");
-         return var1;
-      } else {
-         var1.put("Objectives", this.saveObjectives());
-         var1.put("PlayerScores", this.scoreboard.savePlayerScores());
-         var1.put("Teams", this.saveTeams());
-         this.saveDisplaySlots(var1);
-         return var1;
-      }
+      var1.put("Objectives", this.saveObjectives());
+      var1.put("PlayerScores", this.scoreboard.savePlayerScores());
+      var1.put("Teams", this.saveTeams());
+      this.saveDisplaySlots(var1);
+      return var1;
    }
 
-   protected ListTag saveTeams() {
+   private ListTag saveTeams() {
       ListTag var1 = new ListTag();
       Collection var2 = this.scoreboard.getPlayerTeams();
       Iterator var3 = var2.iterator();
 
       while(var3.hasNext()) {
@@ -197,11 +178,11 @@
       }
 
       return var1;
    }
 
-   protected void saveDisplaySlots(CompoundTag var1) {
+   private void saveDisplaySlots(CompoundTag var1) {
       CompoundTag var2 = new CompoundTag();
       boolean var3 = false;
 
       for(int var4 = 0; var4 < 19; ++var4) {
          Objective var5 = this.scoreboard.getDisplayObjective(var4);
@@ -215,11 +196,11 @@
          var1.put("DisplaySlots", var2);
       }
 
    }
 
-   protected ListTag saveObjectives() {
+   private ListTag saveObjectives() {
       ListTag var1 = new ListTag();
       Collection var2 = this.scoreboard.getObjectives();
       Iterator var3 = var2.iterator();
 
       while(var3.hasNext()) {
