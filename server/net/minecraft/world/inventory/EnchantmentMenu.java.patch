--- net/minecraft/world/inventory/EnchantmentMenu.java
+++ net/minecraft/world/inventory/EnchantmentMenu.java
@@ -57,11 +57,11 @@
             return 1;
          }
       });
       this.addSlot(new Slot(this.enchantSlots, 1, 35, 47) {
          public boolean mayPlace(ItemStack var1) {
-            return var1.getItem() == Items.LAPIS_LAZULI;
+            return var1.is(Items.LAPIS_LAZULI);
          }
       });
 
       int var4;
       for(var4 = 0; var4 < 3; ++var4) {
@@ -163,21 +163,21 @@
 
    public boolean clickMenuButton(Player var1, int var2) {
       ItemStack var3 = this.enchantSlots.getItem(0);
       ItemStack var4 = this.enchantSlots.getItem(1);
       int var5 = var2 + 1;
-      if ((var4.isEmpty() || var4.getCount() < var5) && !var1.abilities.instabuild) {
+      if ((var4.isEmpty() || var4.getCount() < var5) && !var1.getAbilities().instabuild) {
          return false;
-      } else if (this.costs[var2] <= 0 || var3.isEmpty() || (var1.experienceLevel < var5 || var1.experienceLevel < this.costs[var2]) && !var1.abilities.instabuild) {
+      } else if (this.costs[var2] <= 0 || var3.isEmpty() || (var1.experienceLevel < var5 || var1.experienceLevel < this.costs[var2]) && !var1.getAbilities().instabuild) {
          return false;
       } else {
          this.access.execute((var6, var7) -> {
             ItemStack var8 = var3;
             List var9 = this.getEnchantmentList(var3, var2, this.costs[var2]);
             if (!var9.isEmpty()) {
                var1.onEnchantmentPerformed(var3, var5);
-               boolean var10 = var3.getItem() == Items.BOOK;
+               boolean var10 = var3.is(Items.BOOK);
                if (var10) {
                   var8 = new ItemStack(Items.ENCHANTED_BOOK);
                   CompoundTag var11 = var3.getTag();
                   if (var11 != null) {
                      var8.setTag(var11.copy());
@@ -193,11 +193,11 @@
                   } else {
                      var8.enchant(var12.enchantment, var12.level);
                   }
                }
 
-               if (!var1.abilities.instabuild) {
+               if (!var1.getAbilities().instabuild) {
                   var4.shrink(var5);
                   if (var4.isEmpty()) {
                      this.enchantSlots.setItem(1, ItemStack.EMPTY);
                   }
                }
@@ -219,21 +219,30 @@
    }
 
    private List<EnchantmentInstance> getEnchantmentList(ItemStack var1, int var2, int var3) {
       this.random.setSeed((long)(this.enchantmentSeed.get() + var2));
       List var4 = EnchantmentHelper.selectEnchantment(this.random, var1, var3, false);
-      if (var1.getItem() == Items.BOOK && var4.size() > 1) {
+      if (var1.is(Items.BOOK) && var4.size() > 1) {
          var4.remove(this.random.nextInt(var4.size()));
       }
 
       return var4;
    }
 
+   public int getGoldCount() {
+      ItemStack var1 = this.enchantSlots.getItem(1);
+      return var1.isEmpty() ? 0 : var1.getCount();
+   }
+
+   public int getEnchantmentSeed() {
+      return this.enchantmentSeed.get();
+   }
+
    public void removed(Player var1) {
       super.removed(var1);
       this.access.execute((var2, var3) -> {
-         this.clearContainer(var1, var1.level, this.enchantSlots);
+         this.clearContainer(var1, this.enchantSlots);
       });
    }
 
    public boolean stillValid(Player var1) {
       return stillValid(this.access, var1, Blocks.ENCHANTING_TABLE);
@@ -251,11 +260,11 @@
             }
          } else if (var2 == 1) {
             if (!this.moveItemStackTo(var5, 2, 38, true)) {
                return ItemStack.EMPTY;
             }
-         } else if (var5.getItem() == Items.LAPIS_LAZULI) {
+         } else if (var5.is(Items.LAPIS_LAZULI)) {
             if (!this.moveItemStackTo(var5, 1, 2, true)) {
                return ItemStack.EMPTY;
             }
          } else {
             if (((Slot)this.slots.get(0)).hasItem() || !((Slot)this.slots.get(0)).mayPlace(var5)) {
