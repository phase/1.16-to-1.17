--- net/minecraft/world/inventory/BeaconMenu.java
+++ net/minecraft/world/inventory/BeaconMenu.java
@@ -1,15 +1,25 @@
 package net.minecraft.world.inventory;
 
+import javax.annotation.Nullable;
 import net.minecraft.tags.ItemTags;
+import net.minecraft.tags.Tag;
 import net.minecraft.world.Container;
 import net.minecraft.world.SimpleContainer;
+import net.minecraft.world.effect.MobEffect;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.level.block.Blocks;
 
 public class BeaconMenu extends AbstractContainerMenu {
+   private static final int PAYMENT_SLOT = 0;
+   private static final int SLOT_COUNT = 1;
+   private static final int DATA_COUNT = 3;
+   private static final int INV_SLOT_START = 1;
+   private static final int INV_SLOT_END = 28;
+   private static final int USE_ROW_SLOT_START = 28;
+   private static final int USE_ROW_SLOT_END = 37;
    private final Container beacon;
    private final BeaconMenu.PaymentSlot paymentSlot;
    private final ContainerLevelAccess access;
    private final ContainerData beaconData;
 
@@ -19,11 +29,11 @@
 
    public BeaconMenu(int var1, Container var2, ContainerData var3, ContainerLevelAccess var4) {
       super(MenuType.BEACON, var1);
       this.beacon = new SimpleContainer(1) {
          public boolean canPlaceItem(int var1, ItemStack var2) {
-            return var2.getItem().is(ItemTags.BEACON_PAYMENT_ITEMS);
+            return var2.is((Tag)ItemTags.BEACON_PAYMENT_ITEMS);
          }
 
          public int getMaxStackSize() {
             return 1;
          }
@@ -112,26 +122,44 @@
       }
 
       return var3;
    }
 
+   public int getLevels() {
+      return this.beaconData.get(0);
+   }
+
+   @Nullable
+   public MobEffect getPrimaryEffect() {
+      return MobEffect.byId(this.beaconData.get(1));
+   }
+
+   @Nullable
+   public MobEffect getSecondaryEffect() {
+      return MobEffect.byId(this.beaconData.get(2));
+   }
+
    public void updateEffects(int var1, int var2) {
       if (this.paymentSlot.hasItem()) {
          this.beaconData.set(1, var1);
          this.beaconData.set(2, var2);
          this.paymentSlot.remove(1);
       }
 
    }
 
+   public boolean hasPayment() {
+      return !this.beacon.getItem(0).isEmpty();
+   }
+
    class PaymentSlot extends Slot {
       public PaymentSlot(Container var2, int var3, int var4, int var5) {
          super(var2, var3, var4, var5);
       }
 
       public boolean mayPlace(ItemStack var1) {
-         return var1.getItem().is(ItemTags.BEACON_PAYMENT_ITEMS);
+         return var1.is((Tag)ItemTags.BEACON_PAYMENT_ITEMS);
       }
 
       public int getMaxStackSize() {
          return 1;
       }
