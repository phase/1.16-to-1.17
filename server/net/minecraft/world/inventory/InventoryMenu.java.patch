--- net/minecraft/world/inventory/InventoryMenu.java
+++ net/minecraft/world/inventory/InventoryMenu.java
@@ -83,18 +83,18 @@
    public boolean recipeMatches(Recipe<? super CraftingContainer> var1) {
       return var1.matches(this.craftSlots, this.owner.level);
    }
 
    public void slotsChanged(Container var1) {
-      CraftingMenu.slotChangedCraftingGrid(this.containerId, this.owner.level, this.owner, this.craftSlots, this.resultSlots);
+      CraftingMenu.slotChangedCraftingGrid(this, this.owner.level, this.owner, this.craftSlots, this.resultSlots);
    }
 
    public void removed(Player var1) {
       super.removed(var1);
       this.resultSlots.clearContent();
       if (!var1.level.isClientSide) {
-         this.clearContainer(var1, var1.level, this.craftSlots);
+         this.clearContainer(var1, this.craftSlots);
       }
    }
 
    public boolean stillValid(Player var1) {
       return true;
@@ -150,13 +150,13 @@
 
          if (var5.getCount() == var3.getCount()) {
             return ItemStack.EMPTY;
          }
 
-         ItemStack var8 = var4.onTake(var1, var5);
+         var4.onTake(var1, var5);
          if (var2 == 0) {
-            var1.drop(var8, false);
+            var1.drop(var5, false);
          }
       }
 
       return var3;
    }
@@ -175,14 +175,22 @@
 
    public int getGridHeight() {
       return this.craftSlots.getHeight();
    }
 
+   public int getSize() {
+      return 5;
+   }
+
    public CraftingContainer getCraftSlots() {
       return this.craftSlots;
    }
 
+   public boolean shouldMoveToInventory(int var1) {
+      return var1 != this.getResultSlotIndex();
+   }
+
    static {
       TEXTURE_EMPTY_SLOTS = new ResourceLocation[]{EMPTY_ARMOR_SLOT_BOOTS, EMPTY_ARMOR_SLOT_LEGGINGS, EMPTY_ARMOR_SLOT_CHESTPLATE, EMPTY_ARMOR_SLOT_HELMET};
       SLOT_IDS = new EquipmentSlot[]{EquipmentSlot.HEAD, EquipmentSlot.CHEST, EquipmentSlot.LEGS, EquipmentSlot.FEET};
    }
 }
