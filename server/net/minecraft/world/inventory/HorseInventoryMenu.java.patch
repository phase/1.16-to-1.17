--- net/minecraft/world/inventory/HorseInventoryMenu.java
+++ net/minecraft/world/inventory/HorseInventoryMenu.java
@@ -19,25 +19,33 @@
       boolean var5 = true;
       var3.startOpen(var2.player);
       boolean var6 = true;
       this.addSlot(new Slot(var3, 0, 8, 18) {
          public boolean mayPlace(ItemStack var1) {
-            return var1.getItem() == Items.SADDLE && !this.hasItem() && var4.isSaddleable();
+            return var1.is(Items.SADDLE) && !this.hasItem() && var4.isSaddleable();
          }
+
+         public boolean isActive() {
+            return var4.isSaddleable();
+         }
       });
       this.addSlot(new Slot(var3, 1, 8, 36) {
          public boolean mayPlace(ItemStack var1) {
             return var4.isArmor(var1);
          }
 
+         public boolean isActive() {
+            return var4.canWearArmor();
+         }
+
          public int getMaxStackSize() {
             return 1;
          }
       });
       int var7;
       int var8;
-      if (var4 instanceof AbstractChestedHorse && ((AbstractChestedHorse)var4).hasChest()) {
+      if (this.hasChest(var4)) {
          for(var7 = 0; var7 < 3; ++var7) {
             for(var8 = 0; var8 < ((AbstractChestedHorse)var4).getInventoryColumns(); ++var8) {
                this.addSlot(new Slot(var3, 2 + var8 + var7 * ((AbstractChestedHorse)var4).getInventoryColumns(), 80 + var8 * 18, 18 + var7 * 18));
             }
          }
@@ -54,13 +62,17 @@
       }
 
    }
 
    public boolean stillValid(Player var1) {
-      return this.horseContainer.stillValid(var1) && this.horse.isAlive() && this.horse.distanceTo(var1) < 8.0F;
+      return !this.horse.hasInventoryChanged(this.horseContainer) && this.horseContainer.stillValid(var1) && this.horse.isAlive() && this.horse.distanceTo(var1) < 8.0F;
    }
 
+   private boolean hasChest(AbstractHorse var1) {
+      return var1 instanceof AbstractChestedHorse && ((AbstractChestedHorse)var1).hasChest();
+   }
+
    public ItemStack quickMoveStack(Player var1, int var2) {
       ItemStack var3 = ItemStack.EMPTY;
       Slot var4 = (Slot)this.slots.get(var2);
       if (var4 != null && var4.hasItem()) {
          ItemStack var5 = var4.getItem();
