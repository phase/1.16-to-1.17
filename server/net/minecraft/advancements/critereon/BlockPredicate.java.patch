--- net/minecraft/advancements/critereon/BlockPredicate.java
+++ net/minecraft/advancements/critereon/BlockPredicate.java
@@ -38,21 +38,20 @@
          return true;
       } else if (!var1.isLoaded(var2)) {
          return false;
       } else {
          BlockState var3 = var1.getBlockState(var2);
-         Block var4 = var3.getBlock();
-         if (this.tag != null && !this.tag.contains(var4)) {
+         if (this.tag != null && !var3.is(this.tag)) {
             return false;
-         } else if (this.block != null && var4 != this.block) {
+         } else if (this.block != null && !var3.is(this.block)) {
             return false;
          } else if (!this.properties.matches(var3)) {
             return false;
          } else {
             if (this.nbt != NbtPredicate.ANY) {
-               BlockEntity var5 = var1.getBlockEntity(var2);
-               if (var5 == null || !this.nbt.matches((net.minecraft.nbt.Tag)var5.save(new CompoundTag()))) {
+               BlockEntity var4 = var1.getBlockEntity(var2);
+               if (var4 == null || !this.nbt.matches((net.minecraft.nbt.Tag)var4.save(new CompoundTag()))) {
                   return false;
                }
             }
 
             return true;
@@ -71,14 +70,13 @@
          }
 
          Tag var7 = null;
          if (var1.has("tag")) {
             ResourceLocation var5 = new ResourceLocation(GsonHelper.getAsString(var1, "tag"));
-            var7 = SerializationTags.getInstance().getBlocks().getTag(var5);
-            if (var7 == null) {
-               throw new JsonSyntaxException("Unknown block tag '" + var5 + "'");
-            }
+            var7 = SerializationTags.getInstance().getTagOrThrow(Registry.BLOCK_REGISTRY, var5, (var0x) -> {
+               return new JsonSyntaxException("Unknown block tag '" + var0x + "'");
+            });
          }
 
          StatePropertiesPredicate var6 = StatePropertiesPredicate.fromJson(var1.get("state"));
          return new BlockPredicate(var7, var3, var6, var2);
       } else {
@@ -94,11 +92,13 @@
          if (this.block != null) {
             var1.addProperty("block", Registry.BLOCK.getKey(this.block).toString());
          }
 
          if (this.tag != null) {
-            var1.addProperty("tag", SerializationTags.getInstance().getBlocks().getIdOrThrow(this.tag).toString());
+            var1.addProperty("tag", SerializationTags.getInstance().getIdOrThrow(Registry.BLOCK_REGISTRY, this.tag, () -> {
+               return new IllegalStateException("Unknown block tag");
+            }).toString());
          }
 
          var1.add("nbt", this.nbt.serializeToJson());
          var1.add("state", this.properties.serializeToJson());
          return var1;
@@ -134,10 +134,15 @@
       public BlockPredicate.Builder of(Tag<Block> var1) {
          this.blocks = var1;
          return this;
       }
 
+      public BlockPredicate.Builder hasNbt(CompoundTag var1) {
+         this.nbt = new NbtPredicate(var1);
+         return this;
+      }
+
       public BlockPredicate.Builder setProperties(StatePropertiesPredicate var1) {
          this.properties = var1;
          return this;
       }
 
