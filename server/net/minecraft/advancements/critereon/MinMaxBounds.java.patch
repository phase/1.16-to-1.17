--- net/minecraft/advancements/critereon/MinMaxBounds.java
+++ net/minecraft/advancements/critereon/MinMaxBounds.java
@@ -177,14 +177,26 @@
          super(var1, var2);
          this.minSq = squareOpt(var1);
          this.maxSq = squareOpt(var2);
       }
 
+      public static MinMaxBounds.Floats exactly(float var0) {
+         return new MinMaxBounds.Floats(var0, var0);
+      }
+
+      public static MinMaxBounds.Floats between(float var0, float var1) {
+         return new MinMaxBounds.Floats(var0, var1);
+      }
+
       public static MinMaxBounds.Floats atLeast(float var0) {
          return new MinMaxBounds.Floats(var0, (Float)null);
       }
 
+      public static MinMaxBounds.Floats atMost(float var0) {
+         return new MinMaxBounds.Floats((Float)null, var0);
+      }
+
       public boolean matches(float var1) {
          if (this.min != null && (Float)this.min > var1) {
             return false;
          } else {
             return this.max == null || (Float)this.max >= var1;
@@ -240,22 +252,38 @@
 
       public static MinMaxBounds.Ints exactly(int var0) {
          return new MinMaxBounds.Ints(var0, var0);
       }
 
+      public static MinMaxBounds.Ints between(int var0, int var1) {
+         return new MinMaxBounds.Ints(var0, var1);
+      }
+
       public static MinMaxBounds.Ints atLeast(int var0) {
          return new MinMaxBounds.Ints(var0, (Integer)null);
       }
 
+      public static MinMaxBounds.Ints atMost(int var0) {
+         return new MinMaxBounds.Ints((Integer)null, var0);
+      }
+
       public boolean matches(int var1) {
          if (this.min != null && (Integer)this.min > var1) {
             return false;
          } else {
             return this.max == null || (Integer)this.max >= var1;
          }
       }
 
+      public boolean matchesSqr(long var1) {
+         if (this.minSq != null && this.minSq > var1) {
+            return false;
+         } else {
+            return this.maxSq == null || this.maxSq >= var1;
+         }
+      }
+
       public static MinMaxBounds.Ints fromJson(@Nullable JsonElement var0) {
          return (MinMaxBounds.Ints)fromJson(var0, ANY, GsonHelper::convertToInt, MinMaxBounds.Ints::new);
       }
 
       public static MinMaxBounds.Ints fromReader(StringReader var0) throws CommandSyntaxException {
