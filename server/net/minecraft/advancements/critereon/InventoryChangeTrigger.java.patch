--- net/minecraft/advancements/critereon/InventoryChangeTrigger.java
+++ net/minecraft/advancements/critereon/InventoryChangeTrigger.java
@@ -1,7 +1,8 @@
 package net.minecraft.advancements.critereon;
 
+import com.google.common.collect.ImmutableSet;
 import com.google.gson.JsonArray;
 import com.google.gson.JsonObject;
 import it.unimi.dsi.fastutil.objects.ObjectArrayList;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.server.level.ServerPlayer;
@@ -11,11 +12,11 @@
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.alchemy.Potion;
 import net.minecraft.world.level.ItemLike;
 
 public class InventoryChangeTrigger extends SimpleCriterionTrigger<InventoryChangeTrigger.TriggerInstance> {
-   private static final ResourceLocation ID = new ResourceLocation("inventory_changed");
+   static final ResourceLocation ID = new ResourceLocation("inventory_changed");
 
    public InventoryChangeTrigger() {
    }
 
    public ResourceLocation getId() {
@@ -77,11 +78,11 @@
 
       public static InventoryChangeTrigger.TriggerInstance hasItems(ItemLike... var0) {
          ItemPredicate[] var1 = new ItemPredicate[var0.length];
 
          for(int var2 = 0; var2 < var0.length; ++var2) {
-            var1[var2] = new ItemPredicate((Tag)null, var0[var2].asItem(), MinMaxBounds.Ints.ANY, MinMaxBounds.Ints.ANY, EnchantmentPredicate.NONE, EnchantmentPredicate.NONE, (Potion)null, NbtPredicate.ANY);
+            var1[var2] = new ItemPredicate((Tag)null, ImmutableSet.of(var0[var2].asItem()), MinMaxBounds.Ints.ANY, MinMaxBounds.Ints.ANY, EnchantmentPredicate.NONE, EnchantmentPredicate.NONE, (Potion)null, NbtPredicate.ANY);
          }
 
          return hasItems(var1);
       }
 
