--- net/minecraft/advancements/CriteriaTriggers.java
+++ net/minecraft/advancements/CriteriaTriggers.java
@@ -23,26 +23,29 @@
 import net.minecraft.advancements.critereon.ItemPickedUpByEntityTrigger;
 import net.minecraft.advancements.critereon.ItemUsedOnBlockTrigger;
 import net.minecraft.advancements.critereon.KilledByCrossbowTrigger;
 import net.minecraft.advancements.critereon.KilledTrigger;
 import net.minecraft.advancements.critereon.LevitationTrigger;
+import net.minecraft.advancements.critereon.LightningStrikeTrigger;
 import net.minecraft.advancements.critereon.LocationTrigger;
 import net.minecraft.advancements.critereon.LootTableTrigger;
 import net.minecraft.advancements.critereon.NetherTravelTrigger;
 import net.minecraft.advancements.critereon.PlacedBlockTrigger;
 import net.minecraft.advancements.critereon.PlayerHurtEntityTrigger;
 import net.minecraft.advancements.critereon.PlayerInteractTrigger;
 import net.minecraft.advancements.critereon.RecipeUnlockedTrigger;
 import net.minecraft.advancements.critereon.ShotCrossbowTrigger;
 import net.minecraft.advancements.critereon.SlideDownBlockTrigger;
+import net.minecraft.advancements.critereon.StartRidingTrigger;
 import net.minecraft.advancements.critereon.SummonedEntityTrigger;
 import net.minecraft.advancements.critereon.TameAnimalTrigger;
 import net.minecraft.advancements.critereon.TargetBlockTrigger;
 import net.minecraft.advancements.critereon.TickTrigger;
 import net.minecraft.advancements.critereon.TradeTrigger;
 import net.minecraft.advancements.critereon.UsedEnderEyeTrigger;
 import net.minecraft.advancements.critereon.UsedTotemTrigger;
+import net.minecraft.advancements.critereon.UsingItemTrigger;
 import net.minecraft.resources.ResourceLocation;
 
 public class CriteriaTriggers {
    private static final Map<ResourceLocation, CriterionTrigger<?>> CRITERIA = Maps.newHashMap();
    public static final ImpossibleTrigger IMPOSSIBLE = (ImpossibleTrigger)register(new ImpossibleTrigger());
@@ -85,11 +88,17 @@
    public static final TargetBlockTrigger TARGET_BLOCK_HIT = (TargetBlockTrigger)register(new TargetBlockTrigger());
    public static final ItemUsedOnBlockTrigger ITEM_USED_ON_BLOCK = (ItemUsedOnBlockTrigger)register(new ItemUsedOnBlockTrigger());
    public static final LootTableTrigger GENERATE_LOOT = (LootTableTrigger)register(new LootTableTrigger());
    public static final ItemPickedUpByEntityTrigger ITEM_PICKED_UP_BY_ENTITY = (ItemPickedUpByEntityTrigger)register(new ItemPickedUpByEntityTrigger());
    public static final PlayerInteractTrigger PLAYER_INTERACTED_WITH_ENTITY = (PlayerInteractTrigger)register(new PlayerInteractTrigger());
+   public static final StartRidingTrigger START_RIDING_TRIGGER = (StartRidingTrigger)register(new StartRidingTrigger());
+   public static final LightningStrikeTrigger LIGHTNING_STRIKE = (LightningStrikeTrigger)register(new LightningStrikeTrigger());
+   public static final UsingItemTrigger USING_ITEM = (UsingItemTrigger)register(new UsingItemTrigger());
 
+   public CriteriaTriggers() {
+   }
+
    private static <T extends CriterionTrigger<?>> T register(T var0) {
       if (CRITERIA.containsKey(var0.getId())) {
          throw new IllegalArgumentException("Duplicate criterion id " + var0.getId());
       } else {
          CRITERIA.put(var0.getId(), var0);
