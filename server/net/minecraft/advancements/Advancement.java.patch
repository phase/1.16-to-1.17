--- net/minecraft/advancements/Advancement.java
+++ net/minecraft/advancements/Advancement.java
@@ -82,21 +82,26 @@
    public AdvancementRewards getRewards() {
       return this.rewards;
    }
 
    public String toString() {
-      return "SimpleAdvancement{id=" + this.getId() + ", parent=" + (this.parent == null ? "null" : this.parent.getId()) + ", display=" + this.display + ", rewards=" + this.rewards + ", criteria=" + this.criteria + ", requirements=" + Arrays.deepToString(this.requirements) + '}';
+      ResourceLocation var10000 = this.getId();
+      return "SimpleAdvancement{id=" + var10000 + ", parent=" + (this.parent == null ? "null" : this.parent.getId()) + ", display=" + this.display + ", rewards=" + this.rewards + ", criteria=" + this.criteria + ", requirements=" + Arrays.deepToString(this.requirements) + "}";
    }
 
    public Iterable<Advancement> getChildren() {
       return this.children;
    }
 
    public Map<String, Criterion> getCriteria() {
       return this.criteria;
    }
 
+   public int getMaxCriteraRequired() {
+      return this.requirements.length;
+   }
+
    public void addChild(Advancement var1) {
       this.children.add(var1);
    }
 
    public ResourceLocation getId() {
@@ -133,11 +138,11 @@
       private AdvancementRewards rewards;
       private Map<String, Criterion> criteria;
       private String[][] requirements;
       private RequirementsStrategy requirementsStrategy;
 
-      private Builder(@Nullable ResourceLocation var1, @Nullable DisplayInfo var2, AdvancementRewards var3, Map<String, Criterion> var4, String[][] var5) {
+      Builder(@Nullable ResourceLocation var1, @Nullable DisplayInfo var2, AdvancementRewards var3, Map<String, Criterion> var4, String[][] var5) {
          this.rewards = AdvancementRewards.EMPTY;
          this.criteria = Maps.newLinkedHashMap();
          this.requirementsStrategy = RequirementsStrategy.AND;
          this.parentId = var1;
          this.display = var2;
@@ -204,10 +209,15 @@
       public Advancement.Builder requirements(RequirementsStrategy var1) {
          this.requirementsStrategy = var1;
          return this;
       }
 
+      public Advancement.Builder requirements(String[][] var1) {
+         this.requirements = var1;
+         return this;
+      }
+
       public boolean canBuild(Function<ResourceLocation, Advancement> var1) {
          if (this.parentId == null) {
             return true;
          } else {
             if (this.parent == null) {
@@ -319,11 +329,12 @@
          }
 
       }
 
       public String toString() {
-         return "Task Advancement{parentId=" + this.parentId + ", display=" + this.display + ", rewards=" + this.rewards + ", criteria=" + this.criteria + ", requirements=" + Arrays.deepToString(this.requirements) + '}';
+         ResourceLocation var10000 = this.parentId;
+         return "Task Advancement{parentId=" + var10000 + ", display=" + this.display + ", rewards=" + this.rewards + ", criteria=" + this.criteria + ", requirements=" + Arrays.deepToString(this.requirements) + "}";
       }
 
       public static Advancement.Builder fromJson(JsonObject var0, DeserializationContext var1) {
          ResourceLocation var2 = var0.has("parent") ? new ResourceLocation(GsonHelper.getAsString(var0, "parent")) : null;
          DisplayInfo var3 = var0.has("display") ? DisplayInfo.fromJson(GsonHelper.getAsJsonObject(var0, "display")) : null;
@@ -412,11 +423,11 @@
 
          for(int var5 = 0; var5 < var4.length; ++var5) {
             var4[var5] = new String[var0.readVarInt()];
 
             for(int var6 = 0; var6 < var4[var5].length; ++var6) {
-               var4[var5][var6] = var0.readUtf(32767);
+               var4[var5][var6] = var0.readUtf();
             }
          }
 
          return new Advancement.Builder(var1, var2, AdvancementRewards.EMPTY, var3, var4);
       }
