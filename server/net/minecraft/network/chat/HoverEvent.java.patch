--- net/minecraft/network/chat/HoverEvent.java
+++ net/minecraft/network/chat/HoverEvent.java
@@ -1,12 +1,14 @@
 package net.minecraft.network.chat;
 
 import com.google.common.collect.ImmutableMap;
+import com.google.common.collect.Lists;
 import com.google.gson.JsonElement;
 import com.google.gson.JsonObject;
 import com.google.gson.JsonSyntaxException;
 import com.mojang.brigadier.exceptions.CommandSyntaxException;
+import java.util.List;
 import java.util.Map;
 import java.util.Objects;
 import java.util.UUID;
 import java.util.function.Function;
 import java.util.stream.Stream;
@@ -98,11 +100,11 @@
          return ((HoverEvent.ItemStackInfo)var0).serialize();
       }, (var0) -> {
          return HoverEvent.ItemStackInfo.create(var0);
       });
       public static final HoverEvent.Action<HoverEvent.EntityTooltipInfo> SHOW_ENTITY = new HoverEvent.Action("show_entity", true, HoverEvent.EntityTooltipInfo::create, HoverEvent.EntityTooltipInfo::serialize, HoverEvent.EntityTooltipInfo::create);
-      private static final Map<String, HoverEvent.Action> LOOKUP;
+      private static final Map<String, HoverEvent.Action<?>> LOOKUP;
       private final String name;
       private final boolean allowFromServer;
       private final Function<JsonElement, T> argDeserializer;
       private final Function<T, JsonElement> argSerializer;
       private final Function<Component, T> legacyArgDeserializer;
@@ -122,11 +124,11 @@
       public String getName() {
          return this.name;
       }
 
       @Nullable
-      public static HoverEvent.Action getByName(String var0) {
+      public static HoverEvent.Action<?> getByName(String var0) {
          return (HoverEvent.Action)LOOKUP.get(var0);
       }
 
       private T cast(Object var1) {
          return var1;
@@ -162,10 +164,12 @@
    public static class ItemStackInfo {
       private final Item item;
       private final int count;
       @Nullable
       private final CompoundTag tag;
+      @Nullable
+      private ItemStack itemStack;
 
       ItemStackInfo(Item var1, int var2, @Nullable CompoundTag var3) {
          this.item = var1;
          this.count = var2;
          this.tag = var3;
@@ -191,10 +195,21 @@
          var1 = 31 * var1 + this.count;
          var1 = 31 * var1 + (this.tag != null ? this.tag.hashCode() : 0);
          return var1;
       }
 
+      public ItemStack getItemStack() {
+         if (this.itemStack == null) {
+            this.itemStack = new ItemStack(this.item, this.count);
+            if (this.tag != null) {
+               this.itemStack.setTag(this.tag);
+            }
+         }
+
+         return this.itemStack;
+      }
+
       private static HoverEvent.ItemStackInfo create(JsonElement var0) {
          if (var0.isJsonPrimitive()) {
             return new HoverEvent.ItemStackInfo((Item)Registry.ITEM.get(new ResourceLocation(var0.getAsString())), 1, (CompoundTag)null);
          } else {
             JsonObject var1 = GsonHelper.convertToJsonObject(var0, "item");
@@ -244,10 +259,12 @@
    public static class EntityTooltipInfo {
       public final EntityType<?> type;
       public final UUID id;
       @Nullable
       public final Component name;
+      @Nullable
+      private List<Component> linesCache;
 
       public EntityTooltipInfo(EntityType<?> var1, UUID var2, @Nullable Component var3) {
          this.type = var1;
          this.id = var2;
          this.name = var3;
@@ -288,10 +305,24 @@
          }
 
          return var1;
       }
 
+      public List<Component> getTooltipLines() {
+         if (this.linesCache == null) {
+            this.linesCache = Lists.newArrayList();
+            if (this.name != null) {
+               this.linesCache.add(this.name);
+            }
+
+            this.linesCache.add(new TranslatableComponent("gui.entity_tooltip.type", new Object[]{this.type.getDescription()}));
+            this.linesCache.add(new TextComponent(this.id.toString()));
+         }
+
+         return this.linesCache;
+      }
+
       public boolean equals(Object var1) {
          if (this == var1) {
             return true;
          } else if (var1 != null && this.getClass() == var1.getClass()) {
             HoverEvent.EntityTooltipInfo var2 = (HoverEvent.EntityTooltipInfo)var1;
