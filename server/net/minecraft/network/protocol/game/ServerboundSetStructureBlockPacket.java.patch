--- net/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket.java
+++ net/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket.java
@@ -1,45 +1,42 @@
 package net.minecraft.network.protocol.game;
 
-import java.io.IOException;
 import net.minecraft.core.BlockPos;
+import net.minecraft.core.Vec3i;
 import net.minecraft.network.FriendlyByteBuf;
 import net.minecraft.network.protocol.Packet;
 import net.minecraft.util.Mth;
 import net.minecraft.world.level.block.Mirror;
 import net.minecraft.world.level.block.Rotation;
 import net.minecraft.world.level.block.entity.StructureBlockEntity;
 import net.minecraft.world.level.block.state.properties.StructureMode;
 
 public class ServerboundSetStructureBlockPacket implements Packet<ServerGamePacketListener> {
-   private BlockPos pos;
-   private StructureBlockEntity.UpdateType updateType;
-   private StructureMode mode;
-   private String name;
-   private BlockPos offset;
-   private BlockPos size;
-   private Mirror mirror;
-   private Rotation rotation;
-   private String data;
-   private boolean ignoreEntities;
-   private boolean showAir;
-   private boolean showBoundingBox;
-   private float integrity;
-   private long seed;
+   private final BlockPos pos;
+   private final StructureBlockEntity.UpdateType updateType;
+   private final StructureMode mode;
+   private final String name;
+   private final BlockPos offset;
+   private final Vec3i size;
+   private final Mirror mirror;
+   private final Rotation rotation;
+   private final String data;
+   private final boolean ignoreEntities;
+   private final boolean showAir;
+   private final boolean showBoundingBox;
+   private final float integrity;
+   private final long seed;
 
-   public ServerboundSetStructureBlockPacket() {
-   }
-
-   public void read(FriendlyByteBuf var1) throws IOException {
+   public ServerboundSetStructureBlockPacket(FriendlyByteBuf var1) {
       this.pos = var1.readBlockPos();
       this.updateType = (StructureBlockEntity.UpdateType)var1.readEnum(StructureBlockEntity.UpdateType.class);
       this.mode = (StructureMode)var1.readEnum(StructureMode.class);
-      this.name = var1.readUtf(32767);
+      this.name = var1.readUtf();
       boolean var2 = true;
       this.offset = new BlockPos(Mth.clamp(var1.readByte(), -48, 48), Mth.clamp(var1.readByte(), -48, 48), Mth.clamp(var1.readByte(), -48, 48));
       boolean var3 = true;
-      this.size = new BlockPos(Mth.clamp(var1.readByte(), 0, 48), Mth.clamp(var1.readByte(), 0, 48), Mth.clamp(var1.readByte(), 0, 48));
+      this.size = new Vec3i(Mth.clamp(var1.readByte(), 0, 48), Mth.clamp(var1.readByte(), 0, 48), Mth.clamp(var1.readByte(), 0, 48));
       this.mirror = (Mirror)var1.readEnum(Mirror.class);
       this.rotation = (Rotation)var1.readEnum(Rotation.class);
       this.data = var1.readUtf(12);
       this.integrity = Mth.clamp(var1.readFloat(), 0.0F, 1.0F);
       this.seed = var1.readVarLong();
@@ -47,11 +44,11 @@
       this.ignoreEntities = (var4 & 1) != 0;
       this.showAir = (var4 & 2) != 0;
       this.showBoundingBox = (var4 & 4) != 0;
    }
 
-   public void write(FriendlyByteBuf var1) throws IOException {
+   public void write(FriendlyByteBuf var1) {
       var1.writeBlockPos(this.pos);
       var1.writeEnum(this.updateType);
       var1.writeEnum(this.mode);
       var1.writeUtf(this.name);
       var1.writeByte(this.offset.getX());
@@ -103,11 +100,11 @@
 
    public BlockPos getOffset() {
       return this.offset;
    }
 
-   public BlockPos getSize() {
+   public Vec3i getSize() {
       return this.size;
    }
 
    public Mirror getMirror() {
       return this.mirror;
