--- net/minecraft/network/protocol/game/ServerboundMovePlayerPacket.java
+++ net/minecraft/network/protocol/game/ServerboundMovePlayerPacket.java
@@ -1,36 +1,35 @@
 package net.minecraft.network.protocol.game;
 
-import java.io.IOException;
 import net.minecraft.network.FriendlyByteBuf;
 import net.minecraft.network.protocol.Packet;
 
-public class ServerboundMovePlayerPacket implements Packet<ServerGamePacketListener> {
-   protected double x;
-   protected double y;
-   protected double z;
-   protected float yRot;
-   protected float xRot;
-   protected boolean onGround;
-   protected boolean hasPos;
-   protected boolean hasRot;
+public abstract class ServerboundMovePlayerPacket implements Packet<ServerGamePacketListener> {
+   protected final double x;
+   protected final double y;
+   protected final double z;
+   protected final float yRot;
+   protected final float xRot;
+   protected final boolean onGround;
+   protected final boolean hasPos;
+   protected final boolean hasRot;
 
-   public ServerboundMovePlayerPacket() {
+   protected ServerboundMovePlayerPacket(double var1, double var3, double var5, float var7, float var8, boolean var9, boolean var10, boolean var11) {
+      this.x = var1;
+      this.y = var3;
+      this.z = var5;
+      this.yRot = var7;
+      this.xRot = var8;
+      this.onGround = var9;
+      this.hasPos = var10;
+      this.hasRot = var11;
    }
 
    public void handle(ServerGamePacketListener var1) {
       var1.handleMovePlayer(this);
    }
 
-   public void read(FriendlyByteBuf var1) throws IOException {
-      this.onGround = var1.readUnsignedByte() != 0;
-   }
-
-   public void write(FriendlyByteBuf var1) throws IOException {
-      var1.writeByte(this.onGround ? 1 : 0);
-   }
-
    public double getX(double var1) {
       return this.hasPos ? this.x : var1;
    }
 
    public double getY(double var1) {
@@ -51,68 +50,85 @@
 
    public boolean isOnGround() {
       return this.onGround;
    }
 
+   public static class StatusOnly extends ServerboundMovePlayerPacket {
+      public StatusOnly(boolean var1) {
+         super(0.0D, 0.0D, 0.0D, 0.0F, 0.0F, var1, false, false);
+      }
+
+      public static ServerboundMovePlayerPacket.StatusOnly read(FriendlyByteBuf var0) {
+         boolean var1 = var0.readUnsignedByte() != 0;
+         return new ServerboundMovePlayerPacket.StatusOnly(var1);
+      }
+
+      public void write(FriendlyByteBuf var1) {
+         var1.writeByte(this.onGround ? 1 : 0);
+      }
+   }
+
    public static class Rot extends ServerboundMovePlayerPacket {
-      public Rot() {
-         this.hasRot = true;
+      public Rot(float var1, float var2, boolean var3) {
+         super(0.0D, 0.0D, 0.0D, var1, var2, var3, false, true);
       }
 
-      public void read(FriendlyByteBuf var1) throws IOException {
-         this.yRot = var1.readFloat();
-         this.xRot = var1.readFloat();
-         super.read(var1);
+      public static ServerboundMovePlayerPacket.Rot read(FriendlyByteBuf var0) {
+         float var1 = var0.readFloat();
+         float var2 = var0.readFloat();
+         boolean var3 = var0.readUnsignedByte() != 0;
+         return new ServerboundMovePlayerPacket.Rot(var1, var2, var3);
       }
 
-      public void write(FriendlyByteBuf var1) throws IOException {
+      public void write(FriendlyByteBuf var1) {
          var1.writeFloat(this.yRot);
          var1.writeFloat(this.xRot);
-         super.write(var1);
+         var1.writeByte(this.onGround ? 1 : 0);
       }
    }
 
    public static class Pos extends ServerboundMovePlayerPacket {
-      public Pos() {
-         this.hasPos = true;
+      public Pos(double var1, double var3, double var5, boolean var7) {
+         super(var1, var3, var5, 0.0F, 0.0F, var7, true, false);
       }
 
-      public void read(FriendlyByteBuf var1) throws IOException {
-         this.x = var1.readDouble();
-         this.y = var1.readDouble();
-         this.z = var1.readDouble();
-         super.read(var1);
+      public static ServerboundMovePlayerPacket.Pos read(FriendlyByteBuf var0) {
+         double var1 = var0.readDouble();
+         double var3 = var0.readDouble();
+         double var5 = var0.readDouble();
+         boolean var7 = var0.readUnsignedByte() != 0;
+         return new ServerboundMovePlayerPacket.Pos(var1, var3, var5, var7);
       }
 
-      public void write(FriendlyByteBuf var1) throws IOException {
+      public void write(FriendlyByteBuf var1) {
          var1.writeDouble(this.x);
          var1.writeDouble(this.y);
          var1.writeDouble(this.z);
-         super.write(var1);
+         var1.writeByte(this.onGround ? 1 : 0);
       }
    }
 
    public static class PosRot extends ServerboundMovePlayerPacket {
-      public PosRot() {
-         this.hasPos = true;
-         this.hasRot = true;
+      public PosRot(double var1, double var3, double var5, float var7, float var8, boolean var9) {
+         super(var1, var3, var5, var7, var8, var9, true, true);
       }
 
-      public void read(FriendlyByteBuf var1) throws IOException {
-         this.x = var1.readDouble();
-         this.y = var1.readDouble();
-         this.z = var1.readDouble();
-         this.yRot = var1.readFloat();
-         this.xRot = var1.readFloat();
-         super.read(var1);
+      public static ServerboundMovePlayerPacket.PosRot read(FriendlyByteBuf var0) {
+         double var1 = var0.readDouble();
+         double var3 = var0.readDouble();
+         double var5 = var0.readDouble();
+         float var7 = var0.readFloat();
+         float var8 = var0.readFloat();
+         boolean var9 = var0.readUnsignedByte() != 0;
+         return new ServerboundMovePlayerPacket.PosRot(var1, var3, var5, var7, var8, var9);
       }
 
-      public void write(FriendlyByteBuf var1) throws IOException {
+      public void write(FriendlyByteBuf var1) {
          var1.writeDouble(this.x);
          var1.writeDouble(this.y);
          var1.writeDouble(this.z);
          var1.writeFloat(this.yRot);
          var1.writeFloat(this.xRot);
-         super.write(var1);
+         var1.writeByte(this.onGround ? 1 : 0);
       }
    }
 }
