--- net/minecraft/network/protocol/game/ClientboundLevelParticlesPacket.java
+++ net/minecraft/network/protocol/game/ClientboundLevelParticlesPacket.java
@@ -1,30 +1,26 @@
 package net.minecraft.network.protocol.game;
 
-import java.io.IOException;
 import net.minecraft.core.Registry;
 import net.minecraft.core.particles.ParticleOptions;
 import net.minecraft.core.particles.ParticleType;
 import net.minecraft.core.particles.ParticleTypes;
 import net.minecraft.network.FriendlyByteBuf;
 import net.minecraft.network.protocol.Packet;
 
 public class ClientboundLevelParticlesPacket implements Packet<ClientGamePacketListener> {
-   private double x;
-   private double y;
-   private double z;
-   private float xDist;
-   private float yDist;
-   private float zDist;
-   private float maxSpeed;
-   private int count;
-   private boolean overrideLimiter;
-   private ParticleOptions particle;
+   private final double x;
+   private final double y;
+   private final double z;
+   private final float xDist;
+   private final float yDist;
+   private final float zDist;
+   private final float maxSpeed;
+   private final int count;
+   private final boolean overrideLimiter;
+   private final ParticleOptions particle;
 
-   public ClientboundLevelParticlesPacket() {
-   }
-
    public <T extends ParticleOptions> ClientboundLevelParticlesPacket(T var1, boolean var2, double var3, double var5, double var7, float var9, float var10, float var11, float var12, int var13) {
       this.particle = var1;
       this.overrideLimiter = var2;
       this.x = var3;
       this.y = var5;
@@ -34,11 +30,11 @@
       this.zDist = var11;
       this.maxSpeed = var12;
       this.count = var13;
    }
 
-   public void read(FriendlyByteBuf var1) throws IOException {
+   public ClientboundLevelParticlesPacket(FriendlyByteBuf var1) {
       Object var2 = (ParticleType)Registry.PARTICLE_TYPE.byId(var1.readInt());
       if (var2 == null) {
          var2 = ParticleTypes.BARRIER;
       }
 
@@ -56,11 +52,11 @@
 
    private <T extends ParticleOptions> T readParticle(FriendlyByteBuf var1, ParticleType<T> var2) {
       return var2.getDeserializer().fromNetwork(var2, var1);
    }
 
-   public void write(FriendlyByteBuf var1) throws IOException {
+   public void write(FriendlyByteBuf var1) {
       var1.writeInt(Registry.PARTICLE_TYPE.getId(this.particle.getType()));
       var1.writeBoolean(this.overrideLimiter);
       var1.writeDouble(this.x);
       var1.writeDouble(this.y);
       var1.writeDouble(this.z);
@@ -70,9 +66,49 @@
       var1.writeFloat(this.maxSpeed);
       var1.writeInt(this.count);
       this.particle.writeToNetwork(var1);
    }
 
+   public boolean isOverrideLimiter() {
+      return this.overrideLimiter;
+   }
+
+   public double getX() {
+      return this.x;
+   }
+
+   public double getY() {
+      return this.y;
+   }
+
+   public double getZ() {
+      return this.z;
+   }
+
+   public float getXDist() {
+      return this.xDist;
+   }
+
+   public float getYDist() {
+      return this.yDist;
+   }
+
+   public float getZDist() {
+      return this.zDist;
+   }
+
+   public float getMaxSpeed() {
+      return this.maxSpeed;
+   }
+
+   public int getCount() {
+      return this.count;
+   }
+
+   public ParticleOptions getParticle() {
+      return this.particle;
+   }
+
    public void handle(ClientGamePacketListener var1) {
       var1.handleParticleEvent(this);
    }
 }
