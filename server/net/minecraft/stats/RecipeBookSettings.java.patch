--- net/minecraft/stats/RecipeBookSettings.java
+++ net/minecraft/stats/RecipeBookSettings.java
@@ -29,14 +29,22 @@
          }
 
       }));
    }
 
+   public boolean isOpen(RecipeBookType var1) {
+      return ((RecipeBookSettings.TypeSettings)this.states.get(var1)).open;
+   }
+
    public void setOpen(RecipeBookType var1, boolean var2) {
       ((RecipeBookSettings.TypeSettings)this.states.get(var1)).open = var2;
    }
 
+   public boolean isFiltering(RecipeBookType var1) {
+      return ((RecipeBookSettings.TypeSettings)this.states.get(var1)).filtering;
+   }
+
    public void setFiltering(RecipeBookType var1, boolean var2) {
       ((RecipeBookSettings.TypeSettings)this.states.get(var1)).filtering = var2;
    }
 
    public static RecipeBookSettings read(FriendlyByteBuf var0) {
@@ -128,12 +136,12 @@
    static {
       TAG_FIELDS = ImmutableMap.of(RecipeBookType.CRAFTING, Pair.of("isGuiOpen", "isFilteringCraftable"), RecipeBookType.FURNACE, Pair.of("isFurnaceGuiOpen", "isFurnaceFilteringCraftable"), RecipeBookType.BLAST_FURNACE, Pair.of("isBlastingFurnaceGuiOpen", "isBlastingFurnaceFilteringCraftable"), RecipeBookType.SMOKER, Pair.of("isSmokerGuiOpen", "isSmokerFilteringCraftable"));
    }
 
    static final class TypeSettings {
-      private boolean open;
-      private boolean filtering;
+      boolean open;
+      boolean filtering;
 
       public TypeSettings(boolean var1, boolean var2) {
          this.open = var1;
          this.filtering = var2;
       }
@@ -158,9 +166,9 @@
          var1 = 31 * var1 + (this.filtering ? 1 : 0);
          return var1;
       }
 
       public String toString() {
-         return "[open=" + this.open + ", filtering=" + this.filtering + ']';
+         return "[open=" + this.open + ", filtering=" + this.filtering + "]";
       }
    }
 }
