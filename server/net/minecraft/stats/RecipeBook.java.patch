--- net/minecraft/stats/RecipeBook.java
+++ net/minecraft/stats/RecipeBook.java
@@ -2,10 +2,11 @@
 
 import com.google.common.collect.Sets;
 import java.util.Set;
 import javax.annotation.Nullable;
 import net.minecraft.resources.ResourceLocation;
+import net.minecraft.world.inventory.RecipeBookMenu;
 import net.minecraft.world.inventory.RecipeBookType;
 import net.minecraft.world.item.crafting.Recipe;
 
 public class RecipeBook {
    protected final Set<ResourceLocation> known = Sets.newHashSet();
@@ -40,15 +41,23 @@
 
    public boolean contains(ResourceLocation var1) {
       return this.known.contains(var1);
    }
 
+   public void remove(Recipe<?> var1) {
+      this.remove(var1.getId());
+   }
+
    protected void remove(ResourceLocation var1) {
       this.known.remove(var1);
       this.highlight.remove(var1);
    }
 
+   public boolean willHighlight(Recipe<?> var1) {
+      return this.highlight.contains(var1.getId());
+   }
+
    public void removeHighlight(Recipe<?> var1) {
       this.highlight.remove(var1.getId());
    }
 
    public void addHighlight(Recipe<?> var1) {
@@ -57,10 +66,30 @@
 
    protected void addHighlight(ResourceLocation var1) {
       this.highlight.add(var1);
    }
 
+   public boolean isOpen(RecipeBookType var1) {
+      return this.bookSettings.isOpen(var1);
+   }
+
+   public void setOpen(RecipeBookType var1, boolean var2) {
+      this.bookSettings.setOpen(var1, var2);
+   }
+
+   public boolean isFiltering(RecipeBookMenu<?> var1) {
+      return this.isFiltering(var1.getRecipeBookType());
+   }
+
+   public boolean isFiltering(RecipeBookType var1) {
+      return this.bookSettings.isFiltering(var1);
+   }
+
+   public void setFiltering(RecipeBookType var1, boolean var2) {
+      this.bookSettings.setFiltering(var1, var2);
+   }
+
    public void setBookSettings(RecipeBookSettings var1) {
       this.bookSettings.replaceFrom(var1);
    }
 
    public RecipeBookSettings getBookSettings() {
