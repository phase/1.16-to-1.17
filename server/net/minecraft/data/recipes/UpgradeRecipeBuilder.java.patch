--- net/minecraft/data/recipes/UpgradeRecipeBuilder.java
+++ net/minecraft/data/recipes/UpgradeRecipeBuilder.java
@@ -42,11 +42,18 @@
    }
 
    public void save(Consumer<FinishedRecipe> var1, ResourceLocation var2) {
       this.ensureValid(var2);
       this.advancement.parent(new ResourceLocation("recipes/root")).addCriterion("has_the_recipe", (CriterionTriggerInstance)RecipeUnlockedTrigger.unlocked(var2)).rewards(AdvancementRewards.Builder.recipe(var2)).requirements(RequirementsStrategy.OR);
-      var1.accept(new UpgradeRecipeBuilder.Result(var2, this.type, this.base, this.addition, this.result, this.advancement, new ResourceLocation(var2.getNamespace(), "recipes/" + this.result.getItemCategory().getRecipeFolderName() + "/" + var2.getPath())));
+      RecipeSerializer var10004 = this.type;
+      Ingredient var10005 = this.base;
+      Ingredient var10006 = this.addition;
+      Item var10007 = this.result;
+      Advancement.Builder var10008 = this.advancement;
+      String var10011 = var2.getNamespace();
+      String var10012 = this.result.getItemCategory().getRecipeFolderName();
+      var1.accept(new UpgradeRecipeBuilder.Result(var2, var10004, var10005, var10006, var10007, var10008, new ResourceLocation(var10011, "recipes/" + var10012 + "/" + var2.getPath())));
    }
 
    private void ensureValid(ResourceLocation var1) {
       if (this.advancement.getCriteria().isEmpty()) {
          throw new IllegalStateException("No way of obtaining recipe " + var1);
