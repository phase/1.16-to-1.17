--- net/minecraft/util/thread/StrictQueue.java
+++ net/minecraft/util/thread/StrictQueue.java
@@ -15,10 +15,12 @@
 
    boolean push(T var1);
 
    boolean isEmpty();
 
+   int size();
+
    public static final class FixedPriorityQueue implements StrictQueue<StrictQueue.IntRunnable, Runnable> {
       private final List<Queue<Runnable>> queueList;
 
       public FixedPriorityQueue(int var1) {
          this.queueList = (List)IntStream.range(0, var1).mapToObj((var0) -> {
@@ -50,10 +52,21 @@
       }
 
       public boolean isEmpty() {
          return this.queueList.stream().allMatch(Collection::isEmpty);
       }
+
+      public int size() {
+         int var1 = 0;
+
+         Queue var3;
+         for(Iterator var2 = this.queueList.iterator(); var2.hasNext(); var1 += var3.size()) {
+            var3 = (Queue)var2.next();
+         }
+
+         return var1;
+      }
    }
 
    public static final class IntRunnable implements Runnable {
       private final int priority;
       private final Runnable task;
@@ -89,7 +102,11 @@
       }
 
       public boolean isEmpty() {
          return this.queue.isEmpty();
       }
+
+      public int size() {
+         return this.queue.size();
+      }
    }
 }
