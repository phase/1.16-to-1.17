--- net/minecraft/util/DirectoryLock.java
+++ net/minecraft/util/DirectoryLock.java
@@ -3,16 +3,19 @@
 import com.google.common.base.Charsets;
 import java.io.IOException;
 import java.nio.ByteBuffer;
 import java.nio.channels.FileChannel;
 import java.nio.channels.FileLock;
+import java.nio.file.AccessDeniedException;
 import java.nio.file.Files;
 import java.nio.file.LinkOption;
+import java.nio.file.NoSuchFileException;
 import java.nio.file.Path;
 import java.nio.file.StandardOpenOption;
 
 public class DirectoryLock implements AutoCloseable {
+   public static final String LOCK_FILE = "session.lock";
    private final FileChannel lockFile;
    private final FileLock lock;
    private static final ByteBuffer DUMMY;
 
    public static DirectoryLock create(Path var0) throws IOException {
@@ -64,20 +67,72 @@
 
    public boolean isValid() {
       return this.lock.isValid();
    }
 
+   public static boolean isLocked(Path var0) throws IOException {
+      Path var1 = var0.resolve("session.lock");
+
+      try {
+         FileChannel var2 = FileChannel.open(var1, StandardOpenOption.WRITE);
+
+         boolean var4;
+         try {
+            FileLock var3 = var2.tryLock();
+
+            try {
+               var4 = var3 == null;
+            } catch (Throwable var8) {
+               if (var3 != null) {
+                  try {
+                     var3.close();
+                  } catch (Throwable var7) {
+                     var8.addSuppressed(var7);
+                  }
+               }
+
+               throw var8;
+            }
+
+            if (var3 != null) {
+               var3.close();
+            }
+         } catch (Throwable var9) {
+            if (var2 != null) {
+               try {
+                  var2.close();
+               } catch (Throwable var6) {
+                  var9.addSuppressed(var6);
+               }
+            }
+
+            throw var9;
+         }
+
+         if (var2 != null) {
+            var2.close();
+         }
+
+         return var4;
+      } catch (AccessDeniedException var10) {
+         return true;
+      } catch (NoSuchFileException var11) {
+         return false;
+      }
+   }
+
    static {
       byte[] var0 = "\u2603".getBytes(Charsets.UTF_8);
       DUMMY = ByteBuffer.allocateDirect(var0.length);
       DUMMY.put(var0);
       DUMMY.flip();
    }
 
    public static class LockException extends IOException {
       private LockException(Path var1, String var2) {
-         super(var1.toAbsolutePath() + ": " + var2);
+         Path var10001 = var1.toAbsolutePath();
+         super(var10001 + ": " + var2);
       }
 
       public static DirectoryLock.LockException alreadyLocked(Path var0) {
          return new DirectoryLock.LockException(var0, "already locked (possibly by other Minecraft instance?)");
       }
