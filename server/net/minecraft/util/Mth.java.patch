--- net/minecraft/util/Mth.java
+++ net/minecraft/util/Mth.java
@@ -221,23 +221,18 @@
 
    public static int log2(int var0) {
       return ceillog2(var0) - (isPowerOfTwo(var0) ? 0 : 1);
    }
 
-   public static int roundUp(int var0, int var1) {
-      if (var1 == 0) {
-         return 0;
-      } else if (var0 == 0) {
-         return var1;
-      } else {
-         if (var0 < 0) {
-            var1 *= -1;
-         }
+   public static int color(float var0, float var1, float var2) {
+      return color(floor(var0 * 255.0F), floor(var1 * 255.0F), floor(var2 * 255.0F));
+   }
 
-         int var2 = var0 % var1;
-         return var2 == 0 ? var0 : var0 + var1 - var2;
-      }
+   public static int color(int var0, int var1, int var2) {
+      int var3 = (var0 << 8) + var1;
+      var3 = (var3 << 8) + var2;
+      return var3;
    }
 
    public static float frac(float var0) {
       return var0 - (float)floor(var0);
    }
@@ -448,10 +443,30 @@
 
    public static float square(float var0) {
       return var0 * var0;
    }
 
+   public static double clampedMap(double var0, double var2, double var4, double var6, double var8) {
+      return clampedLerp(var6, var8, inverseLerp(var0, var2, var4));
+   }
+
+   public static int roundToward(int var0, int var1) {
+      return (var0 + var1 - 1) / var1 * var1;
+   }
+
+   public static int randomBetweenInclusive(Random var0, int var1, int var2) {
+      return var0.nextInt(var2 - var1 + 1) + var1;
+   }
+
+   public static float randomBetween(Random var0, float var1, float var2) {
+      return var0.nextFloat() * (var2 - var1) + var1;
+   }
+
+   public static float normal(Random var0, float var1, float var2) {
+      return var1 + (float)var0.nextGaussian() * var2;
+   }
+
    static {
       for(int var0 = 0; var0 < 257; ++var0) {
          double var1 = (double)var0 / 256.0D;
          double var3 = Math.asin(var1);
          COS_TAB[var0] = Math.cos(var3);
