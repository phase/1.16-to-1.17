--- net/minecraft/util/datafix/fixes/ItemStackEnchantmentNamesFix.java
+++ net/minecraft/util/datafix/fixes/ItemStackEnchantmentNamesFix.java
@@ -9,10 +9,11 @@
 import com.mojang.datafixers.types.Type;
 import com.mojang.serialization.DataResult;
 import com.mojang.serialization.Dynamic;
 import it.unimi.dsi.fastutil.ints.Int2ObjectMap;
 import it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap;
+import java.util.Objects;
 import java.util.Optional;
 
 public class ItemStackEnchantmentNamesFix extends DataFix {
    private static final Int2ObjectMap<String> MAP = (Int2ObjectMap)DataFixUtils.make(new Int2ObjectOpenHashMap(), (var0) -> {
       var0.put(0, "minecraft:protection");
@@ -69,11 +70,11 @@
       DataResult var10000 = var1.get("ench").asStreamOpt().map((var0) -> {
          return var0.map((var0x) -> {
             return var0x.set("id", var0x.createString((String)MAP.getOrDefault(var0x.get("id").asInt(0), "null")));
          });
       });
-      var1.getClass();
+      Objects.requireNonNull(var1);
       Optional var2 = var10000.map(var1::createList).result();
       if (var2.isPresent()) {
          var1 = var1.remove("ench").set("Enchantments", (Dynamic)var2.get());
       }
 
@@ -81,10 +82,10 @@
          DataResult var10000 = var0.asStreamOpt().map((var0x) -> {
             return var0x.map((var0) -> {
                return var0.set("id", var0.createString((String)MAP.getOrDefault(var0.get("id").asInt(0), "null")));
             });
          });
-         var0.getClass();
+         Objects.requireNonNull(var0);
          return (Dynamic)DataFixUtils.orElse(var10000.map(var0::createList).result(), var0);
       });
    }
 }
