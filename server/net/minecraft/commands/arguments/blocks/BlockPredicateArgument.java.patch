--- net/minecraft/commands/arguments/blocks/BlockPredicateArgument.java
+++ net/minecraft/commands/arguments/blocks/BlockPredicateArgument.java
@@ -15,10 +15,11 @@
 import java.util.Map.Entry;
 import java.util.concurrent.CompletableFuture;
 import java.util.function.Predicate;
 import javax.annotation.Nullable;
 import net.minecraft.commands.CommandSourceStack;
+import net.minecraft.core.Registry;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.nbt.NbtUtils;
 import net.minecraft.network.chat.TranslatableComponent;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.tags.BlockTags;
@@ -51,16 +52,14 @@
             return var4;
          };
       } else {
          ResourceLocation var3 = var2.getTag();
          return (var2x) -> {
-            Tag var3x = var2x.getBlocks().getTag(var3);
-            if (var3x == null) {
-               throw ERROR_UNKNOWN_TAG.create(var3.toString());
-            } else {
-               return new BlockPredicateArgument.TagPredicate(var3x, var2.getVagueProperties(), var2.getNbt());
-            }
+            Tag var3x = var2x.getTagOrThrow(Registry.BLOCK_REGISTRY, var3, (var0) -> {
+               return ERROR_UNKNOWN_TAG.create(var0.toString());
+            });
+            return new BlockPredicateArgument.TagPredicate(var3x, var2.getVagueProperties(), var2.getNbt());
          };
       }
    }
 
    public static Predicate<BlockInWorld> getBlockPredicate(CommandContext<CommandSourceStack> var0, String var1) throws CommandSyntaxException {
