--- net/minecraft/commands/arguments/OperationArgument.java
+++ net/minecraft/commands/arguments/OperationArgument.java
@@ -26,11 +26,11 @@
 
    public static OperationArgument operation() {
       return new OperationArgument();
    }
 
-   public static OperationArgument.Operation getOperation(CommandContext<CommandSourceStack> var0, String var1) throws CommandSyntaxException {
+   public static OperationArgument.Operation getOperation(CommandContext<CommandSourceStack> var0, String var1) {
       return (OperationArgument.Operation)var0.getArgument(var1, OperationArgument.Operation.class);
    }
 
    public OperationArgument.Operation parse(StringReader var1) throws CommandSyntaxException {
       if (!var1.canRead()) {
@@ -147,18 +147,18 @@
          throw ERROR_INVALID_OPERATION.create();
       }
    }
 
    @FunctionalInterface
+   public interface Operation {
+      void apply(Score var1, Score var2) throws CommandSyntaxException;
+   }
+
+   @FunctionalInterface
    interface SimpleOperation extends OperationArgument.Operation {
       int apply(int var1, int var2) throws CommandSyntaxException;
 
       default void apply(Score var1, Score var2) throws CommandSyntaxException {
          var1.setScore(this.apply(var1.getScore(), var2.getScore()));
       }
    }
-
-   @FunctionalInterface
-   public interface Operation {
-      void apply(Score var1, Score var2) throws CommandSyntaxException;
-   }
 }
