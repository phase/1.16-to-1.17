--- net/minecraft/commands/CommandFunction.java
+++ net/minecraft/commands/CommandFunction.java
@@ -3,12 +3,12 @@
 import com.google.common.collect.Lists;
 import com.mojang.brigadier.CommandDispatcher;
 import com.mojang.brigadier.ParseResults;
 import com.mojang.brigadier.StringReader;
 import com.mojang.brigadier.exceptions.CommandSyntaxException;
-import java.util.ArrayDeque;
 import java.util.ArrayList;
+import java.util.Deque;
 import java.util.List;
 import java.util.Optional;
 import javax.annotation.Nullable;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.server.ServerFunctionManager;
@@ -106,11 +106,11 @@
 
       public FunctionEntry(CommandFunction var1) {
          this.function = new CommandFunction.CacheableFunction(var1);
       }
 
-      public void execute(ServerFunctionManager var1, CommandSourceStack var2, ArrayDeque<ServerFunctionManager.QueuedCommand> var3, int var4) {
+      public void execute(ServerFunctionManager var1, CommandSourceStack var2, Deque<ServerFunctionManager.QueuedCommand> var3, int var4) {
          this.function.get(var1).ifPresent((var4x) -> {
             CommandFunction.Entry[] var5 = var4x.getEntries();
             int var6 = var4 - var3.size();
             int var7 = Math.min(var5.length, var6);
 
@@ -131,18 +131,18 @@
 
       public CommandEntry(ParseResults<CommandSourceStack> var1) {
          this.parse = var1;
       }
 
-      public void execute(ServerFunctionManager var1, CommandSourceStack var2, ArrayDeque<ServerFunctionManager.QueuedCommand> var3, int var4) throws CommandSyntaxException {
+      public void execute(ServerFunctionManager var1, CommandSourceStack var2, Deque<ServerFunctionManager.QueuedCommand> var3, int var4) throws CommandSyntaxException {
          var1.getDispatcher().execute(new ParseResults(this.parse.getContext().withSource(var2), this.parse.getReader(), this.parse.getExceptions()));
       }
 
       public String toString() {
          return this.parse.getReader().getString();
       }
    }
 
    public interface Entry {
-      void execute(ServerFunctionManager var1, CommandSourceStack var2, ArrayDeque<ServerFunctionManager.QueuedCommand> var3, int var4) throws CommandSyntaxException;
+      void execute(ServerFunctionManager var1, CommandSourceStack var2, Deque<ServerFunctionManager.QueuedCommand> var3, int var4) throws CommandSyntaxException;
    }
 }
