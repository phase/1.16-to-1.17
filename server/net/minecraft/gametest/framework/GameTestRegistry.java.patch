--- net/minecraft/gametest/framework/GameTestRegistry.java
+++ net/minecraft/gametest/framework/GameTestRegistry.java
@@ -11,38 +11,44 @@
 import java.util.stream.Collectors;
 import javax.annotation.Nullable;
 import net.minecraft.server.level.ServerLevel;
 
 public class GameTestRegistry {
-   private static final Collection<TestFunction> testFunctions = Lists.newArrayList();
-   private static final Set<String> testClassNames = Sets.newHashSet();
-   private static final Map<String, Consumer<ServerLevel>> beforeBatchFunctions = Maps.newHashMap();
-   private static final Collection<TestFunction> lastFailedTests = Sets.newHashSet();
+   private static final Collection<TestFunction> TEST_FUNCTIONS = Lists.newArrayList();
+   private static final Set<String> TEST_CLASS_NAMES = Sets.newHashSet();
+   private static final Map<String, Consumer<ServerLevel>> BEFORE_BATCH_FUNCTIONS = Maps.newHashMap();
+   private static final Map<String, Consumer<ServerLevel>> AFTER_BATCH_FUNCTIONS = Maps.newHashMap();
+   private static final Collection<TestFunction> LAST_FAILED_TESTS = Sets.newHashSet();
 
    public static Collection<TestFunction> getTestFunctionsForClassName(String var0) {
-      return (Collection)testFunctions.stream().filter((var1) -> {
+      return (Collection)TEST_FUNCTIONS.stream().filter((var1) -> {
          return isTestFunctionPartOfClass(var1, var0);
       }).collect(Collectors.toList());
    }
 
    public static Collection<TestFunction> getAllTestFunctions() {
-      return testFunctions;
+      return TEST_FUNCTIONS;
    }
 
    public static Collection<String> getAllTestClassNames() {
-      return testClassNames;
+      return TEST_CLASS_NAMES;
    }
 
    public static boolean isTestClass(String var0) {
-      return testClassNames.contains(var0);
+      return TEST_CLASS_NAMES.contains(var0);
    }
 
    @Nullable
    public static Consumer<ServerLevel> getBeforeBatchFunction(String var0) {
-      return (Consumer)beforeBatchFunctions.get(var0);
+      return (Consumer)BEFORE_BATCH_FUNCTIONS.get(var0);
    }
 
+   @Nullable
+   public static Consumer<ServerLevel> getAfterBatchFunction(String var0) {
+      return (Consumer)AFTER_BATCH_FUNCTIONS.get(var0);
+   }
+
    public static Optional<TestFunction> findTestFunction(String var0) {
       return getAllTestFunctions().stream().filter((var1) -> {
          return var1.getTestName().equalsIgnoreCase(var0);
       }).findFirst();
    }
@@ -59,16 +65,16 @@
    private static boolean isTestFunctionPartOfClass(TestFunction var0, String var1) {
       return var0.getTestName().toLowerCase().startsWith(var1.toLowerCase() + ".");
    }
 
    public static Collection<TestFunction> getLastFailedTests() {
-      return lastFailedTests;
+      return LAST_FAILED_TESTS;
    }
 
    public static void rememberFailedTest(TestFunction var0) {
-      lastFailedTests.add(var0);
+      LAST_FAILED_TESTS.add(var0);
    }
 
    public static void forgetFailedTests() {
-      lastFailedTests.clear();
+      LAST_FAILED_TESTS.clear();
    }
 }
