--- com/mojang/realmsclient/client/RealmsClient.java
+++ com/mojang/realmsclient/client/RealmsClient.java
@@ -13,17 +13,19 @@
 import com.mojang.realmsclient.dto.RealmsServerAddress;
 import com.mojang.realmsclient.dto.RealmsServerList;
 import com.mojang.realmsclient.dto.RealmsServerPlayerLists;
 import com.mojang.realmsclient.dto.RealmsWorldOptions;
 import com.mojang.realmsclient.dto.RealmsWorldResetDto;
+import com.mojang.realmsclient.dto.ServerActivityList;
 import com.mojang.realmsclient.dto.Subscription;
 import com.mojang.realmsclient.dto.UploadInfo;
 import com.mojang.realmsclient.dto.WorldDownload;
 import com.mojang.realmsclient.dto.WorldTemplatePaginatedList;
 import com.mojang.realmsclient.exception.RealmsHttpException;
 import com.mojang.realmsclient.exception.RealmsServiceException;
 import com.mojang.realmsclient.exception.RetryCallException;
+import com.mojang.realmsclient.util.WorldGenerationInfo;
 import java.net.URI;
 import java.net.URISyntaxException;
 import java.util.UUID;
 import javax.annotation.Nullable;
 import net.minecraft.SharedConstants;
@@ -36,10 +38,48 @@
    private static boolean initialized;
    private static final Logger LOGGER;
    private final String sessionId;
    private final String username;
    private final Minecraft minecraft;
+   private static final String WORLDS_RESOURCE_PATH = "worlds";
+   private static final String INVITES_RESOURCE_PATH = "invites";
+   private static final String MCO_RESOURCE_PATH = "mco";
+   private static final String SUBSCRIPTION_RESOURCE = "subscriptions";
+   private static final String ACTIVITIES_RESOURCE = "activities";
+   private static final String OPS_RESOURCE = "ops";
+   private static final String REGIONS_RESOURCE = "regions/ping/stat";
+   private static final String TRIALS_RESOURCE = "trial";
+   private static final String PATH_INITIALIZE = "/$WORLD_ID/initialize";
+   private static final String PATH_GET_ACTIVTIES = "/$WORLD_ID";
+   private static final String PATH_GET_LIVESTATS = "/liveplayerlist";
+   private static final String PATH_GET_SUBSCRIPTION = "/$WORLD_ID";
+   private static final String PATH_OP = "/$WORLD_ID/$PROFILE_UUID";
+   private static final String PATH_PUT_INTO_MINIGAMES_MODE = "/minigames/$MINIGAME_ID/$WORLD_ID";
+   private static final String PATH_AVAILABLE = "/available";
+   private static final String PATH_TEMPLATES = "/templates/$WORLD_TYPE";
+   private static final String PATH_WORLD_JOIN = "/v1/$ID/join/pc";
+   private static final String PATH_WORLD_GET = "/$ID";
+   private static final String PATH_WORLD_INVITES = "/$WORLD_ID";
+   private static final String PATH_WORLD_UNINVITE = "/$WORLD_ID/invite/$UUID";
+   private static final String PATH_PENDING_INVITES_COUNT = "/count/pending";
+   private static final String PATH_PENDING_INVITES = "/pending";
+   private static final String PATH_ACCEPT_INVITE = "/accept/$INVITATION_ID";
+   private static final String PATH_REJECT_INVITE = "/reject/$INVITATION_ID";
+   private static final String PATH_UNINVITE_MYSELF = "/$WORLD_ID";
+   private static final String PATH_WORLD_UPDATE = "/$WORLD_ID";
+   private static final String PATH_SLOT = "/$WORLD_ID/slot/$SLOT_ID";
+   private static final String PATH_WORLD_OPEN = "/$WORLD_ID/open";
+   private static final String PATH_WORLD_CLOSE = "/$WORLD_ID/close";
+   private static final String PATH_WORLD_RESET = "/$WORLD_ID/reset";
+   private static final String PATH_DELETE_WORLD = "/$WORLD_ID";
+   private static final String PATH_WORLD_BACKUPS = "/$WORLD_ID/backups";
+   private static final String PATH_WORLD_DOWNLOAD = "/$WORLD_ID/slot/$SLOT_ID/download";
+   private static final String PATH_WORLD_UPLOAD = "/$WORLD_ID/backups/upload";
+   private static final String PATH_CLIENT_COMPATIBLE = "/client/compatible";
+   private static final String PATH_TOS_AGREED = "/tos/agreed";
+   private static final String PATH_NEWS = "/v1/news";
+   private static final String PATH_STAGE_AVAILABLE = "/stageAvailable";
    private static final GuardedSerializer GSON;
 
    public static RealmsClient create() {
       Minecraft var0 = Minecraft.getInstance();
       String var1 = var0.getUser().getName();
@@ -92,18 +132,24 @@
       String var3 = this.url("worlds" + "/$ID".replace("$ID", String.valueOf(var1)));
       String var4 = this.execute(Request.get(var3));
       return RealmsServer.parse(var4);
    }
 
+   public ServerActivityList getActivity(long var1) throws RealmsServiceException {
+      String var3 = this.url("activities" + "/$WORLD_ID".replace("$WORLD_ID", String.valueOf(var1)));
+      String var4 = this.execute(Request.get(var3));
+      return ServerActivityList.parse(var4);
+   }
+
    public RealmsServerPlayerLists getLiveStats() throws RealmsServiceException {
       String var1 = this.url("activities/liveplayerlist");
       String var2 = this.execute(Request.get(var1));
       return RealmsServerPlayerLists.parse(var2);
    }
 
    public RealmsServerAddress join(long var1) throws RealmsServiceException {
-      String var3 = this.url("worlds" + "/v1/$ID/join/pc".replace("$ID", "" + var1));
+      String var3 = this.url("worlds" + "/v1/$ID/join/pc".replace("$ID", var1.makeConcatWithConstants<invokedynamic>(var1)));
       String var4 = this.execute(Request.get(var3, 5000, 30000));
       return RealmsServerAddress.parse(var4);
    }
 
    public void initializeWorld(long var1, String var3, String var4) throws RealmsServiceException {
@@ -218,15 +264,15 @@
       String var3 = this.url("worlds" + "/$WORLD_ID/close".replace("$WORLD_ID", String.valueOf(var1)));
       String var4 = this.execute(Request.put(var3, ""));
       return Boolean.valueOf(var4);
    }
 
-   public Boolean resetWorldWithSeed(long var1, String var3, Integer var4, boolean var5) throws RealmsServiceException {
-      RealmsWorldResetDto var6 = new RealmsWorldResetDto(var3, -1L, var4, var5);
-      String var7 = this.url("worlds" + "/$WORLD_ID/reset".replace("$WORLD_ID", String.valueOf(var1)));
-      String var8 = this.execute(Request.post(var7, GSON.toJson(var6), 30000, 80000));
-      return Boolean.valueOf(var8);
+   public Boolean resetWorldWithSeed(long var1, WorldGenerationInfo var3) throws RealmsServiceException {
+      RealmsWorldResetDto var4 = new RealmsWorldResetDto(var3.getSeed(), -1L, var3.getLevelType().getDtoIndex(), var3.shouldGenerateStructures());
+      String var5 = this.url("worlds" + "/$WORLD_ID/reset".replace("$WORLD_ID", String.valueOf(var1)));
+      String var6 = this.execute(Request.post(var5, GSON.toJson(var4), 30000, 80000));
+      return Boolean.valueOf(var6);
    }
 
    public Boolean resetWorldWithTemplate(long var1, String var3) throws RealmsServiceException {
       RealmsWorldResetDto var4 = new RealmsWorldResetDto((String)null, Long.valueOf(var3), -1, false);
       String var5 = this.url("worlds" + "/$WORLD_ID/reset".replace("$WORLD_ID", String.valueOf(var1)));
@@ -336,18 +382,18 @@
             String var6 = var1.text();
             if (var2 >= 200 && var2 < 300) {
                return var6;
             } else if (var2 == 401) {
                String var7 = var1.getHeader("WWW-Authenticate");
-               LOGGER.info("Could not authorize you against Realms server: " + var7);
+               LOGGER.info("Could not authorize you against Realms server: {}", var7);
                throw new RealmsServiceException(var2, var7, -1, var7);
             } else if (var6 != null && var6.length() != 0) {
                RealmsError var4 = RealmsError.create(var6);
-               LOGGER.error("Realms http code: " + var2 + " -  error code: " + var4.getErrorCode() + " -  message: " + var4.getErrorMessage() + " - raw body: " + var6);
+               LOGGER.error("Realms http code: {} -  error code: {} -  message: {} - raw body: {}", var2, var4.getErrorCode(), var4.getErrorMessage(), var6);
                throw new RealmsServiceException(var2, var6, var4);
             } else {
-               LOGGER.error("Realms error code: " + var2 + " message: " + var6);
+               LOGGER.error("Realms error code: {} message: {}", var2, var6);
                throw new RealmsServiceException(var2, var6, var2, "");
             }
          } else {
             int var3 = var1.getRetryAfterHeader();
             throw new RetryCallException(var3, var2);
@@ -361,19 +407,10 @@
       currentEnvironment = RealmsClient.Environment.PRODUCTION;
       LOGGER = LogManager.getLogger();
       GSON = new GuardedSerializer();
    }
 
-   public static enum CompatibleVersionResponse {
-      COMPATIBLE,
-      OUTDATED,
-      OTHER;
-
-      private CompatibleVersionResponse() {
-      }
-   }
-
    public static enum Environment {
       PRODUCTION("pc.realms.minecraft.net", "https"),
       STAGE("pc-stage.realms.minecraft.net", "https"),
       LOCAL("localhost:8080", "http");
 
@@ -383,6 +420,15 @@
       private Environment(String var3, String var4) {
          this.baseUrl = var3;
          this.protocol = var4;
       }
    }
+
+   public static enum CompatibleVersionResponse {
+      COMPATIBLE,
+      OUTDATED,
+      OTHER;
+
+      private CompatibleVersionResponse() {
+      }
+   }
 }
