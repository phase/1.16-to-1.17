--- com/mojang/realmsclient/gui/screens/RealmsSubscriptionInfoScreen.java
+++ com/mojang/realmsclient/gui/screens/RealmsSubscriptionInfoScreen.java
@@ -7,23 +7,23 @@
 import com.mojang.realmsclient.exception.RealmsServiceException;
 import java.text.DateFormat;
 import java.util.GregorianCalendar;
 import java.util.TimeZone;
 import net.minecraft.Util;
+import net.minecraft.client.gui.chat.NarratorChatListener;
 import net.minecraft.client.gui.components.Button;
 import net.minecraft.client.gui.screens.Screen;
 import net.minecraft.network.chat.CommonComponents;
 import net.minecraft.network.chat.Component;
 import net.minecraft.network.chat.TextComponent;
 import net.minecraft.network.chat.TranslatableComponent;
-import net.minecraft.realms.NarrationHelper;
 import net.minecraft.realms.RealmsScreen;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
 public class RealmsSubscriptionInfoScreen extends RealmsScreen {
-   private static final Logger LOGGER = LogManager.getLogger();
+   static final Logger LOGGER = LogManager.getLogger();
    private static final Component SUBSCRIPTION_TITLE = new TranslatableComponent("mco.configure.world.subscription.title");
    private static final Component SUBSCRIPTION_START_LABEL = new TranslatableComponent("mco.configure.world.subscription.start");
    private static final Component TIME_LEFT_LABEL = new TranslatableComponent("mco.configure.world.subscription.timeleft");
    private static final Component DAYS_LEFT_LABEL = new TranslatableComponent("mco.configure.world.subscription.recurring.daysleft");
    private static final Component SUBSCRIPTION_EXPIRED_TEXT = new TranslatableComponent("mco.configure.world.subscription.expired");
@@ -31,44 +31,50 @@
    private static final Component MONTH_SUFFIX = new TranslatableComponent("mco.configure.world.subscription.month");
    private static final Component MONTHS_SUFFIX = new TranslatableComponent("mco.configure.world.subscription.months");
    private static final Component DAY_SUFFIX = new TranslatableComponent("mco.configure.world.subscription.day");
    private static final Component DAYS_SUFFIX = new TranslatableComponent("mco.configure.world.subscription.days");
    private final Screen lastScreen;
-   private final RealmsServer serverData;
-   private final Screen mainScreen;
+   final RealmsServer serverData;
+   final Screen mainScreen;
    private Component daysLeft;
    private String startDate;
    private Subscription.SubscriptionType type;
+   private static final String PURCHASE_LINK = "https://aka.ms/ExtendJavaRealms";
 
    public RealmsSubscriptionInfoScreen(Screen var1, RealmsServer var2, Screen var3) {
+      super(NarratorChatListener.NO_TITLE);
       this.lastScreen = var1;
       this.serverData = var2;
       this.mainScreen = var3;
    }
 
    public void init() {
       this.getSubscription(this.serverData.id);
-      NarrationHelper.now(SUBSCRIPTION_TITLE.getString(), SUBSCRIPTION_START_LABEL.getString(), this.startDate, TIME_LEFT_LABEL.getString(), this.daysLeft.getString());
       this.minecraft.keyboardHandler.setSendRepeatsToGui(true);
-      this.addButton(new Button(this.width / 2 - 100, row(6), 200, 20, new TranslatableComponent("mco.configure.world.subscription.extend"), (var1) -> {
-         String var2 = "https://aka.ms/ExtendJavaRealms?subscriptionId=" + this.serverData.remoteSubscriptionId + "&profileId=" + this.minecraft.getUser().getUuid();
+      this.addRenderableWidget(new Button(this.width / 2 - 100, row(6), 200, 20, new TranslatableComponent("mco.configure.world.subscription.extend"), (var1) -> {
+         String var10000 = this.serverData.remoteSubscriptionId;
+         String var2 = "https://aka.ms/ExtendJavaRealms?subscriptionId=" + var10000 + "&profileId=" + this.minecraft.getUser().getUuid();
          this.minecraft.keyboardHandler.setClipboard(var2);
          Util.getPlatform().openUri(var2);
       }));
-      this.addButton(new Button(this.width / 2 - 100, row(12), 200, 20, CommonComponents.GUI_BACK, (var1) -> {
+      this.addRenderableWidget(new Button(this.width / 2 - 100, row(12), 200, 20, CommonComponents.GUI_BACK, (var1) -> {
          this.minecraft.setScreen(this.lastScreen);
       }));
       if (this.serverData.expired) {
-         this.addButton(new Button(this.width / 2 - 100, row(10), 200, 20, new TranslatableComponent("mco.configure.world.delete.button"), (var1) -> {
+         this.addRenderableWidget(new Button(this.width / 2 - 100, row(10), 200, 20, new TranslatableComponent("mco.configure.world.delete.button"), (var1) -> {
             TranslatableComponent var2 = new TranslatableComponent("mco.configure.world.delete.question.line1");
             TranslatableComponent var3 = new TranslatableComponent("mco.configure.world.delete.question.line2");
             this.minecraft.setScreen(new RealmsLongConfirmationScreen(this::deleteRealm, RealmsLongConfirmationScreen.Type.Warning, var2, var3, true));
          }));
       }
 
    }
 
+   public Component getNarrationMessage() {
+      return CommonComponents.joinLines(SUBSCRIPTION_TITLE, SUBSCRIPTION_START_LABEL, new TextComponent(this.startDate), TIME_LEFT_LABEL, this.daysLeft);
+   }
+
    private void deleteRealm(boolean var1) {
       if (var1) {
          (new Thread("Realms-delete-realm") {
             public void run() {
                try {
