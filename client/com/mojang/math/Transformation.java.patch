--- com/mojang/math/Transformation.java
+++ com/mojang/math/Transformation.java
@@ -109,15 +109,30 @@
 
    public Matrix4f getMatrix() {
       return this.matrix.copy();
    }
 
+   public Vector3f getTranslation() {
+      this.ensureDecomposed();
+      return this.translation.copy();
+   }
+
    public Quaternion getLeftRotation() {
       this.ensureDecomposed();
       return this.leftRotation.copy();
    }
 
+   public Vector3f getScale() {
+      this.ensureDecomposed();
+      return this.scale.copy();
+   }
+
+   public Quaternion getRightRotation() {
+      this.ensureDecomposed();
+      return this.rightRotation.copy();
+   }
+
    public boolean equals(Object var1) {
       if (this == var1) {
          return true;
       } else if (var1 != null && this.getClass() == var1.getClass()) {
          Transformation var2 = (Transformation)var1;
@@ -128,6 +143,18 @@
    }
 
    public int hashCode() {
       return Objects.hash(new Object[]{this.matrix});
    }
+
+   public Transformation slerp(Transformation var1, float var2) {
+      Vector3f var3 = this.getTranslation();
+      Quaternion var4 = this.getLeftRotation();
+      Vector3f var5 = this.getScale();
+      Quaternion var6 = this.getRightRotation();
+      var3.lerp(var1.getTranslation(), var2);
+      var4.slerp(var1.getLeftRotation(), var2);
+      var5.lerp(var1.getScale(), var2);
+      var6.slerp(var1.getRightRotation(), var2);
+      return new Transformation(var3, var4, var5, var6);
+   }
 }
