--- com/mojang/math/Matrix4f.java
+++ com/mojang/math/Matrix4f.java
@@ -333,25 +333,47 @@
       var4.m11 = 2.0F / var1;
       float var5 = var3 - var2;
       var4.m22 = -2.0F / var5;
       var4.m33 = 1.0F;
       var4.m03 = -1.0F;
-      var4.m13 = -1.0F;
+      var4.m13 = 1.0F;
       var4.m23 = -(var3 + var2) / var5;
       return var4;
    }
 
+   public static Matrix4f orthographic(float var0, float var1, float var2, float var3, float var4, float var5) {
+      Matrix4f var6 = new Matrix4f();
+      float var7 = var1 - var0;
+      float var8 = var2 - var3;
+      float var9 = var5 - var4;
+      var6.m00 = 2.0F / var7;
+      var6.m11 = 2.0F / var8;
+      var6.m22 = -2.0F / var9;
+      var6.m03 = -(var1 + var0) / var7;
+      var6.m13 = -(var2 + var3) / var8;
+      var6.m23 = -(var5 + var4) / var9;
+      var6.m33 = 1.0F;
+      return var6;
+   }
+
    public void translate(Vector3f var1) {
       this.m03 += var1.x();
       this.m13 += var1.y();
       this.m23 += var1.z();
    }
 
    public Matrix4f copy() {
       return new Matrix4f(this);
    }
 
+   public void multiplyWithTranslation(float var1, float var2, float var3) {
+      this.m03 += this.m00 * var1 + this.m01 * var2 + this.m02 * var3;
+      this.m13 += this.m10 * var1 + this.m11 * var2 + this.m12 * var3;
+      this.m23 += this.m20 * var1 + this.m21 * var2 + this.m22 * var3;
+      this.m33 += this.m30 * var1 + this.m31 * var2 + this.m32 * var3;
+   }
+
    public static Matrix4f createScaleMatrix(float var0, float var1, float var2) {
       Matrix4f var3 = new Matrix4f();
       var3.m00 = var0;
       var3.m11 = var1;
       var3.m22 = var2;
