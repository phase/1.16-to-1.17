--- com/mojang/blaze3d/platform/GLX.java
+++ com/mojang/blaze3d/platform/GLX.java
@@ -5,10 +5,11 @@
 import com.google.common.collect.Maps;
 import com.mojang.blaze3d.systems.RenderSystem;
 import com.mojang.blaze3d.vertex.BufferBuilder;
 import com.mojang.blaze3d.vertex.DefaultVertexFormat;
 import com.mojang.blaze3d.vertex.Tesselator;
+import com.mojang.blaze3d.vertex.VertexFormat;
 import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.Map;
 import java.util.function.Consumer;
 import java.util.function.LongSupplier;
@@ -141,11 +142,11 @@
       GlStateManager._disableTexture();
       GlStateManager._depthMask(false);
       Tesselator var4 = RenderSystem.renderThreadTesselator();
       BufferBuilder var5 = var4.getBuilder();
       GL11.glLineWidth(4.0F);
-      var5.begin(1, DefaultVertexFormat.POSITION_COLOR);
+      var5.begin(VertexFormat.Mode.LINES, DefaultVertexFormat.POSITION_COLOR);
       if (var1) {
          var5.vertex(0.0D, 0.0D, 0.0D).color(0, 0, 0, 255).endVertex();
          var5.vertex((double)var0, 0.0D, 0.0D).color(0, 0, 0, 255).endVertex();
       }
 
@@ -159,11 +160,11 @@
          var5.vertex(0.0D, 0.0D, (double)var0).color(0, 0, 0, 255).endVertex();
       }
 
       var4.end();
       GL11.glLineWidth(2.0F);
-      var5.begin(1, DefaultVertexFormat.POSITION_COLOR);
+      var5.begin(VertexFormat.Mode.LINES, DefaultVertexFormat.POSITION_COLOR);
       if (var1) {
          var5.vertex(0.0D, 0.0D, 0.0D).color(255, 0, 0, 255).endVertex();
          var5.vertex((double)var0, 0.0D, 0.0D).color(255, 0, 0, 255).endVertex();
       }
 
