--- com/mojang/blaze3d/shaders/ProgramManager.java
+++ com/mojang/blaze3d/shaders/ProgramManager.java
@@ -7,16 +7,19 @@
 import org.apache.logging.log4j.Logger;
 
 public class ProgramManager {
    private static final Logger LOGGER = LogManager.getLogger();
 
+   public ProgramManager() {
+   }
+
    public static void glUseProgram(int var0) {
       RenderSystem.assertThread(RenderSystem::isOnRenderThread);
       GlStateManager._glUseProgram(var0);
    }
 
-   public static void releaseProgram(Effect var0) {
+   public static void releaseProgram(Shader var0) {
       RenderSystem.assertThread(RenderSystem::isOnRenderThread);
       var0.getFragmentProgram().close();
       var0.getVertexProgram().close();
       GlStateManager.glDeleteProgram(var0.getId());
    }
@@ -29,14 +32,13 @@
       } else {
          return var0;
       }
    }
 
-   public static void linkProgram(Effect var0) throws IOException {
+   public static void linkShader(Shader var0) {
       RenderSystem.assertThread(RenderSystem::isOnRenderThread);
-      var0.getFragmentProgram().attachToEffect(var0);
-      var0.getVertexProgram().attachToEffect(var0);
+      var0.attachToProgram();
       GlStateManager.glLinkProgram(var0.getId());
       int var1 = GlStateManager.glGetProgrami(var0.getId(), 35714);
       if (var1 == 0) {
          LOGGER.warn("Error encountered when linking program containing VS {} and FS {}. Log output:", var0.getVertexProgram().getName(), var0.getFragmentProgram().getName());
          LOGGER.warn(GlStateManager.glGetProgramInfoLog(var0.getId(), 32768));
