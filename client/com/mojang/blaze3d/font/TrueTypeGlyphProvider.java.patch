--- com/mojang/blaze3d/font/TrueTypeGlyphProvider.java
+++ com/mojang/blaze3d/font/TrueTypeGlyphProvider.java
@@ -69,11 +69,11 @@
          return null;
       } else {
          MemoryStack var2 = MemoryStack.stackPush();
          Throwable var3 = null;
 
-         TrueTypeGlyphProvider.Glyph var13;
+         IntBuffer var11;
          try {
             IntBuffer var4 = var2.mallocInt(1);
             IntBuffer var5 = var2.mallocInt(1);
             IntBuffer var6 = var2.mallocInt(1);
             IntBuffer var7 = var2.mallocInt(1);
@@ -84,20 +84,19 @@
             }
 
             STBTruetype.stbtt_GetGlyphBitmapBoxSubpixel(this.font, var8, this.pointScale, this.pointScale, this.shiftX, this.shiftY, var4, var5, var6, var7);
             int var9 = var6.get(0) - var4.get(0);
             int var10 = var7.get(0) - var5.get(0);
-            IntBuffer var11;
-            if (var9 == 0 || var10 == 0) {
-               var11 = null;
-               return var11;
+            if (var9 != 0 && var10 != 0) {
+               var11 = var2.mallocInt(1);
+               IntBuffer var12 = var2.mallocInt(1);
+               STBTruetype.stbtt_GetGlyphHMetrics(this.font, var8, var11, var12);
+               TrueTypeGlyphProvider.Glyph var13 = new TrueTypeGlyphProvider.Glyph(var4.get(0), var6.get(0), -var5.get(0), -var7.get(0), (float)var11.get(0) * this.pointScale, (float)var12.get(0) * this.pointScale, var8);
+               return var13;
             }
 
-            var11 = var2.mallocInt(1);
-            IntBuffer var12 = var2.mallocInt(1);
-            STBTruetype.stbtt_GetGlyphHMetrics(this.font, var8, var11, var12);
-            var13 = new TrueTypeGlyphProvider.Glyph(var4.get(0), var6.get(0), -var5.get(0), -var7.get(0), (float)var11.get(0) * this.pointScale, (float)var12.get(0) * this.pointScale, var8);
+            var11 = null;
          } catch (Throwable var24) {
             var3 = var24;
             throw var24;
          } finally {
             if (var2 != null) {
@@ -112,11 +111,11 @@
                }
             }
 
          }
 
-         return var13;
+         return var11;
       }
    }
 
    public void close() {
       this.font.free();
