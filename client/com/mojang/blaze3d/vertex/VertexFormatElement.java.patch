--- com/mojang/blaze3d/vertex/VertexFormatElement.java
+++ com/mojang/blaze3d/vertex/VertexFormatElement.java
@@ -1,9 +1,8 @@
 package com.mojang.blaze3d.vertex;
 
 import com.mojang.blaze3d.platform.GlStateManager;
-import java.util.function.IntConsumer;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
 public class VertexFormatElement {
    private static final Logger LOGGER = LogManager.getLogger();
@@ -14,19 +13,17 @@
    private final int byteSize;
 
    public VertexFormatElement(int var1, VertexFormatElement.Type var2, VertexFormatElement.Usage var3, int var4) {
       if (this.supportsUsage(var1, var3)) {
          this.usage = var3;
+         this.type = var2;
+         this.index = var1;
+         this.count = var4;
+         this.byteSize = var2.getSize() * this.count;
       } else {
-         LOGGER.warn("Multiple vertex elements of the same type other than UVs are not supported. Forcing type to UV.");
-         this.usage = VertexFormatElement.Usage.UV;
+         throw new IllegalStateException("Multiple vertex elements of the same type other than UVs are not supported");
       }
-
-      this.type = var2;
-      this.index = var1;
-      this.count = var4;
-      this.byteSize = var2.getSize() * this.count;
    }
 
    private boolean supportsUsage(int var1, VertexFormatElement.Usage var2) {
       return var1 == 0 || var2 == VertexFormatElement.Usage.UV;
    }
@@ -37,10 +34,14 @@
 
    public final VertexFormatElement.Usage getUsage() {
       return this.usage;
    }
 
+   public final int getCount() {
+      return this.count;
+   }
+
    public final int getIndex() {
       return this.index;
    }
 
    public String toString() {
@@ -76,16 +77,16 @@
       var1 = 31 * var1 + this.index;
       var1 = 31 * var1 + this.count;
       return var1;
    }
 
-   public void setupBufferState(long var1, int var3) {
-      this.usage.setupBufferState(this.count, this.type.getGlType(), var3, var1, this.index);
+   public void setupBufferState(int var1, long var2, int var4) {
+      this.usage.setupBufferState(this.count, this.type.getGlType(), var4, var2, this.index, var1);
    }
 
-   public void clearBufferState() {
-      this.usage.clearBufferState(this.index);
+   public void clearBufferState(int var1) {
+      this.usage.clearBufferState(this.index, var1);
    }
 
    public static enum Type {
       FLOAT(4, "Float", 5126),
       UBYTE(1, "Unsigned Byte", 5121),
@@ -117,69 +118,77 @@
          return this.glType;
       }
    }
 
    public static enum Usage {
-      POSITION("Position", (var0, var1, var2, var3, var5) -> {
-         GlStateManager._vertexPointer(var0, var1, var2, var3);
-         GlStateManager._enableClientState(32884);
-      }, (var0) -> {
-         GlStateManager._disableClientState(32884);
+      POSITION("Position", (var0, var1, var2, var3, var5, var6) -> {
+         GlStateManager._enableVertexAttribArray(var6);
+         GlStateManager._vertexAttribPointer(var6, var0, var1, false, var2, var3);
+      }, (var0, var1) -> {
+         GlStateManager._disableVertexAttribArray(var1);
       }),
-      NORMAL("Normal", (var0, var1, var2, var3, var5) -> {
-         GlStateManager._normalPointer(var1, var2, var3);
-         GlStateManager._enableClientState(32885);
-      }, (var0) -> {
-         GlStateManager._disableClientState(32885);
+      NORMAL("Normal", (var0, var1, var2, var3, var5, var6) -> {
+         GlStateManager._enableVertexAttribArray(var6);
+         GlStateManager._vertexAttribPointer(var6, var0, var1, true, var2, var3);
+      }, (var0, var1) -> {
+         GlStateManager._disableVertexAttribArray(var1);
       }),
-      COLOR("Vertex Color", (var0, var1, var2, var3, var5) -> {
-         GlStateManager._colorPointer(var0, var1, var2, var3);
-         GlStateManager._enableClientState(32886);
-      }, (var0) -> {
-         GlStateManager._disableClientState(32886);
-         GlStateManager._clearCurrentColor();
+      COLOR("Vertex Color", (var0, var1, var2, var3, var5, var6) -> {
+         GlStateManager._enableVertexAttribArray(var6);
+         GlStateManager._vertexAttribPointer(var6, var0, var1, true, var2, var3);
+      }, (var0, var1) -> {
+         GlStateManager._disableVertexAttribArray(var1);
       }),
-      UV("UV", (var0, var1, var2, var3, var5) -> {
-         GlStateManager._glClientActiveTexture('\u84c0' + var5);
-         GlStateManager._texCoordPointer(var0, var1, var2, var3);
-         GlStateManager._enableClientState(32888);
-         GlStateManager._glClientActiveTexture(33984);
-      }, (var0) -> {
-         GlStateManager._glClientActiveTexture('\u84c0' + var0);
-         GlStateManager._disableClientState(32888);
-         GlStateManager._glClientActiveTexture(33984);
+      UV("UV", (var0, var1, var2, var3, var5, var6) -> {
+         GlStateManager._enableVertexAttribArray(var6);
+         if (var1 == 5126) {
+            GlStateManager._vertexAttribPointer(var6, var0, var1, false, var2, var3);
+         } else {
+            GlStateManager._vertexAttribIPointer(var6, var0, var1, var2, var3);
+         }
+
+      }, (var0, var1) -> {
+         GlStateManager._disableVertexAttribArray(var1);
       }),
-      PADDING("Padding", (var0, var1, var2, var3, var5) -> {
-      }, (var0) -> {
+      PADDING("Padding", (var0, var1, var2, var3, var5, var6) -> {
+      }, (var0, var1) -> {
       }),
-      GENERIC("Generic", (var0, var1, var2, var3, var5) -> {
-         GlStateManager._enableVertexAttribArray(var5);
-         GlStateManager._vertexAttribPointer(var5, var0, var1, false, var2, var3);
-      }, GlStateManager::_disableVertexAttribArray);
+      GENERIC("Generic", (var0, var1, var2, var3, var5, var6) -> {
+         GlStateManager._enableVertexAttribArray(var6);
+         GlStateManager._vertexAttribPointer(var6, var0, var1, false, var2, var3);
+      }, (var0, var1) -> {
+         GlStateManager._disableVertexAttribArray(var1);
+      });
 
       private final String name;
       private final VertexFormatElement.Usage.SetupState setupState;
-      private final IntConsumer clearState;
+      private final VertexFormatElement.Usage.ClearState clearState;
 
-      private Usage(String var3, VertexFormatElement.Usage.SetupState var4, IntConsumer var5) {
+      private Usage(String var3, VertexFormatElement.Usage.SetupState var4, VertexFormatElement.Usage.ClearState var5) {
          this.name = var3;
          this.setupState = var4;
          this.clearState = var5;
       }
 
-      private void setupBufferState(int var1, int var2, int var3, long var4, int var6) {
-         this.setupState.setupBufferState(var1, var2, var3, var4, var6);
+      private void setupBufferState(int var1, int var2, int var3, long var4, int var6, int var7) {
+         this.setupState.setupBufferState(var1, var2, var3, var4, var6, var7);
       }
 
-      public void clearBufferState(int var1) {
-         this.clearState.accept(var1);
+      public void clearBufferState(int var1, int var2) {
+         this.clearState.clearBufferState(var1, var2);
       }
 
       public String getName() {
          return this.name;
       }
 
+      @FunctionalInterface
+      interface ClearState {
+         void clearBufferState(int var1, int var2);
+      }
+
+      @FunctionalInterface
       interface SetupState {
-         void setupBufferState(int var1, int var2, int var3, long var4, int var6);
+         void setupBufferState(int var1, int var2, int var3, long var4, int var6, int var7);
       }
    }
 }
