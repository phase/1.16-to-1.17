--- net/minecraft/core/MappedRegistry.java
+++ net/minecraft/core/MappedRegistry.java
@@ -123,11 +123,11 @@
    public ResourceLocation getKey(T var1) {
       return (ResourceLocation)this.storage.inverse().get(var1);
    }
 
    public Optional<ResourceKey<T>> getResourceKey(T var1) {
-      return Optional.ofNullable(this.keyStorage.inverse().get(var1));
+      return Optional.ofNullable((ResourceKey)this.keyStorage.inverse().get(var1));
    }
 
    public int getId(@Nullable T var1) {
       return this.toId.getInt(var1);
    }
@@ -165,10 +165,14 @@
 
    public Set<Entry<ResourceKey<T>, T>> entrySet() {
       return Collections.unmodifiableMap(this.keyStorage).entrySet();
    }
 
+   public boolean isEmpty() {
+      return this.storage.isEmpty();
+   }
+
    @Nullable
    public T getRandom(Random var1) {
       if (this.randomCache == null) {
          Set var2 = this.storage.values();
          if (var2.isEmpty()) {
@@ -183,10 +187,14 @@
 
    public boolean containsKey(ResourceLocation var1) {
       return this.storage.containsKey(var1);
    }
 
+   public boolean containsKey(ResourceKey<T> var1) {
+      return this.keyStorage.containsKey(var1);
+   }
+
    public static <T> Codec<MappedRegistry<T>> networkCodec(ResourceKey<? extends Registry<T>> var0, Lifecycle var1, Codec<T> var2) {
       return withNameAndId(var0, var2.fieldOf("element")).codec().listOf().xmap((var2x) -> {
          MappedRegistry var3 = new MappedRegistry(var0, var1);
          Iterator var4 = var2x.iterator();
 
