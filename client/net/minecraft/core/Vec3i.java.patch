--- net/minecraft/core/Vec3i.java
+++ net/minecraft/core/Vec3i.java
@@ -64,20 +64,23 @@
 
    public int getZ() {
       return this.z;
    }
 
-   protected void setX(int var1) {
+   protected Vec3i setX(int var1) {
       this.x = var1;
+      return this;
    }
 
-   protected void setY(int var1) {
+   protected Vec3i setY(int var1) {
       this.y = var1;
+      return this;
    }
 
-   protected void setZ(int var1) {
+   protected Vec3i setZ(int var1) {
       this.z = var1;
+      return this;
    }
 
    public Vec3i above() {
       return this.above(1);
    }
@@ -116,10 +119,14 @@
 
    public double distSqr(Position var1, boolean var2) {
       return this.distSqr(var1.x(), var1.y(), var1.z(), var2);
    }
 
+   public double distSqr(Vec3i var1, boolean var2) {
+      return this.distSqr((double)var1.x, (double)var1.y, (double)var1.z, var2);
+   }
+
    public double distSqr(double var1, double var3, double var5, boolean var7) {
       double var8 = var7 ? 0.5D : 0.0D;
       double var10 = (double)this.getX() + var8 - var1;
       double var12 = (double)this.getY() + var8 - var3;
       double var14 = (double)this.getZ() + var8 - var5;
@@ -145,11 +152,11 @@
       return "" + this.getX() + ", " + this.getY() + ", " + this.getZ();
    }
 
    static {
       CODEC = Codec.INT_STREAM.comapFlatMap((var0) -> {
-         return Util.fixedSize(var0, 3).map((var0x) -> {
+         return Util.fixedSize((IntStream)var0, 3).map((var0x) -> {
             return new Vec3i(var0x[0], var0x[1], var0x[2]);
          });
       }, (var0) -> {
          return IntStream.of(new int[]{var0.getX(), var0.getY(), var0.getZ()});
       });
