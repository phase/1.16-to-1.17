--- net/minecraft/core/Direction.java
+++ net/minecraft/core/Direction.java
@@ -29,10 +29,11 @@
    NORTH(2, 3, 2, "north", Direction.AxisDirection.NEGATIVE, Direction.Axis.Z, new Vec3i(0, 0, -1)),
    SOUTH(3, 2, 0, "south", Direction.AxisDirection.POSITIVE, Direction.Axis.Z, new Vec3i(0, 0, 1)),
    WEST(4, 5, 1, "west", Direction.AxisDirection.NEGATIVE, Direction.Axis.X, new Vec3i(-1, 0, 0)),
    EAST(5, 4, 3, "east", Direction.AxisDirection.POSITIVE, Direction.Axis.X, new Vec3i(1, 0, 0));
 
+   public static final Codec<Direction> CODEC = StringRepresentable.fromEnum(Direction::values, Direction::byName);
    private final int data3d;
    private final int oppositeIndex;
    private final int data2d;
    private final String name;
    private final Direction.Axis axis;
@@ -146,10 +147,22 @@
 
    public Direction.AxisDirection getAxisDirection() {
       return this.axisDirection;
    }
 
+   public static Direction getFacingAxis(Entity var0, Direction.Axis var1) {
+      switch(var1) {
+      case X:
+         return EAST.isFacingAngle(var0.getViewYRot(1.0F)) ? EAST : WEST;
+      case Z:
+         return SOUTH.isFacingAngle(var0.getViewYRot(1.0F)) ? SOUTH : NORTH;
+      case Y:
+      default:
+         return var0.getViewXRot(1.0F) < 0.0F ? UP : DOWN;
+      }
+   }
+
    public Direction getOpposite() {
       return from3DDataValue(this.oppositeIndex);
    }
 
    public Direction getClockWise() {
@@ -230,15 +243,15 @@
 
    public static Direction fromAxisAndDirection(Direction.Axis var0, Direction.AxisDirection var1) {
       switch(var0) {
       case X:
          return var1 == Direction.AxisDirection.POSITIVE ? EAST : WEST;
-      case Y:
-         return var1 == Direction.AxisDirection.POSITIVE ? UP : DOWN;
       case Z:
       default:
          return var1 == Direction.AxisDirection.POSITIVE ? SOUTH : NORTH;
+      case Y:
+         return var1 == Direction.AxisDirection.POSITIVE ? UP : DOWN;
       }
    }
 
    public float toYRot() {
       return (float)((this.data2d & 3) * 90);
