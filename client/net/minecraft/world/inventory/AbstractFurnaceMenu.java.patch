--- net/minecraft/world/inventory/AbstractFurnaceMenu.java
+++ net/minecraft/world/inventory/AbstractFurnaceMenu.java
@@ -1,9 +1,7 @@
 package net.minecraft.world.inventory;
 
-import net.minecraft.recipebook.ServerPlaceSmeltingRecipe;
-import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.world.Container;
 import net.minecraft.world.SimpleContainer;
 import net.minecraft.world.entity.player.Inventory;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.entity.player.StackedContents;
@@ -13,10 +11,19 @@
 import net.minecraft.world.item.crafting.RecipeType;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity;
 
 public abstract class AbstractFurnaceMenu extends RecipeBookMenu<Container> {
+   public static final int INGREDIENT_SLOT = 0;
+   public static final int FUEL_SLOT = 1;
+   public static final int RESULT_SLOT = 2;
+   public static final int SLOT_COUNT = 3;
+   public static final int DATA_COUNT = 4;
+   private static final int INV_SLOT_START = 3;
+   private static final int INV_SLOT_END = 30;
+   private static final int USE_ROW_SLOT_START = 30;
+   private static final int USE_ROW_SLOT_END = 39;
    private final Container container;
    private final ContainerData data;
    protected final Level level;
    private final RecipeType<? extends AbstractCookingRecipe> recipeType;
    private final RecipeBookType recipeBookType;
@@ -58,17 +65,14 @@
       }
 
    }
 
    public void clearCraftingContent() {
-      this.container.clearContent();
+      this.getSlot(0).set(ItemStack.EMPTY);
+      this.getSlot(2).set(ItemStack.EMPTY);
    }
 
-   public void handlePlacement(boolean var1, Recipe<?> var2, ServerPlayer var3) {
-      (new ServerPlaceSmeltingRecipe(this)).recipeClicked(var3, var2, var1);
-   }
-
    public boolean recipeMatches(Recipe<? super Container> var1) {
       return var1.matches(this.container, this.level);
    }
 
    public int getResultSlotIndex() {
@@ -167,6 +171,10 @@
    }
 
    public RecipeBookType getRecipeBookType() {
       return this.recipeBookType;
    }
+
+   public boolean shouldMoveToInventory(int var1) {
+      return var1 != 1;
+   }
 }
