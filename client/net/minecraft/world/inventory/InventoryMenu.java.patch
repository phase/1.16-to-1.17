--- net/minecraft/world/inventory/InventoryMenu.java
+++ net/minecraft/world/inventory/InventoryMenu.java
@@ -11,17 +11,28 @@
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.crafting.Recipe;
 import net.minecraft.world.item.enchantment.EnchantmentHelper;
 
 public class InventoryMenu extends RecipeBookMenu<CraftingContainer> {
+   public static final int CONTAINER_ID = 0;
+   public static final int RESULT_SLOT = 0;
+   public static final int CRAFT_SLOT_START = 1;
+   public static final int CRAFT_SLOT_END = 5;
+   public static final int ARMOR_SLOT_START = 5;
+   public static final int ARMOR_SLOT_END = 9;
+   public static final int INV_SLOT_START = 9;
+   public static final int INV_SLOT_END = 36;
+   public static final int USE_ROW_SLOT_START = 36;
+   public static final int USE_ROW_SLOT_END = 45;
+   public static final int SHIELD_SLOT = 45;
    public static final ResourceLocation BLOCK_ATLAS = new ResourceLocation("textures/atlas/blocks.png");
    public static final ResourceLocation EMPTY_ARMOR_SLOT_HELMET = new ResourceLocation("item/empty_armor_slot_helmet");
    public static final ResourceLocation EMPTY_ARMOR_SLOT_CHESTPLATE = new ResourceLocation("item/empty_armor_slot_chestplate");
    public static final ResourceLocation EMPTY_ARMOR_SLOT_LEGGINGS = new ResourceLocation("item/empty_armor_slot_leggings");
    public static final ResourceLocation EMPTY_ARMOR_SLOT_BOOTS = new ResourceLocation("item/empty_armor_slot_boots");
    public static final ResourceLocation EMPTY_ARMOR_SLOT_SHIELD = new ResourceLocation("item/empty_armor_slot_shield");
-   private static final ResourceLocation[] TEXTURE_EMPTY_SLOTS;
+   static final ResourceLocation[] TEXTURE_EMPTY_SLOTS;
    private static final EquipmentSlot[] SLOT_IDS;
    private final CraftingContainer craftSlots = new CraftingContainer(this, 2, 2);
    private final ResultContainer resultSlots = new ResultContainer();
    public final boolean active;
    private final Player owner;
@@ -77,10 +88,14 @@
             return Pair.of(InventoryMenu.BLOCK_ATLAS, InventoryMenu.EMPTY_ARMOR_SLOT_SHIELD);
          }
       });
    }
 
+   public static boolean isHotbarSlot(int var0) {
+      return var0 >= 36 && var0 < 45 || var0 == 45;
+   }
+
    public void fillCraftSlotsStackedContents(StackedContents var1) {
       this.craftSlots.fillStackedContents(var1);
    }
 
    public void clearCraftingContent() {
@@ -91,18 +106,18 @@
    public boolean recipeMatches(Recipe<? super CraftingContainer> var1) {
       return var1.matches(this.craftSlots, this.owner.level);
    }
 
    public void slotsChanged(Container var1) {
-      CraftingMenu.slotChangedCraftingGrid(this.containerId, this.owner.level, this.owner, this.craftSlots, this.resultSlots);
+      CraftingMenu.slotChangedCraftingGrid(this, this.owner.level, this.owner, this.craftSlots, this.resultSlots);
    }
 
    public void removed(Player var1) {
       super.removed(var1);
       this.resultSlots.clearContent();
       if (!var1.level.isClientSide) {
-         this.clearContainer(var1, var1.level, this.craftSlots);
+         this.clearContainer(var1, this.craftSlots);
       }
    }
 
    public boolean stillValid(Player var1) {
       return true;
@@ -158,13 +173,13 @@
 
          if (var5.getCount() == var3.getCount()) {
             return ItemStack.EMPTY;
          }
 
-         ItemStack var8 = var4.onTake(var1, var5);
+         var4.onTake(var1, var5);
          if (var2 == 0) {
-            var1.drop(var8, false);
+            var1.drop(var5, false);
          }
       }
 
       return var3;
    }
@@ -195,10 +210,14 @@
 
    public RecipeBookType getRecipeBookType() {
       return RecipeBookType.CRAFTING;
    }
 
+   public boolean shouldMoveToInventory(int var1) {
+      return var1 != this.getResultSlotIndex();
+   }
+
    static {
       TEXTURE_EMPTY_SLOTS = new ResourceLocation[]{EMPTY_ARMOR_SLOT_BOOTS, EMPTY_ARMOR_SLOT_LEGGINGS, EMPTY_ARMOR_SLOT_CHESTPLATE, EMPTY_ARMOR_SLOT_HELMET};
       SLOT_IDS = new EquipmentSlot[]{EquipmentSlot.HEAD, EquipmentSlot.CHEST, EquipmentSlot.LEGS, EquipmentSlot.FEET};
    }
 }
