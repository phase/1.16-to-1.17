--- net/minecraft/world/entity/projectile/ThrownEnderpearl.java
+++ net/minecraft/world/entity/projectile/ThrownEnderpearl.java
@@ -24,14 +24,10 @@
 
    public ThrownEnderpearl(Level var1, LivingEntity var2) {
       super(EntityType.ENDER_PEARL, var2, var1);
    }
 
-   public ThrownEnderpearl(Level var1, double var2, double var4, double var6) {
-      super(EntityType.ENDER_PEARL, var2, var4, var6, var1);
-   }
-
    protected Item getDefaultItem() {
       return Items.ENDER_PEARL;
    }
 
    protected void onHitEntity(EntityHitResult var1) {
@@ -39,49 +35,49 @@
       var1.getEntity().hurt(DamageSource.thrown(this, this.getOwner()), 0.0F);
    }
 
    protected void onHit(HitResult var1) {
       super.onHit(var1);
-      Entity var2 = this.getOwner();
 
-      for(int var3 = 0; var3 < 32; ++var3) {
+      for(int var2 = 0; var2 < 32; ++var2) {
          this.level.addParticle(ParticleTypes.PORTAL, this.getX(), this.getY() + this.random.nextDouble() * 2.0D, this.getZ(), this.random.nextGaussian(), 0.0D, this.random.nextGaussian());
       }
 
-      if (!this.level.isClientSide && !this.removed) {
-         if (var2 instanceof ServerPlayer) {
-            ServerPlayer var5 = (ServerPlayer)var2;
-            if (var5.connection.getConnection().isConnected() && var5.level == this.level && !var5.isSleeping()) {
+      if (!this.level.isClientSide && !this.isRemoved()) {
+         Entity var5 = this.getOwner();
+         if (var5 instanceof ServerPlayer) {
+            ServerPlayer var3 = (ServerPlayer)var5;
+            if (var3.connection.getConnection().isConnected() && var3.level == this.level && !var3.isSleeping()) {
                if (this.random.nextFloat() < 0.05F && this.level.getGameRules().getBoolean(GameRules.RULE_DOMOBSPAWNING)) {
                   Endermite var4 = (Endermite)EntityType.ENDERMITE.create(this.level);
-                  var4.setPlayerSpawned(true);
-                  var4.moveTo(var2.getX(), var2.getY(), var2.getZ(), var2.yRot, var2.xRot);
+                  var4.moveTo(var5.getX(), var5.getY(), var5.getZ(), var5.getYRot(), var5.getXRot());
                   this.level.addFreshEntity(var4);
                }
 
-               if (var2.isPassenger()) {
-                  var2.stopRiding();
+               if (var5.isPassenger()) {
+                  var3.dismountTo(this.getX(), this.getY(), this.getZ());
+               } else {
+                  var5.teleportTo(this.getX(), this.getY(), this.getZ());
                }
 
-               var2.teleportTo(this.getX(), this.getY(), this.getZ());
-               var2.fallDistance = 0.0F;
-               var2.hurt(DamageSource.FALL, 5.0F);
+               var5.fallDistance = 0.0F;
+               var5.hurt(DamageSource.FALL, 5.0F);
             }
-         } else if (var2 != null) {
-            var2.teleportTo(this.getX(), this.getY(), this.getZ());
-            var2.fallDistance = 0.0F;
+         } else if (var5 != null) {
+            var5.teleportTo(this.getX(), this.getY(), this.getZ());
+            var5.fallDistance = 0.0F;
          }
 
-         this.remove();
+         this.discard();
       }
 
    }
 
    public void tick() {
       Entity var1 = this.getOwner();
       if (var1 instanceof Player && !var1.isAlive()) {
-         this.remove();
+         this.discard();
       } else {
          super.tick();
       }
 
    }
