--- net/minecraft/world/entity/projectile/AbstractArrow.java
+++ net/minecraft/world/entity/projectile/AbstractArrow.java
@@ -10,12 +10,10 @@
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Registry;
 import net.minecraft.core.particles.ParticleTypes;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.nbt.NbtUtils;
-import net.minecraft.network.protocol.Packet;
-import net.minecraft.network.protocol.game.ClientboundAddEntityPacket;
 import net.minecraft.network.protocol.game.ClientboundGameEventPacket;
 import net.minecraft.network.syncher.EntityDataAccessor;
 import net.minecraft.network.syncher.EntityDataSerializers;
 import net.minecraft.network.syncher.SynchedEntityData;
 import net.minecraft.resources.ResourceLocation;
@@ -34,10 +32,11 @@
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.enchantment.EnchantmentHelper;
 import net.minecraft.world.item.enchantment.Enchantments;
 import net.minecraft.world.level.ClipContext;
 import net.minecraft.world.level.Level;
+import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.BlockHitResult;
 import net.minecraft.world.phys.EntityHitResult;
 import net.minecraft.world.phys.HitResult;
@@ -148,11 +147,11 @@
 
       if (this.shakeTime > 0) {
          --this.shakeTime;
       }
 
-      if (this.isInWaterOrRain()) {
+      if (this.isInWaterOrRain() || var4.is(Blocks.POWDER_SNOW)) {
          this.clearFire();
       }
 
       if (this.inGround && !var1) {
          if (this.lastState != var4 && this.shouldFall()) {
@@ -169,11 +168,11 @@
          Object var27 = this.level.clip(new ClipContext(var26, var6, ClipContext.Block.COLLIDER, ClipContext.Fluid.NONE, this));
          if (((HitResult)var27).getType() != HitResult.Type.MISS) {
             var6 = ((HitResult)var27).getLocation();
          }
 
-         while(!this.removed) {
+         while(!this.isRemoved()) {
             EntityHitResult var28 = this.findHitEntity(var26, var6);
             if (var28 != null) {
                var27 = var28;
             }
 
@@ -263,11 +262,11 @@
    }
 
    protected void tickDespawn() {
       ++this.life;
       if (this.life >= 1200) {
-         this.remove();
+         this.discard();
       }
 
    }
 
    private void resetPiercedEntities() {
@@ -294,11 +293,11 @@
          if (this.piercedAndKilledEntities == null) {
             this.piercedAndKilledEntities = Lists.newArrayListWithCapacity(5);
          }
 
          if (this.piercingIgnoreEntityIds.size() >= this.getPierceLevel() + 1) {
-            this.remove();
+            this.discard();
             return;
          }
 
          this.piercingIgnoreEntityIds.add(var2.getId());
       }
@@ -367,11 +366,11 @@
             }
          }
 
          this.playSound(this.soundEvent, 1.0F, 1.2F / (this.random.nextFloat() * 0.2F + 0.9F));
          if (this.getPierceLevel() <= 0) {
-            this.remove();
+            this.discard();
          }
       } else {
          var2.setRemainingFireTicks(var8);
          this.setDeltaMovement(this.getDeltaMovement().scale(-0.1D));
          this.yRot += 180.0F;
@@ -379,11 +378,11 @@
          if (!this.level.isClientSide && this.getDeltaMovement().lengthSqr() < 1.0E-7D) {
             if (this.pickup == AbstractArrow.Pickup.ALLOWED) {
                this.spawnAtLocation(this.getPickupItem(), 0.1F);
             }
 
-            this.remove();
+            this.discard();
          }
       }
 
    }
 
@@ -470,34 +469,34 @@
    }
 
    public void setOwner(@Nullable Entity var1) {
       super.setOwner(var1);
       if (var1 instanceof Player) {
-         this.pickup = ((Player)var1).abilities.instabuild ? AbstractArrow.Pickup.CREATIVE_ONLY : AbstractArrow.Pickup.ALLOWED;
+         this.pickup = ((Player)var1).getAbilities().instabuild ? AbstractArrow.Pickup.CREATIVE_ONLY : AbstractArrow.Pickup.ALLOWED;
       }
 
    }
 
    public void playerTouch(Player var1) {
       if (!this.level.isClientSide && (this.inGround || this.isNoPhysics()) && this.shakeTime <= 0) {
-         boolean var2 = this.pickup == AbstractArrow.Pickup.ALLOWED || this.pickup == AbstractArrow.Pickup.CREATIVE_ONLY && var1.abilities.instabuild || this.isNoPhysics() && this.getOwner().getUUID() == var1.getUUID();
-         if (this.pickup == AbstractArrow.Pickup.ALLOWED && !var1.inventory.add(this.getPickupItem())) {
+         boolean var2 = this.pickup == AbstractArrow.Pickup.ALLOWED || this.pickup == AbstractArrow.Pickup.CREATIVE_ONLY && var1.getAbilities().instabuild || this.isNoPhysics() && this.getOwner().getUUID() == var1.getUUID();
+         if (this.pickup == AbstractArrow.Pickup.ALLOWED && !var1.getInventory().add(this.getPickupItem())) {
             var2 = false;
          }
 
          if (var2) {
             var1.take(this, 1);
-            this.remove();
+            this.discard();
          }
 
       }
    }
 
    protected abstract ItemStack getPickupItem();
 
-   protected boolean isMovementNoisy() {
-      return false;
+   protected Entity.MovementEmission getMovementEmission() {
+      return Entity.MovementEmission.NONE;
    }
 
    public void setBaseDamage(double var1) {
       this.baseDamage = var1;
    }
@@ -587,15 +586,10 @@
 
    public void setShotFromCrossbow(boolean var1) {
       this.setFlag(4, var1);
    }
 
-   public Packet<?> getAddEntityPacket() {
-      Entity var1 = this.getOwner();
-      return new ClientboundAddEntityPacket(this, var1 == null ? 0 : var1.getId());
-   }
-
    static {
       ID_FLAGS = SynchedEntityData.defineId(AbstractArrow.class, EntityDataSerializers.BYTE);
       PIERCE_LEVEL = SynchedEntityData.defineId(AbstractArrow.class, EntityDataSerializers.BYTE);
    }
 
