--- net/minecraft/world/entity/projectile/AbstractHurtingProjectile.java
+++ net/minecraft/world/entity/projectile/AbstractHurtingProjectile.java
@@ -4,11 +4,10 @@
 import net.minecraft.core.particles.ParticleTypes;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.nbt.ListTag;
 import net.minecraft.network.protocol.Packet;
 import net.minecraft.network.protocol.game.ClientboundAddEntityPacket;
-import net.minecraft.util.Mth;
 import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.level.Level;
@@ -24,13 +23,13 @@
       super(var1, var2);
    }
 
    public AbstractHurtingProjectile(EntityType<? extends AbstractHurtingProjectile> var1, double var2, double var4, double var6, double var8, double var10, double var12, Level var14) {
       this(var1, var14);
-      this.moveTo(var2, var4, var6, this.yRot, this.xRot);
+      this.moveTo(var2, var4, var6, this.getYRot(), this.getXRot());
       this.reapplyPosition();
-      double var15 = (double)Mth.sqrt(var8 * var8 + var10 * var10 + var12 * var12);
+      double var15 = Math.sqrt(var8 * var8 + var10 * var10 + var12 * var12);
       if (var15 != 0.0D) {
          this.xPower = var8 / var15 * 0.1D;
          this.yPower = var10 / var15 * 0.1D;
          this.zPower = var12 / var15 * 0.1D;
       }
@@ -38,11 +37,11 @@
    }
 
    public AbstractHurtingProjectile(EntityType<? extends AbstractHurtingProjectile> var1, LivingEntity var2, double var3, double var5, double var7, Level var9) {
       this(var1, var2.getX(), var2.getY(), var2.getZ(), var3, var5, var7, var9);
       this.setOwner(var2);
-      this.setRot(var2.yRot, var2.xRot);
+      this.setRot(var2.getYRot(), var2.getXRot());
    }
 
    protected void defineSynchedData() {
    }
 
@@ -56,11 +55,11 @@
       return var1 < var3 * var3;
    }
 
    public void tick() {
       Entity var1 = this.getOwner();
-      if (this.level.isClientSide || (var1 == null || !var1.removed) && this.level.hasChunkAt(this.blockPosition())) {
+      if (this.level.isClientSide || (var1 == null || !var1.isRemoved()) && this.level.hasChunkAt(this.blockPosition())) {
          super.tick();
          if (this.shouldBurn()) {
             this.setSecondsOnFire(1);
          }
 
@@ -87,11 +86,11 @@
 
          this.setDeltaMovement(var3.add(this.xPower, this.yPower, this.zPower).scale((double)var10));
          this.level.addParticle(this.getTrailParticle(), var4, var6 + 0.5D, var8, 0.0D, 0.0D, 0.0D);
          this.setPos(var4, var6, var8);
       } else {
-         this.remove();
+         this.discard();
       }
    }
 
    protected boolean canHitEntity(Entity var1) {
       return super.canHitEntity(var1) && !var1.noPhysics;
@@ -160,8 +159,22 @@
    }
 
    public Packet<?> getAddEntityPacket() {
       Entity var1 = this.getOwner();
       int var2 = var1 == null ? 0 : var1.getId();
-      return new ClientboundAddEntityPacket(this.getId(), this.getUUID(), this.getX(), this.getY(), this.getZ(), this.xRot, this.yRot, this.getType(), var2, new Vec3(this.xPower, this.yPower, this.zPower));
+      return new ClientboundAddEntityPacket(this.getId(), this.getUUID(), this.getX(), this.getY(), this.getZ(), this.getXRot(), this.getYRot(), this.getType(), var2, new Vec3(this.xPower, this.yPower, this.zPower));
    }
+
+   public void recreateFromPacket(ClientboundAddEntityPacket var1) {
+      super.recreateFromPacket(var1);
+      double var2 = var1.getXa();
+      double var4 = var1.getYa();
+      double var6 = var1.getZa();
+      double var8 = Math.sqrt(var2 * var2 + var4 * var4 + var6 * var6);
+      if (var8 != 0.0D) {
+         this.xPower = var2 / var8 * 0.1D;
+         this.yPower = var4 / var8 * 0.1D;
+         this.zPower = var6 / var8 * 0.1D;
+      }
+
+   }
 }
