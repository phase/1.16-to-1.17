--- net/minecraft/world/entity/animal/MushroomCow.java
+++ net/minecraft/world/entity/animal/MushroomCow.java
@@ -12,14 +12,15 @@
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.sounds.SoundEvent;
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.sounds.SoundSource;
 import net.minecraft.tags.ItemTags;
+import net.minecraft.tags.Tag;
 import net.minecraft.world.InteractionHand;
 import net.minecraft.world.InteractionResult;
 import net.minecraft.world.effect.MobEffect;
-import net.minecraft.world.entity.AgableMob;
+import net.minecraft.world.entity.AgeableMob;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.LightningBolt;
 import net.minecraft.world.entity.MobSpawnType;
 import net.minecraft.world.entity.Shearable;
@@ -36,10 +37,11 @@
 import net.minecraft.world.level.LevelReader;
 import net.minecraft.world.level.block.Block;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.FlowerBlock;
 import net.minecraft.world.level.block.state.BlockState;
+import net.minecraft.world.level.gameevent.GameEvent;
 import org.apache.commons.lang3.tuple.Pair;
 
 public class MushroomCow extends Cow implements Shearable {
    private static final EntityDataAccessor<String> DATA_TYPE;
    private MobEffect effect;
@@ -73,11 +75,11 @@
       this.entityData.define(DATA_TYPE, MushroomCow.MushroomType.RED.type);
    }
 
    public InteractionResult mobInteract(Player var1, InteractionHand var2) {
       ItemStack var3 = var1.getItemInHand(var2);
-      if (var3.getItem() == Items.BOWL && !this.isBaby()) {
+      if (var3.is(Items.BOWL) && !this.isBaby()) {
          boolean var10 = false;
          ItemStack var9;
          if (this.effect != null) {
             var10 = true;
             var9 = new ItemStack(Items.SUSPICIOUS_STEW);
@@ -97,20 +99,21 @@
             var7 = SoundEvents.MOOSHROOM_MILK;
          }
 
          this.playSound(var7, 1.0F, 1.0F);
          return InteractionResult.sidedSuccess(this.level.isClientSide);
-      } else if (var3.getItem() == Items.SHEARS && this.readyForShearing()) {
+      } else if (var3.is(Items.SHEARS) && this.readyForShearing()) {
          this.shear(SoundSource.PLAYERS);
+         this.gameEvent(GameEvent.SHEAR, var1);
          if (!this.level.isClientSide) {
             var3.hurtAndBreak(1, var1, (var1x) -> {
                var1x.broadcastBreakEvent(var2);
             });
          }
 
          return InteractionResult.sidedSuccess(this.level.isClientSide);
-      } else if (this.getMushroomType() == MushroomCow.MushroomType.BROWN && var3.getItem().is(ItemTags.SMALL_FLOWERS)) {
+      } else if (this.getMushroomType() == MushroomCow.MushroomType.BROWN && var3.is((Tag)ItemTags.SMALL_FLOWERS)) {
          if (this.effect != null) {
             for(int var4 = 0; var4 < 2; ++var4) {
                this.level.addParticle(ParticleTypes.SMOKE, this.getX() + this.random.nextDouble() / 2.0D, this.getY(0.5D), this.getZ() + this.random.nextDouble() / 2.0D, 0.0D, this.random.nextDouble() / 5.0D, 0.0D);
             }
          } else {
@@ -118,11 +121,11 @@
             if (!var8.isPresent()) {
                return InteractionResult.PASS;
             }
 
             Pair var5 = (Pair)var8.get();
-            if (!var1.abilities.instabuild) {
+            if (!var1.getAbilities().instabuild) {
                var3.shrink(1);
             }
 
             for(int var6 = 0; var6 < 4; ++var6) {
                this.level.addParticle(ParticleTypes.EFFECT, this.getX() + this.random.nextDouble() / 2.0D, this.getY(0.5D), this.getZ() + this.random.nextDouble() / 2.0D, 0.0D, this.random.nextDouble() / 5.0D, 0.0D);
@@ -141,11 +144,11 @@
 
    public void shear(SoundSource var1) {
       this.level.playSound((Player)null, (Entity)this, SoundEvents.MOOSHROOM_SHEAR, var1, 1.0F, 1.0F);
       if (!this.level.isClientSide()) {
          ((ServerLevel)this.level).sendParticles(ParticleTypes.EXPLOSION, this.getX(), this.getY(0.5D), this.getZ(), 1, 0.0D, 0.0D, 0.0D, 0.0D);
-         this.remove();
+         this.discard();
          Cow var2 = (Cow)EntityType.COW.create(this.level);
          var2.moveTo(this.getX(), this.getY(), this.getZ(), this.yRot, this.xRot);
          var2.setHealth(this.getHealth());
          var2.yBodyRot = this.yBodyRot;
          if (this.hasCustomName()) {
@@ -213,11 +216,11 @@
 
    public MushroomCow.MushroomType getMushroomType() {
       return MushroomCow.MushroomType.byType((String)this.entityData.get(DATA_TYPE));
    }
 
-   public MushroomCow getBreedOffspring(ServerLevel var1, AgableMob var2) {
+   public MushroomCow getBreedOffspring(ServerLevel var1, AgeableMob var2) {
       MushroomCow var3 = (MushroomCow)EntityType.MOOSHROOM.create(var1);
       var3.setMushroomType(this.getOffspringType((MushroomCow)var2));
       return var3;
    }
 
