--- net/minecraft/world/entity/animal/Ocelot.java
+++ net/minecraft/world/entity/animal/Ocelot.java
@@ -16,11 +16,11 @@
 import net.minecraft.tags.BlockTags;
 import net.minecraft.world.DifficultyInstance;
 import net.minecraft.world.InteractionHand;
 import net.minecraft.world.InteractionResult;
 import net.minecraft.world.damagesource.DamageSource;
-import net.minecraft.world.entity.AgableMob;
+import net.minecraft.world.entity.AgeableMob;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntitySelector;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.Mob;
@@ -49,10 +49,13 @@
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.phys.Vec3;
 
 public class Ocelot extends Animal {
+   public static final double CROUCH_SPEED_MOD = 0.6D;
+   public static final double WALK_SPEED_MOD = 0.8D;
+   public static final double SPRINT_SPEED_MOD = 1.33D;
    private static final Ingredient TEMPT_INGREDIENT;
    private static final EntityDataAccessor<Boolean> DATA_TRUSTING;
    private Ocelot.OcelotAvoidEntityGoal<Player> ocelotAvoidPlayersGoal;
    private Ocelot.OcelotTemptGoal temptGoal;
 
@@ -124,11 +127,11 @@
 
    public static AttributeSupplier.Builder createAttributes() {
       return Mob.createMobAttributes().add(Attributes.MAX_HEALTH, 10.0D).add(Attributes.MOVEMENT_SPEED, 0.30000001192092896D).add(Attributes.ATTACK_DAMAGE, 3.0D);
    }
 
-   public boolean causeFallDamage(float var1, float var2) {
+   public boolean causeFallDamage(float var1, float var2, DamageSource var3) {
       return false;
    }
 
    @Nullable
    protected SoundEvent getAmbientSound() {
@@ -153,18 +156,14 @@
 
    public boolean doHurtTarget(Entity var1) {
       return var1.hurt(DamageSource.mobAttack(this), this.getAttackDamage());
    }
 
-   public boolean hurt(DamageSource var1, float var2) {
-      return this.isInvulnerableTo(var1) ? false : super.hurt(var1, var2);
-   }
-
    public InteractionResult mobInteract(Player var1, InteractionHand var2) {
       ItemStack var3 = var1.getItemInHand(var2);
       if ((this.temptGoal == null || this.temptGoal.isRunning()) && !this.isTrusting() && this.isFood(var3) && var1.distanceToSqr(this) < 9.0D) {
-         this.usePlayerItem(var1, var3);
+         this.usePlayerItem(var1, var2, var3);
          if (!this.level.isClientSide) {
             if (this.random.nextInt(3) == 0) {
                this.setTrusting(true);
                this.spawnTrustingParticles(true);
                this.level.broadcastEntityEvent(this, (byte)41);
@@ -216,11 +215,11 @@
          this.goalSelector.addGoal(4, this.ocelotAvoidPlayersGoal);
       }
 
    }
 
-   public Ocelot getBreedOffspring(ServerLevel var1, AgableMob var2) {
+   public Ocelot getBreedOffspring(ServerLevel var1, AgeableMob var2) {
       return (Ocelot)EntityType.OCELOT.create(var1);
    }
 
    public boolean isFood(ItemStack var1) {
       return TEMPT_INGREDIENT.test(var1);
@@ -247,20 +246,24 @@
    }
 
    @Nullable
    public SpawnGroupData finalizeSpawn(ServerLevelAccessor var1, DifficultyInstance var2, MobSpawnType var3, @Nullable SpawnGroupData var4, @Nullable CompoundTag var5) {
       if (var4 == null) {
-         var4 = new AgableMob.AgableMobGroupData(1.0F);
+         var4 = new AgeableMob.AgeableMobGroupData(1.0F);
       }
 
       return super.finalizeSpawn(var1, var2, var3, (SpawnGroupData)var4, var5);
    }
 
    public Vec3 getLeashOffset() {
       return new Vec3(0.0D, (double)(0.5F * this.getEyeHeight()), (double)(this.getBbWidth() * 0.4F));
    }
 
+   public boolean isSteppingCarefully() {
+      return this.getPose() == Pose.CROUCHING || super.isSteppingCarefully();
+   }
+
    static {
       TEMPT_INGREDIENT = Ingredient.of(Items.COD, Items.SALMON);
       DATA_TRUSTING = SynchedEntityData.defineId(Ocelot.class, EntityDataSerializers.BOOLEAN);
    }
 
