--- net/minecraft/world/entity/animal/TropicalFish.java
+++ net/minecraft/world/entity/animal/TropicalFish.java
@@ -20,14 +20,20 @@
 import net.minecraft.world.item.Items;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.ServerLevelAccessor;
 
 public class TropicalFish extends AbstractSchoolingFish {
+   public static final String BUCKET_VARIANT_TAG = "BucketVariantTag";
    private static final EntityDataAccessor<Integer> DATA_ID_TYPE_VARIANT;
+   public static final int BASE_SMALL = 0;
+   public static final int BASE_LARGE = 1;
+   private static final int BASES = 2;
    private static final ResourceLocation[] BASE_TEXTURE_LOCATIONS;
    private static final ResourceLocation[] PATTERN_A_TEXTURE_LOCATIONS;
    private static final ResourceLocation[] PATTERN_B_TEXTURE_LOCATIONS;
+   private static final int PATTERNS = 6;
+   private static final int COLORS = 15;
    public static final int[] COMMON_VARIANTS;
    private boolean isSchool = true;
 
    private static int calculateVariant(TropicalFish.Pattern var0, DyeColor var1, DyeColor var2) {
       return var0.getBase() & 255 | (var0.getIndex() & 255) << 8 | (var1.getId() & 255) << 16 | (var2.getId() & 255) << 24;
@@ -80,17 +86,22 @@
 
    public int getVariant() {
       return (Integer)this.entityData.get(DATA_ID_TYPE_VARIANT);
    }
 
-   protected void saveToBucketTag(ItemStack var1) {
+   public void saveToBucketTag(ItemStack var1) {
       super.saveToBucketTag(var1);
       CompoundTag var2 = var1.getOrCreateTag();
       var2.putInt("BucketVariantTag", this.getVariant());
    }
 
-   protected ItemStack getBucketItemStack() {
+   public void loadFromBucketTag(CompoundTag var1) {
+      super.loadFromBucketTag(var1);
+      this.setVariant(var1.getInt("BucketVariantTag"));
+   }
+
+   public ItemStack getBucketItemStack() {
       return new ItemStack(Items.TROPICAL_FISH_BUCKET);
    }
 
    protected SoundEvent getAmbientSound() {
       return SoundEvents.TROPICAL_FISH_AMBIENT;
@@ -145,12 +156,11 @@
    }
 
    @Nullable
    public SpawnGroupData finalizeSpawn(ServerLevelAccessor var1, DifficultyInstance var2, MobSpawnType var3, @Nullable SpawnGroupData var4, @Nullable CompoundTag var5) {
       Object var11 = super.finalizeSpawn(var1, var2, var3, var4, var5);
-      if (var5 != null && var5.contains("BucketVariantTag", 3)) {
-         this.setVariant(var5.getInt("BucketVariantTag"));
+      if (var3 == MobSpawnType.BUCKET) {
          return (SpawnGroupData)var11;
       } else {
          int var6;
          int var7;
          int var8;
