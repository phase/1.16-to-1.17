--- net/minecraft/world/entity/animal/horse/TraderLlama.java
+++ net/minecraft/world/entity/animal/horse/TraderLlama.java
@@ -2,11 +2,11 @@
 
 import java.util.EnumSet;
 import javax.annotation.Nullable;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.world.DifficultyInstance;
-import net.minecraft.world.entity.AgableMob;
+import net.minecraft.world.entity.AgeableMob;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.MobSpawnType;
 import net.minecraft.world.entity.SpawnGroupData;
@@ -51,10 +51,14 @@
       super.registerGoals();
       this.goalSelector.addGoal(1, new PanicGoal(this, 2.0D));
       this.targetSelector.addGoal(1, new TraderLlama.TraderLlamaDefendWanderingTraderGoal(this));
    }
 
+   public void setDespawnDelay(int var1) {
+      this.despawnDelay = var1;
+   }
+
    protected void doPlayerRide(Player var1) {
       Entity var2 = this.getLeashHolder();
       if (!(var2 instanceof WanderingTrader)) {
          super.doPlayerRide(var1);
       }
@@ -71,18 +75,18 @@
    private void maybeDespawn() {
       if (this.canDespawn()) {
          this.despawnDelay = this.isLeashedToWanderingTrader() ? ((WanderingTrader)this.getLeashHolder()).getDespawnDelay() - 1 : this.despawnDelay - 1;
          if (this.despawnDelay <= 0) {
             this.dropLeash(true, false);
-            this.remove();
+            this.discard();
          }
 
       }
    }
 
    private boolean canDespawn() {
-      return !this.isTamed() && !this.isLeashedToSomethingOtherThanTheWanderingTrader() && !this.hasOnePlayerPassenger();
+      return !this.isTamed() && !this.isLeashedToSomethingOtherThanTheWanderingTrader() && !this.hasExactlyOnePlayerPassenger();
    }
 
    private boolean isLeashedToWanderingTrader() {
       return this.getLeashHolder() instanceof WanderingTrader;
    }
@@ -96,24 +100,24 @@
       if (var3 == MobSpawnType.EVENT) {
          this.setAge(0);
       }
 
       if (var4 == null) {
-         var4 = new AgableMob.AgableMobGroupData(false);
+         var4 = new AgeableMob.AgeableMobGroupData(false);
       }
 
       return super.finalizeSpawn(var1, var2, var3, (SpawnGroupData)var4, var5);
    }
 
-   public class TraderLlamaDefendWanderingTraderGoal extends TargetGoal {
+   public static class TraderLlamaDefendWanderingTraderGoal extends TargetGoal {
       private final Llama llama;
       private LivingEntity ownerLastHurtBy;
       private int timestamp;
 
-      public TraderLlamaDefendWanderingTraderGoal(Llama var2) {
-         super(var2, false);
-         this.llama = var2;
+      public TraderLlamaDefendWanderingTraderGoal(Llama var1) {
+         super(var1, false);
+         this.llama = var1;
          this.setFlags(EnumSet.of(Goal.Flag.TARGET));
       }
 
       public boolean canUse() {
          if (!this.llama.isLeashed()) {
