--- net/minecraft/world/entity/animal/Cat.java
+++ net/minecraft/world/entity/animal/Cat.java
@@ -16,17 +16,16 @@
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.sounds.SoundEvent;
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.tags.BlockTags;
-import net.minecraft.tags.Tag;
 import net.minecraft.util.Mth;
 import net.minecraft.world.DifficultyInstance;
 import net.minecraft.world.InteractionHand;
 import net.minecraft.world.InteractionResult;
 import net.minecraft.world.damagesource.DamageSource;
-import net.minecraft.world.entity.AgableMob;
+import net.minecraft.world.entity.AgeableMob;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityDimensions;
 import net.minecraft.world.entity.EntitySelector;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.LivingEntity;
@@ -296,11 +295,11 @@
 
    public float getRelaxStateOneAmount(float var1) {
       return Mth.lerp(var1, this.relaxStateOneAmountO, this.relaxStateOneAmount);
    }
 
-   public Cat getBreedOffspring(ServerLevel var1, AgableMob var2) {
+   public Cat getBreedOffspring(ServerLevel var1, AgeableMob var2) {
       Cat var3 = (Cat)EntityType.CAT.create(var1);
       if (var2 instanceof Cat) {
          if (this.random.nextBoolean()) {
             var3.setCatType(this.getCatType());
          } else {
@@ -379,11 +378,11 @@
                }
 
                DyeColor var5 = ((DyeItem)var4).getDyeColor();
                if (var5 != this.getCollarColor()) {
                   this.setCollarColor(var5);
-                  if (!var1.abilities.instabuild) {
+                  if (!var1.getAbilities().instabuild) {
                      var3.shrink(1);
                   }
 
                   this.setPersistenceRequired();
                   return InteractionResult.CONSUME;
@@ -484,11 +483,11 @@
                   return false;
                }
 
                BlockPos var2 = this.ownerPlayer.blockPosition();
                BlockState var3 = this.cat.level.getBlockState(var2);
-               if (var3.getBlock().is((Tag)BlockTags.BEDS)) {
+               if (var3.is(BlockTags.BEDS)) {
                   this.goalPos = (BlockPos)var3.getOptionalValue(BedBlock.FACING).map((var1x) -> {
                      return var2.relative(var1x.getOpposite());
                   }).orElseGet(() -> {
                      return new BlockPos(var2);
                   });
