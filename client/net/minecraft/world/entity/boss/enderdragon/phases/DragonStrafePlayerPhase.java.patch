--- net/minecraft/world/entity/boss/enderdragon/phases/DragonStrafePlayerPhase.java
+++ net/minecraft/world/entity/boss/enderdragon/phases/DragonStrafePlayerPhase.java
@@ -13,10 +13,11 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
 public class DragonStrafePlayerPhase extends AbstractDragonPhaseInstance {
    private static final Logger LOGGER = LogManager.getLogger();
+   private static final int FIREBALL_CHARGE_AMOUNT = 5;
    private int fireballCharge;
    private Path currentPath;
    private Vec3 targetLocation;
    private LivingEntity attackTarget;
    private boolean holdingPatternClockwise;
@@ -36,11 +37,11 @@
          if (this.currentPath != null && this.currentPath.isDone()) {
             var1 = this.attackTarget.getX();
             var3 = this.attackTarget.getZ();
             double var5 = var1 - this.dragon.getX();
             double var7 = var3 - this.dragon.getZ();
-            var9 = (double)Mth.sqrt(var5 * var5 + var7 * var7);
+            var9 = Math.sqrt(var5 * var5 + var7 * var7);
             double var11 = Math.min(0.4000000059604645D + var9 / 80.0D - 1.0D, 10.0D);
             this.targetLocation = new Vec3(var1, this.attackTarget.getY() + var11, var3);
          }
 
          var1 = this.targetLocation == null ? 0.0D : this.targetLocation.distanceToSqr(this.dragon.getX(), this.dragon.getY(), this.dragon.getZ());
@@ -48,14 +49,14 @@
             this.findNewTarget();
          }
 
          var3 = 64.0D;
          if (this.attackTarget.distanceToSqr(this.dragon) < 4096.0D) {
-            if (this.dragon.canSee(this.attackTarget)) {
+            if (this.dragon.hasLineOfSight(this.attackTarget)) {
                ++this.fireballCharge;
                Vec3 var25 = (new Vec3(this.attackTarget.getX() - this.dragon.getX(), 0.0D, this.attackTarget.getZ() - this.dragon.getZ())).normalize();
-               Vec3 var6 = (new Vec3((double)Mth.sin(this.dragon.yRot * 0.017453292F), 0.0D, (double)(-Mth.cos(this.dragon.yRot * 0.017453292F)))).normalize();
+               Vec3 var6 = (new Vec3((double)Mth.sin(this.dragon.getYRot() * 0.017453292F), 0.0D, (double)(-Mth.cos(this.dragon.getYRot() * 0.017453292F)))).normalize();
                float var26 = (float)var6.dot(var25);
                float var8 = (float)(Math.acos((double)var26) * 57.2957763671875D);
                var8 += 0.5F;
                if (this.fireballCharge >= 5 && var8 >= 0.0F && var8 < 10.0F) {
                   var9 = 1.0D;
@@ -153,15 +154,15 @@
 
    public void setTarget(LivingEntity var1) {
       this.attackTarget = var1;
       int var2 = this.dragon.findClosestNode();
       int var3 = this.dragon.findClosestNode(this.attackTarget.getX(), this.attackTarget.getY(), this.attackTarget.getZ());
-      int var4 = Mth.floor(this.attackTarget.getX());
-      int var5 = Mth.floor(this.attackTarget.getZ());
+      int var4 = this.attackTarget.getBlockX();
+      int var5 = this.attackTarget.getBlockZ();
       double var6 = (double)var4 - this.dragon.getX();
       double var8 = (double)var5 - this.dragon.getZ();
-      double var10 = (double)Mth.sqrt(var6 * var6 + var8 * var8);
+      double var10 = Math.sqrt(var6 * var6 + var8 * var8);
       double var12 = Math.min(0.4000000059604645D + var10 / 80.0D - 1.0D, 10.0D);
       int var14 = Mth.floor(this.attackTarget.getY() + var12);
       Node var15 = new Node(var4, var14, var5);
       this.currentPath = this.dragon.findPath(var2, var3, var15);
       if (this.currentPath != null) {
