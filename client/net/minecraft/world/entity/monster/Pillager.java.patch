--- net/minecraft/world/entity/monster/Pillager.java
+++ net/minecraft/world/entity/monster/Pillager.java
@@ -21,10 +21,11 @@
 import net.minecraft.world.entity.EquipmentSlot;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.Mob;
 import net.minecraft.world.entity.MobSpawnType;
 import net.minecraft.world.entity.MobType;
+import net.minecraft.world.entity.SlotAccess;
 import net.minecraft.world.entity.SpawnGroupData;
 import net.minecraft.world.entity.ai.attributes.AttributeSupplier;
 import net.minecraft.world.entity.ai.attributes.Attributes;
 import net.minecraft.world.entity.ai.goal.FloatGoal;
 import net.minecraft.world.entity.ai.goal.LookAtPlayerGoal;
@@ -38,11 +39,10 @@
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.entity.projectile.Projectile;
 import net.minecraft.world.entity.raid.Raid;
 import net.minecraft.world.entity.raid.Raider;
 import net.minecraft.world.item.BannerItem;
-import net.minecraft.world.item.Item;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.Items;
 import net.minecraft.world.item.ProjectileWeaponItem;
 import net.minecraft.world.item.enchantment.EnchantmentHelper;
 import net.minecraft.world.item.enchantment.Enchantments;
@@ -159,11 +159,11 @@
 
    protected void enchantSpawnedWeapon(float var1) {
       super.enchantSpawnedWeapon(var1);
       if (this.random.nextInt(300) == 0) {
          ItemStack var2 = this.getMainHandItem();
-         if (var2.getItem() == Items.CROSSBOW) {
+         if (var2.is(Items.CROSSBOW)) {
             Map var3 = EnchantmentHelper.getEnchantments(var2);
             var3.putIfAbsent(Enchantments.PIERCING, 1);
             EnchantmentHelper.setEnchantments(var3, var2);
             this.setItemSlot(EquipmentSlot.MAINHAND, var2);
          }
@@ -203,41 +203,29 @@
 
    protected void pickUpItem(ItemEntity var1) {
       ItemStack var2 = var1.getItem();
       if (var2.getItem() instanceof BannerItem) {
          super.pickUpItem(var1);
-      } else {
-         Item var3 = var2.getItem();
-         if (this.wantsItem(var3)) {
-            this.onItemPickup(var1);
-            ItemStack var4 = this.inventory.addItem(var2);
-            if (var4.isEmpty()) {
-               var1.remove();
-            } else {
-               var2.setCount(var4.getCount());
-            }
+      } else if (this.wantsItem(var2)) {
+         this.onItemPickup(var1);
+         ItemStack var3 = this.inventory.addItem(var2);
+         if (var3.isEmpty()) {
+            var1.discard();
+         } else {
+            var2.setCount(var3.getCount());
          }
       }
 
    }
 
-   private boolean wantsItem(Item var1) {
-      return this.hasActiveRaid() && var1 == Items.WHITE_BANNER;
+   private boolean wantsItem(ItemStack var1) {
+      return this.hasActiveRaid() && var1.is(Items.WHITE_BANNER);
    }
 
-   public boolean setSlot(int var1, ItemStack var2) {
-      if (super.setSlot(var1, var2)) {
-         return true;
-      } else {
-         int var3 = var1 - 300;
-         if (var3 >= 0 && var3 < this.inventory.getContainerSize()) {
-            this.inventory.setItem(var3, var2);
-            return true;
-         } else {
-            return false;
-         }
-      }
+   public SlotAccess getSlot(int var1) {
+      int var2 = var1 - 300;
+      return var2 >= 0 && var2 < this.inventory.getContainerSize() ? SlotAccess.forContainer(this.inventory, var2) : super.getSlot(var1);
    }
 
    public void applyRaidBuffs(int var1, boolean var2) {
       Raid var3 = this.getCurrentRaid();
       boolean var4 = this.random.nextFloat() <= var3.getEnchantOdds();
