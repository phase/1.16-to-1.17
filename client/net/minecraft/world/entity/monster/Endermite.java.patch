--- net/minecraft/world/entity/monster/Endermite.java
+++ net/minecraft/world/entity/monster/Endermite.java
@@ -5,10 +5,11 @@
 import net.minecraft.core.particles.ParticleTypes;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.sounds.SoundEvent;
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.world.damagesource.DamageSource;
+import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityDimensions;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.MobSpawnType;
 import net.minecraft.world.entity.MobType;
 import net.minecraft.world.entity.Pose;
@@ -25,12 +26,12 @@
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.block.state.BlockState;
 
 public class Endermite extends Monster {
+   private static final int MAX_LIFE = 2400;
    private int life;
-   private boolean playerSpawned;
 
    public Endermite(EntityType<? extends Endermite> var1, Level var2) {
       super(var1, var2);
       this.xpReward = 3;
    }
@@ -51,12 +52,12 @@
 
    public static AttributeSupplier.Builder createAttributes() {
       return Monster.createMonsterAttributes().add(Attributes.MAX_HEALTH, 8.0D).add(Attributes.MOVEMENT_SPEED, 0.25D).add(Attributes.ATTACK_DAMAGE, 2.0D);
    }
 
-   protected boolean isMovementNoisy() {
-      return false;
+   protected Entity.MovementEmission getMovementEmission() {
+      return Entity.MovementEmission.EVENTS;
    }
 
    protected SoundEvent getAmbientSound() {
       return SoundEvents.ENDERMITE_AMBIENT;
    }
@@ -74,17 +75,15 @@
    }
 
    public void readAdditionalSaveData(CompoundTag var1) {
       super.readAdditionalSaveData(var1);
       this.life = var1.getInt("Lifetime");
-      this.playerSpawned = var1.getBoolean("PlayerSpawned");
    }
 
    public void addAdditionalSaveData(CompoundTag var1) {
       super.addAdditionalSaveData(var1);
       var1.putInt("Lifetime", this.life);
-      var1.putBoolean("PlayerSpawned", this.playerSpawned);
    }
 
    public void tick() {
       this.yBodyRot = this.yRot;
       super.tick();
@@ -97,18 +96,10 @@
 
    public double getMyRidingOffset() {
       return 0.1D;
    }
 
-   public boolean isPlayerSpawned() {
-      return this.playerSpawned;
-   }
-
-   public void setPlayerSpawned(boolean var1) {
-      this.playerSpawned = var1;
-   }
-
    public void aiStep() {
       super.aiStep();
       if (this.level.isClientSide) {
          for(int var1 = 0; var1 < 2; ++var1) {
             this.level.addParticle(ParticleTypes.PORTAL, this.getRandomX(0.5D), this.getRandomY(), this.getRandomZ(0.5D), (this.random.nextDouble() - 0.5D) * 2.0D, -this.random.nextDouble(), (this.random.nextDouble() - 0.5D) * 2.0D);
@@ -117,11 +108,11 @@
          if (!this.isPersistenceRequired()) {
             ++this.life;
          }
 
          if (this.life >= 2400) {
-            this.remove();
+            this.discard();
          }
       }
 
    }
 
