--- net/minecraft/world/entity/monster/Zoglin.java
+++ net/minecraft/world/entity/monster/Zoglin.java
@@ -13,11 +13,11 @@
 import net.minecraft.network.syncher.EntityDataSerializers;
 import net.minecraft.network.syncher.SynchedEntityData;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.sounds.SoundEvent;
 import net.minecraft.sounds.SoundEvents;
-import net.minecraft.util.IntRange;
+import net.minecraft.util.valueproviders.UniformInt;
 import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntitySelector;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.LivingEntity;
@@ -48,10 +48,20 @@
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.state.BlockState;
 
 public class Zoglin extends Monster implements Enemy, HoglinBase {
    private static final EntityDataAccessor<Boolean> DATA_BABY_ID;
+   private static final int MAX_HEALTH = 40;
+   private static final int ATTACK_KNOCKBACK = 1;
+   private static final float KNOCKBACK_RESISTANCE = 0.6F;
+   private static final int ATTACK_DAMAGE = 6;
+   private static final float BABY_ATTACK_DAMAGE = 0.5F;
+   private static final int ATTACK_INTERVAL = 40;
+   private static final int BABY_ATTACK_INTERVAL = 15;
+   private static final int ATTACK_DURATION = 200;
+   private static final float MOVEMENT_SPEED_WHEN_FIGHTING = 0.3F;
+   private static final float SPEED_MULTIPLIER_WHEN_IDLING = 0.4F;
    private int attackAnimationRemainingTicks;
    protected static final ImmutableList<? extends SensorType<? extends Sensor<? super Zoglin>>> SENSOR_TYPES;
    protected static final ImmutableList<? extends MemoryModuleType<?>> MEMORY_TYPES;
 
    public Zoglin(EntityType<? extends Zoglin> var1, Level var2) {
@@ -77,11 +87,11 @@
    private static void initCoreActivity(Brain<Zoglin> var0) {
       var0.addActivity(Activity.CORE, 0, ImmutableList.of(new LookAtTargetSink(45, 90), new MoveToTargetSink()));
    }
 
    private static void initIdleActivity(Brain<Zoglin> var0) {
-      var0.addActivity(Activity.IDLE, 10, ImmutableList.of(new StartAttacking(Zoglin::findNearestValidAttackTarget), new RunSometimes(new SetEntityLookTarget(8.0F), IntRange.of(30, 60)), new RunOne(ImmutableList.of(Pair.of(new RandomStroll(0.4F), 2), Pair.of(new SetWalkTargetFromLookTarget(0.4F, 3), 2), Pair.of(new DoNothing(30, 60), 1)))));
+      var0.addActivity(Activity.IDLE, 10, ImmutableList.of(new StartAttacking(Zoglin::findNearestValidAttackTarget), new RunSometimes(new SetEntityLookTarget(8.0F), UniformInt.of(30, 60)), new RunOne(ImmutableList.of(Pair.of(new RandomStroll(0.4F), 2), Pair.of(new SetWalkTargetFromLookTarget(0.4F, 3), 2), Pair.of(new DoNothing(30, 60), 1)))));
    }
 
    private static void initFightActivity(Brain<Zoglin> var0) {
       var0.addActivityAndRemoveMemoryWhenStopped(Activity.FIGHT, 10, ImmutableList.of(new SetWalkTargetFromAttackTargetIfTargetOutOfReach(1.0F), new RunIf(Zoglin::isAdult, new MeleeAttack(40)), new RunIf(Zoglin::isBaby, new MeleeAttack(15)), new StopAttackingIfTargetInvalid()), MemoryModuleType.ATTACK_TARGET);
    }
