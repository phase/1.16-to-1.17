--- net/minecraft/world/entity/monster/AbstractSkeleton.java
+++ net/minecraft/world/entity/monster/AbstractSkeleton.java
@@ -5,11 +5,10 @@
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.sounds.SoundEvent;
 import net.minecraft.sounds.SoundEvents;
-import net.minecraft.util.Mth;
 import net.minecraft.world.Difficulty;
 import net.minecraft.world.DifficultyInstance;
 import net.minecraft.world.entity.EntityDimensions;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.EquipmentSlot;
@@ -152,11 +151,11 @@
    public void reassessWeaponGoal() {
       if (this.level != null && !this.level.isClientSide) {
          this.goalSelector.removeGoal(this.meleeGoal);
          this.goalSelector.removeGoal(this.bowGoal);
          ItemStack var1 = this.getItemInHand(ProjectileUtil.getWeaponHoldingHand(this, Items.BOW));
-         if (var1.getItem() == Items.BOW) {
+         if (var1.is(Items.BOW)) {
             byte var2 = 20;
             if (this.level.getDifficulty() != Difficulty.HARD) {
                var2 = 40;
             }
 
@@ -173,11 +172,11 @@
       ItemStack var3 = this.getProjectile(this.getItemInHand(ProjectileUtil.getWeaponHoldingHand(this, Items.BOW)));
       AbstractArrow var4 = this.getArrow(var3, var2);
       double var5 = var1.getX() - this.getX();
       double var7 = var1.getY(0.3333333333333333D) - var4.getY();
       double var9 = var1.getZ() - this.getZ();
-      double var11 = (double)Mth.sqrt(var5 * var5 + var9 * var9);
+      double var11 = Math.sqrt(var5 * var5 + var9 * var9);
       var4.shoot(var5, var7 + var11 * 0.20000000298023224D, var9, 1.6F, (float)(14 - this.level.getDifficulty().getId() * 4));
       this.playSound(SoundEvents.SKELETON_SHOOT, 1.0F, 1.0F / (this.getRandom().nextFloat() * 0.4F + 0.8F));
       this.level.addFreshEntity(var4);
    }
 
@@ -207,6 +206,10 @@
    }
 
    public double getMyRidingOffset() {
       return -0.6D;
    }
+
+   public boolean isShaking() {
+      return this.isFullyFrozen();
+   }
 }
