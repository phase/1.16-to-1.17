--- net/minecraft/world/entity/ai/control/LookControl.java
+++ net/minecraft/world/entity/ai/control/LookControl.java
@@ -4,11 +4,11 @@
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.Mob;
 import net.minecraft.world.phys.Vec3;
 
-public class LookControl {
+public class LookControl implements Control {
    protected final Mob mob;
    protected float yMaxRotSpeed;
    protected float xMaxRotAngle;
    protected boolean hasWanted;
    protected double wantedX;
@@ -21,10 +21,14 @@
 
    public void setLookAt(Vec3 var1) {
       this.setLookAt(var1.x, var1.y, var1.z);
    }
 
+   public void setLookAt(Entity var1) {
+      this.setLookAt(var1.getX(), getWantedY(var1), var1.getZ());
+   }
+
    public void setLookAt(Entity var1, float var2, float var3) {
       this.setLookAt(var1.getX(), getWantedY(var1), var1.getZ(), var2, var3);
    }
 
    public void setLookAt(double var1, double var3, double var5) {
@@ -40,21 +44,25 @@
       this.hasWanted = true;
    }
 
    public void tick() {
       if (this.resetXRotOnTick()) {
-         this.mob.xRot = 0.0F;
+         this.mob.setXRot(0.0F);
       }
 
       if (this.hasWanted) {
          this.hasWanted = false;
          this.mob.yHeadRot = this.rotateTowards(this.mob.yHeadRot, this.getYRotD(), this.yMaxRotSpeed);
-         this.mob.xRot = this.rotateTowards(this.mob.xRot, this.getXRotD(), this.xMaxRotAngle);
+         this.mob.setXRot(this.rotateTowards(this.mob.getXRot(), this.getXRotD(), this.xMaxRotAngle));
       } else {
          this.mob.yHeadRot = this.rotateTowards(this.mob.yHeadRot, this.mob.yBodyRot, 10.0F);
       }
 
+      this.clampHeadRotationToBody();
+   }
+
+   protected void clampHeadRotationToBody() {
       if (!this.mob.getNavigation().isDone()) {
          this.mob.yHeadRot = Mth.rotateIfNecessary(this.mob.yHeadRot, this.mob.yBodyRot, (float)this.mob.getMaxHeadYRot());
       }
 
    }
@@ -81,11 +89,11 @@
 
    protected float getXRotD() {
       double var1 = this.wantedX - this.mob.getX();
       double var3 = this.wantedY - this.mob.getEyeY();
       double var5 = this.wantedZ - this.mob.getZ();
-      double var7 = (double)Mth.sqrt(var1 * var1 + var5 * var5);
+      double var7 = Math.sqrt(var1 * var1 + var5 * var5);
       return (float)(-(Mth.atan2(var3, var7) * 57.2957763671875D));
    }
 
    protected float getYRotD() {
       double var1 = this.wantedX - this.mob.getX();
