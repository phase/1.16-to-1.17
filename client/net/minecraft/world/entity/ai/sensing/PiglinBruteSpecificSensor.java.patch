--- net/minecraft/world/entity/ai/sensing/PiglinBruteSpecificSensor.java
+++ net/minecraft/world/entity/ai/sensing/PiglinBruteSpecificSensor.java
@@ -20,29 +20,29 @@
 public class PiglinBruteSpecificSensor extends Sensor<LivingEntity> {
    public PiglinBruteSpecificSensor() {
    }
 
    public Set<MemoryModuleType<?>> requires() {
-      return ImmutableSet.of(MemoryModuleType.VISIBLE_LIVING_ENTITIES, MemoryModuleType.NEAREST_VISIBLE_NEMESIS, MemoryModuleType.NEARBY_ADULT_PIGLINS);
+      return ImmutableSet.of(MemoryModuleType.NEAREST_VISIBLE_LIVING_ENTITIES, MemoryModuleType.NEAREST_VISIBLE_NEMESIS, MemoryModuleType.NEARBY_ADULT_PIGLINS);
    }
 
    protected void doTick(ServerLevel var1, LivingEntity var2) {
       Brain var3 = var2.getBrain();
       Optional var4 = Optional.empty();
       ArrayList var5 = Lists.newArrayList();
-      List var6 = (List)var3.getMemory(MemoryModuleType.VISIBLE_LIVING_ENTITIES).orElse(ImmutableList.of());
+      List var6 = (List)var3.getMemory(MemoryModuleType.NEAREST_VISIBLE_LIVING_ENTITIES).orElse(ImmutableList.of());
       Iterator var7 = var6.iterator();
 
       while(var7.hasNext()) {
          LivingEntity var8 = (LivingEntity)var7.next();
          if (var8 instanceof WitherSkeleton || var8 instanceof WitherBoss) {
             var4 = Optional.of((Mob)var8);
             break;
          }
       }
 
-      List var10 = (List)var3.getMemory(MemoryModuleType.LIVING_ENTITIES).orElse(ImmutableList.of());
+      List var10 = (List)var3.getMemory(MemoryModuleType.NEAREST_LIVING_ENTITIES).orElse(ImmutableList.of());
       Iterator var11 = var10.iterator();
 
       while(var11.hasNext()) {
          LivingEntity var9 = (LivingEntity)var11.next();
          if (var9 instanceof AbstractPiglin && ((AbstractPiglin)var9).isAdult()) {
