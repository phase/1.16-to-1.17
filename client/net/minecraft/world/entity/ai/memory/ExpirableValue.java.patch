--- net/minecraft/world/entity/ai/memory/ExpirableValue.java
+++ net/minecraft/world/entity/ai/memory/ExpirableValue.java
@@ -1,10 +1,11 @@
 package net.minecraft.world.entity.ai.memory;
 
 import com.mojang.serialization.Codec;
 import com.mojang.serialization.codecs.RecordCodecBuilder;
 import java.util.Optional;
+import net.minecraft.util.VisibleForDebug;
 
 public class ExpirableValue<T> {
    private final T value;
    private long timeToLive;
 
@@ -26,22 +27,27 @@
 
    public static <T> ExpirableValue<T> of(T var0, long var1) {
       return new ExpirableValue(var0, var1);
    }
 
+   public long getTimeToLive() {
+      return this.timeToLive;
+   }
+
    public T getValue() {
       return this.value;
    }
 
    public boolean hasExpired() {
       return this.timeToLive <= 0L;
    }
 
    public String toString() {
-      return this.value.toString() + (this.canExpire() ? " (ttl: " + this.timeToLive + ")" : "");
+      return this.value + (this.canExpire() ? " (ttl: " + this.timeToLive + ")" : "");
    }
 
+   @VisibleForDebug
    public boolean canExpire() {
       return this.timeToLive != Long.MAX_VALUE;
    }
 
    public static <T> Codec<ExpirableValue<T>> codec(Codec<T> var0) {
