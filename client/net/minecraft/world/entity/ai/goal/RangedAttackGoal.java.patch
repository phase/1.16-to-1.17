--- net/minecraft/world/entity/ai/goal/RangedAttackGoal.java
+++ net/minecraft/world/entity/ai/goal/RangedAttackGoal.java
@@ -59,11 +59,11 @@
       this.attackTime = -1;
    }
 
    public void tick() {
       double var1 = this.mob.distanceToSqr(this.target.getX(), this.target.getY(), this.target.getZ());
-      boolean var3 = this.mob.getSensing().canSee(this.target);
+      boolean var3 = this.mob.getSensing().hasLineOfSight(this.target);
       if (var3) {
          ++this.seeTime;
       } else {
          this.seeTime = 0;
       }
@@ -73,22 +73,20 @@
       } else {
          this.mob.getNavigation().moveTo((Entity)this.target, this.speedModifier);
       }
 
       this.mob.getLookControl().setLookAt(this.target, 30.0F, 30.0F);
-      float var4;
       if (--this.attackTime == 0) {
          if (!var3) {
             return;
          }
 
-         var4 = Mth.sqrt(var1) / this.attackRadius;
+         float var4 = (float)Math.sqrt(var1) / this.attackRadius;
          float var5 = Mth.clamp(var4, 0.1F, 1.0F);
          this.rangedAttackMob.performRangedAttack(this.target, var5);
          this.attackTime = Mth.floor(var4 * (float)(this.attackIntervalMax - this.attackIntervalMin) + (float)this.attackIntervalMin);
       } else if (this.attackTime < 0) {
-         var4 = Mth.sqrt(var1) / this.attackRadius;
-         this.attackTime = Mth.floor(var4 * (float)(this.attackIntervalMax - this.attackIntervalMin) + (float)this.attackIntervalMin);
+         this.attackTime = Mth.floor(Mth.lerp(Math.sqrt(var1) / (double)this.attackRadius, (double)this.attackIntervalMin, (double)this.attackIntervalMax));
       }
 
    }
 }
