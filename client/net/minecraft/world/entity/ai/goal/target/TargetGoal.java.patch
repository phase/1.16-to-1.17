--- net/minecraft/world/entity/ai/goal/target/TargetGoal.java
+++ net/minecraft/world/entity/ai/goal/target/TargetGoal.java
@@ -1,21 +1,22 @@
 package net.minecraft.world.entity.ai.goal.target;
 
 import javax.annotation.Nullable;
-import net.minecraft.util.Mth;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.Mob;
 import net.minecraft.world.entity.ai.attributes.Attributes;
 import net.minecraft.world.entity.ai.goal.Goal;
 import net.minecraft.world.entity.ai.targeting.TargetingConditions;
-import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.level.pathfinder.Node;
 import net.minecraft.world.level.pathfinder.Path;
 import net.minecraft.world.scores.Team;
 
 public abstract class TargetGoal extends Goal {
+   private static final int EMPTY_REACH_CACHE = 0;
+   private static final int CAN_REACH_CACHE = 1;
+   private static final int CANT_REACH_CACHE = 2;
    protected final Mob mob;
    protected final boolean mustSee;
    private final boolean mustReach;
    private int reachCache;
    private int reachCacheTime;
@@ -40,11 +41,11 @@
          var1 = this.targetMob;
       }
 
       if (var1 == null) {
          return false;
-      } else if (!var1.isAlive()) {
+      } else if (!var1.canBeSeenAsEnemy()) {
          return false;
       } else {
          Team var2 = this.mob.getTeam();
          Team var3 = var1.getTeam();
          if (var2 != null && var3 == var2) {
@@ -53,23 +54,19 @@
             double var4 = this.getFollowDistance();
             if (this.mob.distanceToSqr(var1) > var4 * var4) {
                return false;
             } else {
                if (this.mustSee) {
-                  if (this.mob.getSensing().canSee(var1)) {
+                  if (this.mob.getSensing().hasLineOfSight(var1)) {
                      this.unseenTicks = 0;
                   } else if (++this.unseenTicks > this.unseenMemoryTicks) {
                      return false;
                   }
                }
 
-               if (var1 instanceof Player && ((Player)var1).abilities.invulnerable) {
-                  return false;
-               } else {
-                  this.mob.setTarget(var1);
-                  return true;
-               }
+               this.mob.setTarget(var1);
+               return true;
             }
          }
       }
    }
 
@@ -122,12 +119,12 @@
       } else {
          Node var3 = var2.getEndNode();
          if (var3 == null) {
             return false;
          } else {
-            int var4 = var3.x - Mth.floor(var1.getX());
-            int var5 = var3.z - Mth.floor(var1.getZ());
+            int var4 = var3.x - var1.getBlockX();
+            int var5 = var3.z - var1.getBlockZ();
             return (double)(var4 * var4 + var5 * var5) <= 2.25D;
          }
       }
    }
 
