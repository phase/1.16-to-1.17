--- net/minecraft/world/entity/ai/navigation/WaterBoundPathNavigation.java
+++ net/minecraft/world/entity/ai/navigation/WaterBoundPathNavigation.java
@@ -3,12 +3,12 @@
 import net.minecraft.Util;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Vec3i;
 import net.minecraft.network.protocol.game.DebugPackets;
 import net.minecraft.util.Mth;
+import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.Mob;
-import net.minecraft.world.entity.animal.Dolphin;
 import net.minecraft.world.level.ClipContext;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.pathfinder.PathFinder;
 import net.minecraft.world.level.pathfinder.SwimNodeEvaluator;
 import net.minecraft.world.phys.HitResult;
@@ -20,11 +20,11 @@
    public WaterBoundPathNavigation(Mob var1, Level var2) {
       super(var1, var2);
    }
 
    protected PathFinder createPathFinder(int var1) {
-      this.allowBreaching = this.mob instanceof Dolphin;
+      this.allowBreaching = this.mob.getType() == EntityType.DOLPHIN;
       this.nodeEvaluator = new SwimNodeEvaluator(this.allowBreaching);
       return new PathFinder(this.nodeEvaluator, var1);
    }
 
    protected boolean canUpdatePath() {
@@ -45,11 +45,11 @@
          Vec3 var1;
          if (this.canUpdatePath()) {
             this.followThePath();
          } else if (this.path != null && !this.path.isDone()) {
             var1 = this.path.getNextEntityPos(this.mob);
-            if (Mth.floor(this.mob.getX()) == Mth.floor(var1.x) && Mth.floor(this.mob.getY()) == Mth.floor(var1.y) && Mth.floor(this.mob.getZ()) == Mth.floor(var1.z)) {
+            if (this.mob.getBlockX() == Mth.floor(var1.x) && this.mob.getBlockY() == Mth.floor(var1.y) && this.mob.getBlockZ() == Mth.floor(var1.z)) {
                this.path.advance();
             }
          }
 
          DebugPackets.sendPathFindingPacket(this.level, this.mob, this.path, this.maxDistanceToWaypoint);
