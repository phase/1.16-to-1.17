--- net/minecraft/world/item/FireworkRocketItem.java
+++ net/minecraft/world/item/FireworkRocketItem.java
@@ -11,20 +11,32 @@
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.nbt.ListTag;
 import net.minecraft.network.chat.Component;
 import net.minecraft.network.chat.TextComponent;
 import net.minecraft.network.chat.TranslatableComponent;
+import net.minecraft.stats.Stats;
 import net.minecraft.world.InteractionHand;
 import net.minecraft.world.InteractionResult;
 import net.minecraft.world.InteractionResultHolder;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.entity.projectile.FireworkRocketEntity;
 import net.minecraft.world.item.context.UseOnContext;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.phys.Vec3;
 
 public class FireworkRocketItem extends Item {
+   public static final String TAG_FIREWORKS = "Fireworks";
+   public static final String TAG_EXPLOSION = "Explosion";
+   public static final String TAG_EXPLOSIONS = "Explosions";
+   public static final String TAG_FLIGHT = "Flight";
+   public static final String TAG_EXPLOSION_TYPE = "Type";
+   public static final String TAG_EXPLOSION_TRAIL = "Trail";
+   public static final String TAG_EXPLOSION_FLICKER = "Flicker";
+   public static final String TAG_EXPLOSION_COLORS = "Colors";
+   public static final String TAG_EXPLOSION_FADECOLORS = "FadeColors";
+   public static final double ROCKET_PLACEMENT_OFFSET = 0.15D;
+
    public FireworkRocketItem(Item.Properties var1) {
       super(var1);
    }
 
    public InteractionResult useOn(UseOnContext var1) {
@@ -43,14 +55,17 @@
 
    public InteractionResultHolder<ItemStack> use(Level var1, Player var2, InteractionHand var3) {
       if (var2.isFallFlying()) {
          ItemStack var4 = var2.getItemInHand(var3);
          if (!var1.isClientSide) {
-            var1.addFreshEntity(new FireworkRocketEntity(var1, var4, var2));
-            if (!var2.abilities.instabuild) {
+            FireworkRocketEntity var5 = new FireworkRocketEntity(var1, var4, var2);
+            var1.addFreshEntity(var5);
+            if (!var2.getAbilities().instabuild) {
                var4.shrink(1);
             }
+
+            var2.awardStat(Stats.ITEM_USED.get(this));
          }
 
          return InteractionResultHolder.sidedSuccess(var2.getItemInHand(var3), var1.isClientSide());
       } else {
          return InteractionResultHolder.pass(var2.getItemInHand(var3));
@@ -81,10 +96,16 @@
          }
 
       }
    }
 
+   public ItemStack getDefaultInstance() {
+      ItemStack var1 = new ItemStack(this);
+      var1.getOrCreateTag().putByte("Flight", (byte)1);
+      return var1;
+   }
+
    public static enum Shape {
       SMALL_BALL(0, "small_ball"),
       LARGE_BALL(1, "large_ball"),
       STAR(2, "star"),
       CREEPER(3, "creeper"),
