--- net/minecraft/world/item/BowItem.java
+++ net/minecraft/world/item/BowItem.java
@@ -12,28 +12,31 @@
 import net.minecraft.world.item.enchantment.EnchantmentHelper;
 import net.minecraft.world.item.enchantment.Enchantments;
 import net.minecraft.world.level.Level;
 
 public class BowItem extends ProjectileWeaponItem implements Vanishable {
+   public static final int MAX_DRAW_DURATION = 20;
+   public static final int DEFAULT_RANGE = 15;
+
    public BowItem(Item.Properties var1) {
       super(var1);
    }
 
    public void releaseUsing(ItemStack var1, Level var2, LivingEntity var3, int var4) {
       if (var3 instanceof Player) {
          Player var5 = (Player)var3;
-         boolean var6 = var5.abilities.instabuild || EnchantmentHelper.getItemEnchantmentLevel(Enchantments.INFINITY_ARROWS, var1) > 0;
+         boolean var6 = var5.getAbilities().instabuild || EnchantmentHelper.getItemEnchantmentLevel(Enchantments.INFINITY_ARROWS, var1) > 0;
          ItemStack var7 = var5.getProjectile(var1);
          if (!var7.isEmpty() || var6) {
             if (var7.isEmpty()) {
                var7 = new ItemStack(Items.ARROW);
             }
 
             int var8 = this.getUseDuration(var1) - var4;
             float var9 = getPowerForTime(var8);
             if ((double)var9 >= 0.1D) {
-               boolean var10 = var6 && var7.getItem() == Items.ARROW;
+               boolean var10 = var6 && var7.is(Items.ARROW);
                if (!var2.isClientSide) {
                   ArrowItem var11 = (ArrowItem)((ArrowItem)(var7.getItem() instanceof ArrowItem ? var7.getItem() : Items.ARROW));
                   AbstractArrow var12 = var11.createArrow(var2, var7, var5);
                   var12.shootFromRotation(var5, var5.xRot, var5.yRot, 0.0F, var9 * 3.0F, 1.0F);
                   if (var9 == 1.0F) {
@@ -55,22 +58,22 @@
                   }
 
                   var1.hurtAndBreak(1, var5, (var1x) -> {
                      var1x.broadcastBreakEvent(var5.getUsedItemHand());
                   });
-                  if (var10 || var5.abilities.instabuild && (var7.getItem() == Items.SPECTRAL_ARROW || var7.getItem() == Items.TIPPED_ARROW)) {
+                  if (var10 || var5.getAbilities().instabuild && (var7.is(Items.SPECTRAL_ARROW) || var7.is(Items.TIPPED_ARROW))) {
                      var12.pickup = AbstractArrow.Pickup.CREATIVE_ONLY;
                   }
 
                   var2.addFreshEntity(var12);
                }
 
-               var2.playSound((Player)null, var5.getX(), var5.getY(), var5.getZ(), SoundEvents.ARROW_SHOOT, SoundSource.PLAYERS, 1.0F, 1.0F / (random.nextFloat() * 0.4F + 1.2F) + var9 * 0.5F);
-               if (!var10 && !var5.abilities.instabuild) {
+               var2.playSound((Player)null, var5.getX(), var5.getY(), var5.getZ(), SoundEvents.ARROW_SHOOT, SoundSource.PLAYERS, 1.0F, 1.0F / (var2.getRandom().nextFloat() * 0.4F + 1.2F) + var9 * 0.5F);
+               if (!var10 && !var5.getAbilities().instabuild) {
                   var7.shrink(1);
                   if (var7.isEmpty()) {
-                     var5.inventory.removeItem(var7);
+                     var5.getInventory().removeItem(var7);
                   }
                }
 
                var5.awardStat(Stats.ITEM_USED.get(this));
             }
@@ -97,11 +100,11 @@
    }
 
    public InteractionResultHolder<ItemStack> use(Level var1, Player var2, InteractionHand var3) {
       ItemStack var4 = var2.getItemInHand(var3);
       boolean var5 = !var2.getProjectile(var4).isEmpty();
-      if (!var2.abilities.instabuild && !var5) {
+      if (!var2.getAbilities().instabuild && !var5) {
          return InteractionResultHolder.fail(var4);
       } else {
          var2.startUsingItem(var3);
          return InteractionResultHolder.consume(var4);
       }
