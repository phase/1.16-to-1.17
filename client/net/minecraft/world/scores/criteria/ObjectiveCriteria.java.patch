--- net/minecraft/world/scores/criteria/ObjectiveCriteria.java
+++ net/minecraft/world/scores/criteria/ObjectiveCriteria.java
@@ -1,24 +1,28 @@
 package net.minecraft.world.scores.criteria;
 
 import com.google.common.collect.ImmutableMap;
+import com.google.common.collect.ImmutableSet;
 import com.google.common.collect.Maps;
 import com.google.common.collect.ImmutableMap.Builder;
 import java.util.Map;
+import java.util.Objects;
 import java.util.Optional;
+import java.util.Set;
 import net.minecraft.ChatFormatting;
 import net.minecraft.core.Registry;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.stats.StatType;
 
 public class ObjectiveCriteria {
-   public static final Map<String, ObjectiveCriteria> CRITERIA_BY_NAME = Maps.newHashMap();
-   public static final ObjectiveCriteria DUMMY = new ObjectiveCriteria("dummy");
-   public static final ObjectiveCriteria TRIGGER = new ObjectiveCriteria("trigger");
-   public static final ObjectiveCriteria DEATH_COUNT = new ObjectiveCriteria("deathCount");
-   public static final ObjectiveCriteria KILL_COUNT_PLAYERS = new ObjectiveCriteria("playerKillCount");
-   public static final ObjectiveCriteria KILL_COUNT_ALL = new ObjectiveCriteria("totalKillCount");
+   private static final Map<String, ObjectiveCriteria> CUSTOM_CRITERIA = Maps.newHashMap();
+   private static final Map<String, ObjectiveCriteria> CRITERIA_CACHE = Maps.newHashMap();
+   public static final ObjectiveCriteria DUMMY = registerCustom("dummy");
+   public static final ObjectiveCriteria TRIGGER = registerCustom("trigger");
+   public static final ObjectiveCriteria DEATH_COUNT = registerCustom("deathCount");
+   public static final ObjectiveCriteria KILL_COUNT_PLAYERS = registerCustom("playerKillCount");
+   public static final ObjectiveCriteria KILL_COUNT_ALL = registerCustom("totalKillCount");
    public static final ObjectiveCriteria HEALTH;
    public static final ObjectiveCriteria FOOD;
    public static final ObjectiveCriteria AIR;
    public static final ObjectiveCriteria ARMOR;
    public static final ObjectiveCriteria EXPERIENCE;
@@ -27,35 +31,50 @@
    public static final ObjectiveCriteria[] KILLED_BY_TEAM;
    private final String name;
    private final boolean readOnly;
    private final ObjectiveCriteria.RenderType renderType;
 
-   public ObjectiveCriteria(String var1) {
+   private static ObjectiveCriteria registerCustom(String var0, boolean var1, ObjectiveCriteria.RenderType var2) {
+      ObjectiveCriteria var3 = new ObjectiveCriteria(var0, var1, var2);
+      CUSTOM_CRITERIA.put(var0, var3);
+      return var3;
+   }
+
+   private static ObjectiveCriteria registerCustom(String var0) {
+      return registerCustom(var0, false, ObjectiveCriteria.RenderType.INTEGER);
+   }
+
+   protected ObjectiveCriteria(String var1) {
       this(var1, false, ObjectiveCriteria.RenderType.INTEGER);
    }
 
    protected ObjectiveCriteria(String var1, boolean var2, ObjectiveCriteria.RenderType var3) {
       this.name = var1;
       this.readOnly = var2;
       this.renderType = var3;
-      CRITERIA_BY_NAME.put(var1, this);
+      CRITERIA_CACHE.put(var1, this);
    }
 
+   public static Set<String> getCustomCriteriaNames() {
+      return ImmutableSet.copyOf(CUSTOM_CRITERIA.keySet());
+   }
+
    public static Optional<ObjectiveCriteria> byName(String var0) {
-      if (CRITERIA_BY_NAME.containsKey(var0)) {
-         return Optional.of(CRITERIA_BY_NAME.get(var0));
+      ObjectiveCriteria var1 = (ObjectiveCriteria)CRITERIA_CACHE.get(var0);
+      if (var1 != null) {
+         return Optional.of(var1);
       } else {
-         int var1 = var0.indexOf(58);
-         return var1 < 0 ? Optional.empty() : Registry.STAT_TYPE.getOptional(ResourceLocation.of(var0.substring(0, var1), '.')).flatMap((var2) -> {
-            return getStat(var2, ResourceLocation.of(var0.substring(var1 + 1), '.'));
+         int var2 = var0.indexOf(58);
+         return var2 < 0 ? Optional.empty() : Registry.STAT_TYPE.getOptional(ResourceLocation.of(var0.substring(0, var2), '.')).flatMap((var2x) -> {
+            return getStat(var2x, ResourceLocation.of(var0.substring(var2 + 1), '.'));
          });
       }
    }
 
    private static <T> Optional<ObjectiveCriteria> getStat(StatType<T> var0, ResourceLocation var1) {
       Optional var10000 = var0.getRegistry().getOptional(var1);
-      var0.getClass();
+      Objects.requireNonNull(var0);
       return var10000.map(var0::get);
    }
 
    public String getName() {
       return this.name;
@@ -68,18 +87,18 @@
    public ObjectiveCriteria.RenderType getDefaultRenderType() {
       return this.renderType;
    }
 
    static {
-      HEALTH = new ObjectiveCriteria("health", true, ObjectiveCriteria.RenderType.HEARTS);
-      FOOD = new ObjectiveCriteria("food", true, ObjectiveCriteria.RenderType.INTEGER);
-      AIR = new ObjectiveCriteria("air", true, ObjectiveCriteria.RenderType.INTEGER);
-      ARMOR = new ObjectiveCriteria("armor", true, ObjectiveCriteria.RenderType.INTEGER);
-      EXPERIENCE = new ObjectiveCriteria("xp", true, ObjectiveCriteria.RenderType.INTEGER);
-      LEVEL = new ObjectiveCriteria("level", true, ObjectiveCriteria.RenderType.INTEGER);
-      TEAM_KILL = new ObjectiveCriteria[]{new ObjectiveCriteria("teamkill." + ChatFormatting.BLACK.getName()), new ObjectiveCriteria("teamkill." + ChatFormatting.DARK_BLUE.getName()), new ObjectiveCriteria("teamkill." + ChatFormatting.DARK_GREEN.getName()), new ObjectiveCriteria("teamkill." + ChatFormatting.DARK_AQUA.getName()), new ObjectiveCriteria("teamkill." + ChatFormatting.DARK_RED.getName()), new ObjectiveCriteria("teamkill." + ChatFormatting.DARK_PURPLE.getName()), new ObjectiveCriteria("teamkill." + ChatFormatting.GOLD.getName()), new ObjectiveCriteria("teamkill." + ChatFormatting.GRAY.getName()), new ObjectiveCriteria("teamkill." + ChatFormatting.DARK_GRAY.getName()), new ObjectiveCriteria("teamkill." + ChatFormatting.BLUE.getName()), new ObjectiveCriteria("teamkill." + ChatFormatting.GREEN.getName()), new ObjectiveCriteria("teamkill." + ChatFormatting.AQUA.getName()), new ObjectiveCriteria("teamkill." + ChatFormatting.RED.getName()), new ObjectiveCriteria("teamkill." + ChatFormatting.LIGHT_PURPLE.getName()), new ObjectiveCriteria("teamkill." + ChatFormatting.YELLOW.getName()), new ObjectiveCriteria("teamkill." + ChatFormatting.WHITE.getName())};
-      KILLED_BY_TEAM = new ObjectiveCriteria[]{new ObjectiveCriteria("killedByTeam." + ChatFormatting.BLACK.getName()), new ObjectiveCriteria("killedByTeam." + ChatFormatting.DARK_BLUE.getName()), new ObjectiveCriteria("killedByTeam." + ChatFormatting.DARK_GREEN.getName()), new ObjectiveCriteria("killedByTeam." + ChatFormatting.DARK_AQUA.getName()), new ObjectiveCriteria("killedByTeam." + ChatFormatting.DARK_RED.getName()), new ObjectiveCriteria("killedByTeam." + ChatFormatting.DARK_PURPLE.getName()), new ObjectiveCriteria("killedByTeam." + ChatFormatting.GOLD.getName()), new ObjectiveCriteria("killedByTeam." + ChatFormatting.GRAY.getName()), new ObjectiveCriteria("killedByTeam." + ChatFormatting.DARK_GRAY.getName()), new ObjectiveCriteria("killedByTeam." + ChatFormatting.BLUE.getName()), new ObjectiveCriteria("killedByTeam." + ChatFormatting.GREEN.getName()), new ObjectiveCriteria("killedByTeam." + ChatFormatting.AQUA.getName()), new ObjectiveCriteria("killedByTeam." + ChatFormatting.RED.getName()), new ObjectiveCriteria("killedByTeam." + ChatFormatting.LIGHT_PURPLE.getName()), new ObjectiveCriteria("killedByTeam." + ChatFormatting.YELLOW.getName()), new ObjectiveCriteria("killedByTeam." + ChatFormatting.WHITE.getName())};
+      HEALTH = registerCustom("health", true, ObjectiveCriteria.RenderType.HEARTS);
+      FOOD = registerCustom("food", true, ObjectiveCriteria.RenderType.INTEGER);
+      AIR = registerCustom("air", true, ObjectiveCriteria.RenderType.INTEGER);
+      ARMOR = registerCustom("armor", true, ObjectiveCriteria.RenderType.INTEGER);
+      EXPERIENCE = registerCustom("xp", true, ObjectiveCriteria.RenderType.INTEGER);
+      LEVEL = registerCustom("level", true, ObjectiveCriteria.RenderType.INTEGER);
+      TEAM_KILL = new ObjectiveCriteria[]{registerCustom("teamkill." + ChatFormatting.BLACK.getName()), registerCustom("teamkill." + ChatFormatting.DARK_BLUE.getName()), registerCustom("teamkill." + ChatFormatting.DARK_GREEN.getName()), registerCustom("teamkill." + ChatFormatting.DARK_AQUA.getName()), registerCustom("teamkill." + ChatFormatting.DARK_RED.getName()), registerCustom("teamkill." + ChatFormatting.DARK_PURPLE.getName()), registerCustom("teamkill." + ChatFormatting.GOLD.getName()), registerCustom("teamkill." + ChatFormatting.GRAY.getName()), registerCustom("teamkill." + ChatFormatting.DARK_GRAY.getName()), registerCustom("teamkill." + ChatFormatting.BLUE.getName()), registerCustom("teamkill." + ChatFormatting.GREEN.getName()), registerCustom("teamkill." + ChatFormatting.AQUA.getName()), registerCustom("teamkill." + ChatFormatting.RED.getName()), registerCustom("teamkill." + ChatFormatting.LIGHT_PURPLE.getName()), registerCustom("teamkill." + ChatFormatting.YELLOW.getName()), registerCustom("teamkill." + ChatFormatting.WHITE.getName())};
+      KILLED_BY_TEAM = new ObjectiveCriteria[]{registerCustom("killedByTeam." + ChatFormatting.BLACK.getName()), registerCustom("killedByTeam." + ChatFormatting.DARK_BLUE.getName()), registerCustom("killedByTeam." + ChatFormatting.DARK_GREEN.getName()), registerCustom("killedByTeam." + ChatFormatting.DARK_AQUA.getName()), registerCustom("killedByTeam." + ChatFormatting.DARK_RED.getName()), registerCustom("killedByTeam." + ChatFormatting.DARK_PURPLE.getName()), registerCustom("killedByTeam." + ChatFormatting.GOLD.getName()), registerCustom("killedByTeam." + ChatFormatting.GRAY.getName()), registerCustom("killedByTeam." + ChatFormatting.DARK_GRAY.getName()), registerCustom("killedByTeam." + ChatFormatting.BLUE.getName()), registerCustom("killedByTeam." + ChatFormatting.GREEN.getName()), registerCustom("killedByTeam." + ChatFormatting.AQUA.getName()), registerCustom("killedByTeam." + ChatFormatting.RED.getName()), registerCustom("killedByTeam." + ChatFormatting.LIGHT_PURPLE.getName()), registerCustom("killedByTeam." + ChatFormatting.YELLOW.getName()), registerCustom("killedByTeam." + ChatFormatting.WHITE.getName())};
    }
 
    public static enum RenderType {
       INTEGER("integer"),
       HEARTS("hearts");
