--- net/minecraft/world/level/LevelReader.java
+++ net/minecraft/world/level/LevelReader.java
@@ -2,10 +2,11 @@
 
 import java.util.stream.Stream;
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
+import net.minecraft.core.SectionPos;
 import net.minecraft.tags.FluidTags;
 import net.minecraft.util.Mth;
 import net.minecraft.world.level.biome.Biome;
 import net.minecraft.world.level.biome.BiomeManager;
 import net.minecraft.world.level.block.state.BlockState;
@@ -96,11 +97,11 @@
    default int getDirectSignal(BlockPos var1, Direction var2) {
       return this.getBlockState(var1).getDirectSignal(this, var1, var2);
    }
 
    default ChunkAccess getChunk(BlockPos var1) {
-      return this.getChunk(var1.getX() >> 4, var1.getZ() >> 4);
+      return this.getChunk(SectionPos.blockToSectionCoord(var1.getX()), SectionPos.blockToSectionCoord(var1.getZ()));
    }
 
    default ChunkAccess getChunk(int var1, int var2) {
       return this.getChunk(var1, var2, ChunkStatus.FULL, true);
    }
@@ -149,21 +150,21 @@
       return var1.getX() >= -30000000 && var1.getZ() >= -30000000 && var1.getX() < 30000000 && var1.getZ() < 30000000 ? this.getRawBrightness(var1, var2) : 15;
    }
 
    @Deprecated
    default boolean hasChunkAt(BlockPos var1) {
-      return this.hasChunk(var1.getX() >> 4, var1.getZ() >> 4);
+      return this.hasChunk(SectionPos.blockToSectionCoord(var1.getX()), SectionPos.blockToSectionCoord(var1.getZ()));
    }
 
    @Deprecated
    default boolean hasChunksAt(BlockPos var1, BlockPos var2) {
       return this.hasChunksAt(var1.getX(), var1.getY(), var1.getZ(), var2.getX(), var2.getY(), var2.getZ());
    }
 
    @Deprecated
    default boolean hasChunksAt(int var1, int var2, int var3, int var4, int var5, int var6) {
-      if (var5 >= 0 && var2 < 256) {
+      if (var5 >= this.getMinBuildHeight() && var2 < this.getMaxBuildHeight()) {
          var1 >>= 4;
          var3 >>= 4;
          var4 >>= 4;
          var6 >>= 4;
 
