--- net/minecraft/world/level/Explosion.java
+++ net/minecraft/world/level/Explosion.java
@@ -32,19 +32,21 @@
 import net.minecraft.world.level.block.BaseFireBlock;
 import net.minecraft.world.level.block.Block;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.entity.BlockEntity;
 import net.minecraft.world.level.block.state.BlockState;
+import net.minecraft.world.level.gameevent.GameEvent;
 import net.minecraft.world.level.material.FluidState;
 import net.minecraft.world.level.storage.loot.LootContext;
 import net.minecraft.world.level.storage.loot.parameters.LootContextParams;
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.HitResult;
 import net.minecraft.world.phys.Vec3;
 
 public class Explosion {
    private static final ExplosionDamageCalculator EXPLOSION_DAMAGE_CALCULATOR = new ExplosionDamageCalculator();
+   private static final int MAX_DROPS_PER_COMBINED_STACK = 16;
    private final boolean fire;
    private final Explosion.BlockInteraction blockInteraction;
    private final Random random;
    private final Level level;
    private final double x;
@@ -56,10 +58,14 @@
    private final DamageSource damageSource;
    private final ExplosionDamageCalculator damageCalculator;
    private final List<BlockPos> toBlow;
    private final Map<Player, Vec3> hitPlayers;
 
+   public Explosion(Level var1, @Nullable Entity var2, double var3, double var5, double var7, float var9) {
+      this(var1, var2, var3, var5, var7, var9, false, Explosion.BlockInteraction.DESTROY);
+   }
+
    public Explosion(Level var1, @Nullable Entity var2, double var3, double var5, double var7, float var9, List<BlockPos> var10) {
       this(var1, var2, var3, var5, var7, var9, false, Explosion.BlockInteraction.DESTROY, var10);
    }
 
    public Explosion(Level var1, @Nullable Entity var2, double var3, double var5, double var7, float var9, boolean var10, Explosion.BlockInteraction var11, List<BlockPos> var12) {
@@ -123,10 +129,11 @@
          return 0.0F;
       }
    }
 
    public void explode() {
+      this.level.gameEvent(this.source, GameEvent.EXPLODE, new BlockPos(this.x, this.y, this.z));
       HashSet var1 = Sets.newHashSet();
       boolean var2 = true;
 
       int var4;
       int var5;
@@ -148,10 +155,14 @@
 
                   for(float var21 = 0.3F; var14 > 0.0F; var14 -= 0.22500001F) {
                      BlockPos var22 = new BlockPos(var15, var17, var19);
                      BlockState var23 = this.level.getBlockState(var22);
                      FluidState var24 = this.level.getFluidState(var22);
+                     if (!this.level.isInWorldBounds(var22)) {
+                        break;
+                     }
+
                      Optional var25 = this.damageCalculator.getBlockExplosionResistance(this, this.level, var22, var23, var24);
                      if (var25.isPresent()) {
                         var14 -= ((Float)var25.get() + 0.3F) * 0.3F;
                      }
 
@@ -180,16 +191,16 @@
       Vec3 var11 = new Vec3(this.x, this.y, this.z);
 
       for(int var35 = 0; var35 < var34.size(); ++var35) {
          Entity var13 = (Entity)var34.get(var35);
          if (!var13.ignoreExplosion()) {
-            double var36 = (double)(Mth.sqrt(var13.distanceToSqr(var11)) / var31);
+            double var36 = Math.sqrt(var13.distanceToSqr(var11)) / (double)var31;
             if (var36 <= 1.0D) {
                double var16 = var13.getX() - this.x;
                double var18 = (var13 instanceof PrimedTnt ? var13.getY() : var13.getEyeY()) - this.y;
                double var20 = var13.getZ() - this.z;
-               double var37 = (double)Mth.sqrt(var16 * var16 + var18 * var18 + var20 * var20);
+               double var37 = Math.sqrt(var16 * var16 + var18 * var18 + var20 * var20);
                if (var37 != 0.0D) {
                   var16 /= var37;
                   var18 /= var37;
                   var20 /= var37;
                   double var38 = (double)getSeenPercent(var11, var13);
@@ -201,11 +212,11 @@
                   }
 
                   var13.setDeltaMovement(var13.getDeltaMovement().add(var16 * var28, var18 * var28, var20 * var28));
                   if (var13 instanceof Player) {
                      Player var30 = (Player)var13;
-                     if (!var30.isSpectator() && (!var30.isCreative() || !var30.abilities.flying)) {
+                     if (!var30.isSpectator() && (!var30.isCreative() || !var30.getAbilities().flying)) {
                         this.hitPlayers.put(var30, new Vec3(var16 * var26, var18 * var26, var20 * var26));
                      }
                   }
                }
             }
@@ -239,11 +250,11 @@
             Block var7 = var6.getBlock();
             if (!var6.isAir()) {
                BlockPos var8 = var5.immutable();
                this.level.getProfiler().push("explosion_blocks");
                if (var7.dropFromExplosion(this) && this.level instanceof ServerLevel) {
-                  BlockEntity var9 = var7.isEntityBlock() ? this.level.getBlockEntity(var5) : null;
+                  BlockEntity var9 = var6.hasBlockEntity() ? this.level.getBlockEntity(var5) : null;
                   LootContext.Builder var10 = (new LootContext.Builder((ServerLevel)this.level)).withRandom(this.level.random).withParameter(LootContextParams.ORIGIN, Vec3.atCenterOf(var5)).withParameter(LootContextParams.TOOL, ItemStack.EMPTY).withOptionalParameter(LootContextParams.BLOCK_ENTITY, var9).withOptionalParameter(LootContextParams.THIS_ENTITY, this.source);
                   if (this.blockInteraction == Explosion.BlockInteraction.DESTROY) {
                      var10.withParameter(LootContextParams.EXPLOSION_RADIUS, this.radius);
                   }
 
@@ -285,11 +296,11 @@
       for(int var4 = 0; var4 < var3; ++var4) {
          Pair var5 = (Pair)var0.get(var4);
          ItemStack var6 = (ItemStack)var5.getFirst();
          if (ItemEntity.areMergable(var6, var1)) {
             ItemStack var7 = ItemEntity.merge(var6, var1, 16);
-            var0.set(var4, Pair.of(var7, var5.getSecond()));
+            var0.set(var4, Pair.of(var7, (BlockPos)var5.getSecond()));
             if (var1.isEmpty()) {
                return;
             }
          }
       }
