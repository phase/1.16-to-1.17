--- net/minecraft/world/level/material/LavaFluid.java
+++ net/minecraft/world/level/material/LavaFluid.java
@@ -1,13 +1,15 @@
 package net.minecraft.world.level.material;
 
+import java.util.Optional;
 import java.util.Random;
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.core.particles.ParticleOptions;
 import net.minecraft.core.particles.ParticleTypes;
+import net.minecraft.sounds.SoundEvent;
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.sounds.SoundSource;
 import net.minecraft.tags.FluidTags;
 import net.minecraft.world.item.Item;
 import net.minecraft.world.item.Items;
@@ -107,11 +109,11 @@
 
       return false;
    }
 
    private boolean isFlammable(LevelReader var1, BlockPos var2) {
-      return var2.getY() >= 0 && var2.getY() < 256 && !var1.hasChunkAt(var2) ? false : var1.getBlockState(var2).getMaterial().isFlammable();
+      return var2.getY() >= var1.getMinBuildHeight() && var2.getY() < var1.getMaxBuildHeight() && !var1.hasChunkAt(var2) ? false : var1.getBlockState(var2).getMaterial().isFlammable();
    }
 
    @Nullable
    public ParticleOptions getDripParticle() {
       return ParticleTypes.DRIPPING_LAVA;
@@ -184,10 +186,14 @@
 
    protected float getExplosionResistance() {
       return 100.0F;
    }
 
+   public Optional<SoundEvent> getPickupSound() {
+      return Optional.of(SoundEvents.BUCKET_FILL_LAVA);
+   }
+
    public static class Flowing extends LavaFluid {
       public Flowing() {
       }
 
       protected void createFluidStateDefinition(StateDefinition.Builder<Fluid, FluidState> var1) {
