--- net/minecraft/world/level/lighting/LayerLightEngine.java
+++ net/minecraft/world/level/lighting/LayerLightEngine.java
@@ -15,16 +15,18 @@
 import net.minecraft.world.phys.shapes.Shapes;
 import net.minecraft.world.phys.shapes.VoxelShape;
 import org.apache.commons.lang3.mutable.MutableInt;
 
 public abstract class LayerLightEngine<M extends DataLayerStorageMap<M>, S extends LayerLightSectionStorage<M>> extends DynamicGraphMinFixedPoint implements LayerLightEventListener {
+   public static final long SELF_SOURCE = Long.MAX_VALUE;
    private static final Direction[] DIRECTIONS = Direction.values();
    protected final LightChunkGetter chunkSource;
    protected final LightLayer layer;
    protected final S storage;
    private boolean runningLightUpdates;
    protected final BlockPos.MutableBlockPos pos = new BlockPos.MutableBlockPos();
+   private static final int CACHE_SIZE = 2;
    private final long[] lastChunkPos = new long[2];
    private final BlockGetter[] lastChunk = new BlockGetter[2];
 
    public LayerLightEngine(LightChunkGetter var1, LightLayer var2, S var3) {
       super(16, 256, 8192);
@@ -181,11 +183,12 @@
    public int getLightValue(BlockPos var1) {
       return this.storage.getLightValue(var1.asLong());
    }
 
    public String getDebugData(long var1) {
-      return "" + this.storage.getLevel(var1);
+      int var10000 = this.storage.getLevel(var1);
+      return var10000.makeConcatWithConstants<invokedynamic>(var10000);
    }
 
    public void checkBlock(BlockPos var1) {
       long var2 = var1.asLong();
       this.checkNode(var2);
