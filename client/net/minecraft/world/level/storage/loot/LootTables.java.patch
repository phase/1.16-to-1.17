--- net/minecraft/world/level/storage/loot/LootTables.java
+++ net/minecraft/world/level/storage/loot/LootTables.java
@@ -3,10 +3,11 @@
 import com.google.common.collect.ImmutableMap;
 import com.google.common.collect.ImmutableMap.Builder;
 import com.google.gson.Gson;
 import com.google.gson.JsonElement;
 import java.util.Map;
+import java.util.Objects;
 import java.util.Set;
 import java.util.function.Function;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.server.packs.resources.ResourceManager;
 import net.minecraft.server.packs.resources.SimpleJsonResourceReloadListener;
@@ -48,18 +49,20 @@
 
       });
       var4.put(BuiltInLootTables.EMPTY, LootTable.EMPTY);
       ImmutableMap var6 = var4.build();
       LootContextParamSet var10002 = LootContextParamSets.ALL_PARAMS;
-      Function var10003 = this.predicateManager::get;
-      var6.getClass();
-      ValidationContext var7 = new ValidationContext(var10002, var10003, var6::get);
+      PredicateManager var10003 = this.predicateManager;
+      Objects.requireNonNull(var10003);
+      Function var8 = var10003::get;
+      Objects.requireNonNull(var6);
+      ValidationContext var7 = new ValidationContext(var10002, var8, var6::get);
       var6.forEach((var1x, var2x) -> {
          validate(var7, var1x, var2x);
       });
       var7.getProblems().forEach((var0, var1x) -> {
-         LOGGER.warn("Found validation problem in " + var0 + ": " + var1x);
+         LOGGER.warn("Found validation problem in {}: {}", var0, var1x);
       });
       this.tables = var6;
    }
 
    public static void validate(ValidationContext var0, ResourceLocation var1, LootTable var2) {
