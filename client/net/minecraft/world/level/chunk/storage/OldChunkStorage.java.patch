--- net/minecraft/world/level/chunk/storage/OldChunkStorage.java
+++ net/minecraft/world/level/chunk/storage/OldChunkStorage.java
@@ -3,16 +3,31 @@
 import net.minecraft.core.Registry;
 import net.minecraft.core.RegistryAccess;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.nbt.ListTag;
 import net.minecraft.world.level.ChunkPos;
+import net.minecraft.world.level.LevelHeightAccessor;
 import net.minecraft.world.level.biome.BiomeSource;
 import net.minecraft.world.level.chunk.ChunkBiomeContainer;
 import net.minecraft.world.level.chunk.DataLayer;
 import net.minecraft.world.level.chunk.OldDataLayer;
 
 public class OldChunkStorage {
+   private static final int DATALAYER_BITS = 7;
+   private static final LevelHeightAccessor OLD_LEVEL_HEIGHT = new LevelHeightAccessor() {
+      public int getMinBuildHeight() {
+         return 0;
+      }
+
+      public int getHeight() {
+         return 128;
+      }
+   };
+
+   public OldChunkStorage() {
+   }
+
    public static OldChunkStorage.OldLevelChunk load(CompoundTag var0) {
       int var1 = var0.getInt("xPos");
       int var2 = var0.getInt("zPos");
       OldChunkStorage.OldLevelChunk var3 = new OldChunkStorage.OldLevelChunk(var1, var2);
       var3.blocks = var0.getByteArray("Blocks");
@@ -92,11 +107,11 @@
             var17.add(var23);
          }
       }
 
       var2.put("Sections", var17);
-      var2.putIntArray("Biomes", (new ChunkBiomeContainer(var0.registryOrThrow(Registry.BIOME_REGISTRY), new ChunkPos(var1.x, var1.z), var3)).writeBiomes());
+      var2.putIntArray("Biomes", (new ChunkBiomeContainer(var0.registryOrThrow(Registry.BIOME_REGISTRY), OLD_LEVEL_HEIGHT, new ChunkPos(var1.x, var1.z), var3)).writeBiomes());
       var2.put("Entities", var1.entities);
       var2.put("TileEntities", var1.blockEntities);
       if (var1.blockTicks != null) {
          var2.put("TileTicks", var1.blockTicks);
       }
