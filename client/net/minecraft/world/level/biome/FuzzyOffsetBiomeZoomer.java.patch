--- net/minecraft/world/level/biome/FuzzyOffsetBiomeZoomer.java
+++ net/minecraft/world/level/biome/FuzzyOffsetBiomeZoomer.java
@@ -16,43 +16,35 @@
       int var11 = var8 >> 2;
       int var12 = var9 >> 2;
       double var13 = (double)(var7 & 3) / 4.0D;
       double var15 = (double)(var8 & 3) / 4.0D;
       double var17 = (double)(var9 & 3) / 4.0D;
-      double[] var19 = new double[8];
+      int var19 = 0;
+      double var20 = Double.POSITIVE_INFINITY;
 
-      int var20;
-      int var24;
-      int var25;
-      for(var20 = 0; var20 < 8; ++var20) {
-         boolean var21 = (var20 & 4) == 0;
-         boolean var22 = (var20 & 2) == 0;
-         boolean var23 = (var20 & 1) == 0;
-         var24 = var21 ? var10 : var10 + 1;
-         var25 = var22 ? var11 : var11 + 1;
-         int var26 = var23 ? var12 : var12 + 1;
-         double var27 = var21 ? var13 : var13 - 1.0D;
-         double var29 = var22 ? var15 : var15 - 1.0D;
-         double var31 = var23 ? var17 : var17 - 1.0D;
-         var19[var20] = getFiddledDistance(var1, var24, var25, var26, var27, var29, var31);
-      }
-
-      var20 = 0;
-      double var33 = var19[0];
-
-      int var34;
-      for(var34 = 1; var34 < 8; ++var34) {
-         if (var33 > var19[var34]) {
-            var20 = var34;
-            var33 = var19[var34];
+      int var22;
+      for(var22 = 0; var22 < 8; ++var22) {
+         boolean var23 = (var22 & 4) == 0;
+         boolean var24 = (var22 & 2) == 0;
+         boolean var25 = (var22 & 1) == 0;
+         int var26 = var23 ? var10 : var10 + 1;
+         int var27 = var24 ? var11 : var11 + 1;
+         int var28 = var25 ? var12 : var12 + 1;
+         double var29 = var23 ? var13 : var13 - 1.0D;
+         double var31 = var24 ? var15 : var15 - 1.0D;
+         double var33 = var25 ? var17 : var17 - 1.0D;
+         double var35 = getFiddledDistance(var1, var26, var27, var28, var29, var31, var33);
+         if (var20 > var35) {
+            var19 = var22;
+            var20 = var35;
          }
       }
 
-      var34 = (var20 & 4) == 0 ? var10 : var10 + 1;
-      var24 = (var20 & 2) == 0 ? var11 : var11 + 1;
-      var25 = (var20 & 1) == 0 ? var12 : var12 + 1;
-      return var6.getNoiseBiome(var34, var24, var25);
+      var22 = (var19 & 4) == 0 ? var10 : var10 + 1;
+      int var37 = (var19 & 2) == 0 ? var11 : var11 + 1;
+      int var38 = (var19 & 1) == 0 ? var12 : var12 + 1;
+      return var6.getNoiseBiome(var22, var37, var38);
    }
 
    private static double getFiddledDistance(long var0, int var2, int var3, int var4, double var5, double var7, double var9) {
       long var11 = LinearCongruentialGenerator.next(var0, (long)var2);
       var11 = LinearCongruentialGenerator.next(var11, (long)var3);
