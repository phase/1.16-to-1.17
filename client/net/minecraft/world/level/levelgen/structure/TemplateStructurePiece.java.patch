--- net/minecraft/world/level/levelgen/structure/TemplateStructurePiece.java
+++ net/minecraft/world/level/levelgen/structure/TemplateStructurePiece.java
@@ -3,56 +3,69 @@
 import com.mojang.brigadier.StringReader;
 import com.mojang.brigadier.exceptions.CommandSyntaxException;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Random;
+import java.util.function.Function;
 import net.minecraft.commands.arguments.blocks.BlockStateParser;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.nbt.CompoundTag;
+import net.minecraft.resources.ResourceLocation;
+import net.minecraft.server.level.ServerLevel;
 import net.minecraft.world.level.ChunkPos;
 import net.minecraft.world.level.ServerLevelAccessor;
 import net.minecraft.world.level.StructureFeatureManager;
 import net.minecraft.world.level.WorldGenLevel;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.Rotation;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.block.state.properties.StructureMode;
 import net.minecraft.world.level.chunk.ChunkGenerator;
 import net.minecraft.world.level.levelgen.feature.StructurePieceType;
+import net.minecraft.world.level.levelgen.structure.templatesystem.StructureManager;
 import net.minecraft.world.level.levelgen.structure.templatesystem.StructurePlaceSettings;
 import net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
 public abstract class TemplateStructurePiece extends StructurePiece {
    private static final Logger LOGGER = LogManager.getLogger();
+   protected final String templateName;
    protected StructureTemplate template;
    protected StructurePlaceSettings placeSettings;
    protected BlockPos templatePosition;
 
-   public TemplateStructurePiece(StructurePieceType var1, int var2) {
-      super(var1, var2);
+   public TemplateStructurePiece(StructurePieceType var1, int var2, StructureManager var3, ResourceLocation var4, String var5, StructurePlaceSettings var6, BlockPos var7) {
+      super(var1, var2, var3.getOrCreate(var4).getBoundingBox(var6, var7));
+      this.setOrientation(Direction.NORTH);
+      this.templateName = var5;
+      this.templatePosition = var7;
+      this.template = var3.getOrCreate(var4);
+      this.placeSettings = var6;
    }
 
-   public TemplateStructurePiece(StructurePieceType var1, CompoundTag var2) {
+   public TemplateStructurePiece(StructurePieceType var1, CompoundTag var2, ServerLevel var3, Function<ResourceLocation, StructurePlaceSettings> var4) {
       super(var1, var2);
+      this.setOrientation(Direction.NORTH);
+      this.templateName = var2.getString("Template");
       this.templatePosition = new BlockPos(var2.getInt("TPX"), var2.getInt("TPY"), var2.getInt("TPZ"));
+      ResourceLocation var5 = this.makeTemplateLocation();
+      this.template = var3.getStructureManager().getOrCreate(var5);
+      this.placeSettings = (StructurePlaceSettings)var4.apply(var5);
+      this.boundingBox = this.template.getBoundingBox(this.placeSettings, this.templatePosition);
    }
 
-   protected void setup(StructureTemplate var1, BlockPos var2, StructurePlaceSettings var3) {
-      this.template = var1;
-      this.setOrientation(Direction.NORTH);
-      this.templatePosition = var2;
-      this.placeSettings = var3;
-      this.boundingBox = var1.getBoundingBox(var3, var2);
+   protected ResourceLocation makeTemplateLocation() {
+      return new ResourceLocation(this.templateName);
    }
 
-   protected void addAdditionalSaveData(CompoundTag var1) {
-      var1.putInt("TPX", this.templatePosition.getX());
-      var1.putInt("TPY", this.templatePosition.getY());
-      var1.putInt("TPZ", this.templatePosition.getZ());
+   protected void addAdditionalSaveData(ServerLevel var1, CompoundTag var2) {
+      var2.putInt("TPX", this.templatePosition.getX());
+      var2.putInt("TPY", this.templatePosition.getY());
+      var2.putInt("TPZ", this.templatePosition.getZ());
+      var2.putString("Template", this.templateName);
    }
 
    public boolean postProcess(WorldGenLevel var1, StructureFeatureManager var2, ChunkGenerator var3, Random var4, BoundingBox var5, ChunkPos var6, BlockPos var7) {
       this.placeSettings.setBoundingBox(var5);
       this.boundingBox = this.template.getBoundingBox(this.placeSettings, this.templatePosition);
