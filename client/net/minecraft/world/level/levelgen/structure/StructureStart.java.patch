--- net/minecraft/world/level/levelgen/structure/StructureStart.java
+++ net/minecraft/world/level/levelgen/structure/StructureStart.java
@@ -5,14 +5,16 @@
 import java.util.List;
 import java.util.Random;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Registry;
 import net.minecraft.core.RegistryAccess;
+import net.minecraft.core.SectionPos;
 import net.minecraft.core.Vec3i;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.nbt.ListTag;
 import net.minecraft.world.level.ChunkPos;
+import net.minecraft.world.level.LevelHeightAccessor;
 import net.minecraft.world.level.StructureFeatureManager;
 import net.minecraft.world.level.WorldGenLevel;
 import net.minecraft.world.level.biome.Biome;
 import net.minecraft.world.level.chunk.ChunkGenerator;
 import net.minecraft.world.level.levelgen.WorldgenRandom;
@@ -39,11 +41,11 @@
       this.random = new WorldgenRandom();
       this.random.setLargeFeatureSeed(var6, var2, var3);
       this.boundingBox = var4;
    }
 
-   public abstract void generatePieces(RegistryAccess var1, ChunkGenerator var2, StructureManager var3, int var4, int var5, Biome var6, C var7);
+   public abstract void generatePieces(RegistryAccess var1, ChunkGenerator var2, StructureManager var3, int var4, int var5, Biome var6, C var7, LevelHeightAccessor var8);
 
    public BoundingBox getBoundingBox() {
       return this.boundingBox;
    }
 
@@ -161,11 +163,11 @@
    public int getChunkZ() {
       return this.chunkZ;
    }
 
    public BlockPos getLocatePos() {
-      return new BlockPos(this.chunkX << 4, 0, this.chunkZ << 4);
+      return new BlockPos(SectionPos.sectionToBlockCoord(this.chunkX), 0, SectionPos.sectionToBlockCoord(this.chunkZ));
    }
 
    public boolean canBeReferenced() {
       return this.references < this.getMaxReferences();
    }
@@ -186,10 +188,10 @@
       return this.feature;
    }
 
    static {
       INVALID_START = new StructureStart<MineshaftConfiguration>(StructureFeature.MINESHAFT, 0, 0, BoundingBox.getUnknownBox(), 0, 0L) {
-         public void generatePieces(RegistryAccess var1, ChunkGenerator var2, StructureManager var3, int var4, int var5, Biome var6, MineshaftConfiguration var7) {
+         public void generatePieces(RegistryAccess var1, ChunkGenerator var2, StructureManager var3, int var4, int var5, Biome var6, MineshaftConfiguration var7, LevelHeightAccessor var8) {
          }
       };
    }
 }
