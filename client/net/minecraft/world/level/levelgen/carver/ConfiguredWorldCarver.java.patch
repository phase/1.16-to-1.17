--- net/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver.java
+++ net/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver.java
@@ -7,10 +7,11 @@
 import java.util.function.Function;
 import java.util.function.Supplier;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Registry;
 import net.minecraft.resources.RegistryFileCodec;
+import net.minecraft.world.level.ChunkPos;
 import net.minecraft.world.level.biome.Biome;
 import net.minecraft.world.level.chunk.ChunkAccess;
 
 public class ConfiguredWorldCarver<WC extends CarverConfiguration> {
    public static final Codec<ConfiguredWorldCarver<?>> DIRECT_CODEC;
@@ -26,16 +27,16 @@
 
    public WC config() {
       return this.config;
    }
 
-   public boolean isStartChunk(Random var1, int var2, int var3) {
-      return this.worldCarver.isStartChunk(var1, var2, var3, this.config);
+   public boolean isStartChunk(Random var1) {
+      return this.worldCarver.isStartChunk(this.config, var1);
    }
 
-   public boolean carve(ChunkAccess var1, Function<BlockPos, Biome> var2, Random var3, int var4, int var5, int var6, int var7, int var8, BitSet var9) {
-      return this.worldCarver.carve(var1, var2, var3, var4, var5, var6, var7, var8, var9, this.config);
+   public boolean carve(CarvingContext var1, ChunkAccess var2, Function<BlockPos, Biome> var3, Random var4, int var5, ChunkPos var6, BitSet var7) {
+      return this.worldCarver.carve(var1, this.config, var2, var3, var4, var5, var6, var7);
    }
 
    static {
       DIRECT_CODEC = Registry.CARVER.dispatch((var0) -> {
          return var0.worldCarver;
