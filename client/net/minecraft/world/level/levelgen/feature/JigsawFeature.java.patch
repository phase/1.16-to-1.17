--- net/minecraft/world/level/levelgen/feature/JigsawFeature.java
+++ net/minecraft/world/level/levelgen/feature/JigsawFeature.java
@@ -2,16 +2,18 @@
 
 import com.mojang.serialization.Codec;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.RegistryAccess;
 import net.minecraft.data.worldgen.Pools;
+import net.minecraft.world.level.ChunkPos;
+import net.minecraft.world.level.LevelHeightAccessor;
 import net.minecraft.world.level.biome.Biome;
 import net.minecraft.world.level.chunk.ChunkGenerator;
 import net.minecraft.world.level.levelgen.feature.configurations.JigsawConfiguration;
 import net.minecraft.world.level.levelgen.feature.structures.JigsawPlacement;
-import net.minecraft.world.level.levelgen.structure.BeardedStructureStart;
 import net.minecraft.world.level.levelgen.structure.BoundingBox;
+import net.minecraft.world.level.levelgen.structure.NoiseAffectingStructureStart;
 import net.minecraft.world.level.levelgen.structure.PoolElementStructurePiece;
 import net.minecraft.world.level.levelgen.structure.templatesystem.StructureManager;
 
 public class JigsawFeature extends StructureFeature<JigsawConfiguration> {
    private final int startY;
@@ -24,26 +26,26 @@
       this.doExpansionHack = var3;
       this.projectStartToHeightmap = var4;
    }
 
    public StructureFeature.StructureStartFactory<JigsawConfiguration> getStartFactory() {
-      return (var1, var2, var3, var4, var5, var6) -> {
-         return new JigsawFeature.FeatureStart(this, var2, var3, var4, var5, var6);
+      return (var1, var2, var3, var4, var5) -> {
+         return new JigsawFeature.FeatureStart(this, var2, var3, var4, var5);
       };
    }
 
-   public static class FeatureStart extends BeardedStructureStart<JigsawConfiguration> {
+   public static class FeatureStart extends NoiseAffectingStructureStart<JigsawConfiguration> {
       private final JigsawFeature feature;
 
-      public FeatureStart(JigsawFeature var1, int var2, int var3, BoundingBox var4, int var5, long var6) {
-         super(var1, var2, var3, var4, var5, var6);
+      public FeatureStart(JigsawFeature var1, ChunkPos var2, BoundingBox var3, int var4, long var5) {
+         super(var1, var2, var3, var4, var5);
          this.feature = var1;
       }
 
-      public void generatePieces(RegistryAccess var1, ChunkGenerator var2, StructureManager var3, int var4, int var5, Biome var6, JigsawConfiguration var7) {
-         BlockPos var8 = new BlockPos(var4 * 16, this.feature.startY, var5 * 16);
+      public void generatePieces(RegistryAccess var1, ChunkGenerator var2, StructureManager var3, ChunkPos var4, Biome var5, JigsawConfiguration var6, LevelHeightAccessor var7) {
+         BlockPos var8 = new BlockPos(var4.getMinBlockX(), this.feature.startY, var4.getMinBlockZ());
          Pools.bootstrap();
-         JigsawPlacement.addPieces(var1, var7, PoolElementStructurePiece::new, var2, var3, var8, this.pieces, this.random, this.feature.doExpansionHack, this.feature.projectStartToHeightmap);
+         JigsawPlacement.addPieces(var1, var6, PoolElementStructurePiece::new, var2, var3, var8, this.pieces, this.random, this.feature.doExpansionHack, this.feature.projectStartToHeightmap, var7);
          this.calculateBoundingBox();
       }
    }
 }
