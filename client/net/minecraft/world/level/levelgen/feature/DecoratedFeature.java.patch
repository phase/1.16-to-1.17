--- net/minecraft/world/level/levelgen/feature/DecoratedFeature.java
+++ net/minecraft/world/level/levelgen/feature/DecoratedFeature.java
@@ -13,19 +13,25 @@
 public class DecoratedFeature extends Feature<DecoratedFeatureConfiguration> {
    public DecoratedFeature(Codec<DecoratedFeatureConfiguration> var1) {
       super(var1);
    }
 
-   public boolean place(WorldGenLevel var1, ChunkGenerator var2, Random var3, BlockPos var4, DecoratedFeatureConfiguration var5) {
-      MutableBoolean var6 = new MutableBoolean();
-      var5.decorator.getPositions(new DecorationContext(var1, var2), var3, var4).forEach((var5x) -> {
-         if (((ConfiguredFeature)var5.feature.get()).place(var1, var2, var3, var5x)) {
-            var6.setTrue();
+   public boolean place(FeaturePlaceContext<DecoratedFeatureConfiguration> var1) {
+      MutableBoolean var2 = new MutableBoolean();
+      WorldGenLevel var3 = var1.level();
+      DecoratedFeatureConfiguration var4 = (DecoratedFeatureConfiguration)var1.config();
+      ChunkGenerator var5 = var1.chunkGenerator();
+      Random var6 = var1.random();
+      BlockPos var7 = var1.origin();
+      ConfiguredFeature var8 = (ConfiguredFeature)var4.feature.get();
+      var4.decorator.getPositions(new DecorationContext(var3, var5), var6, var7).forEach((var5x) -> {
+         if (var8.place(var3, var5, var6, var5x)) {
+            var2.setTrue();
          }
 
       });
-      return var6.isTrue();
+      return var2.isTrue();
    }
 
    public String toString() {
       return String.format("< %s [%s] >", this.getClass().getSimpleName(), Registry.FEATURE.getKey(this));
    }
