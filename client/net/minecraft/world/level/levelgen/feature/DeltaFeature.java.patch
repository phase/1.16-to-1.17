--- net/minecraft/world/level/levelgen/feature/DeltaFeature.java
+++ net/minecraft/world/level/levelgen/feature/DeltaFeature.java
@@ -9,53 +9,56 @@
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.WorldGenLevel;
 import net.minecraft.world.level.block.Block;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.state.BlockState;
-import net.minecraft.world.level.chunk.ChunkGenerator;
 import net.minecraft.world.level.levelgen.feature.configurations.DeltaFeatureConfiguration;
 
 public class DeltaFeature extends Feature<DeltaFeatureConfiguration> {
    private static final ImmutableList<Block> CANNOT_REPLACE;
    private static final Direction[] DIRECTIONS;
 
    public DeltaFeature(Codec<DeltaFeatureConfiguration> var1) {
       super(var1);
    }
 
-   public boolean place(WorldGenLevel var1, ChunkGenerator var2, Random var3, BlockPos var4, DeltaFeatureConfiguration var5) {
-      boolean var6 = false;
+   public boolean place(FeaturePlaceContext<DeltaFeatureConfiguration> var1) {
+      boolean var2 = false;
+      Random var3 = var1.random();
+      WorldGenLevel var4 = var1.level();
+      DeltaFeatureConfiguration var5 = (DeltaFeatureConfiguration)var1.config();
+      BlockPos var6 = var1.origin();
       boolean var7 = var3.nextDouble() < 0.9D;
       int var8 = var7 ? var5.rimSize().sample(var3) : 0;
       int var9 = var7 ? var5.rimSize().sample(var3) : 0;
       boolean var10 = var7 && var8 != 0 && var9 != 0;
       int var11 = var5.size().sample(var3);
       int var12 = var5.size().sample(var3);
       int var13 = Math.max(var11, var12);
-      Iterator var14 = BlockPos.withinManhattan(var4, var11, 0, var12).iterator();
+      Iterator var14 = BlockPos.withinManhattan(var6, var11, 0, var12).iterator();
 
       while(var14.hasNext()) {
          BlockPos var15 = (BlockPos)var14.next();
-         if (var15.distManhattan(var4) > var13) {
+         if (var15.distManhattan(var6) > var13) {
             break;
          }
 
-         if (isClear(var1, var15, var5)) {
+         if (isClear(var4, var15, var5)) {
             if (var10) {
-               var6 = true;
-               this.setBlock(var1, var15, var5.rim());
+               var2 = true;
+               this.setBlock(var4, var15, var5.rim());
             }
 
             BlockPos var16 = var15.offset(var8, 0, var9);
-            if (isClear(var1, var16, var5)) {
-               var6 = true;
-               this.setBlock(var1, var16, var5.contents());
+            if (isClear(var4, var16, var5)) {
+               var2 = true;
+               this.setBlock(var4, var16, var5.contents());
             }
          }
       }
 
-      return var6;
+      return var2;
    }
 
    private static boolean isClear(LevelAccessor var0, BlockPos var1, DeltaFeatureConfiguration var2) {
       BlockState var3 = var0.getBlockState(var1);
       if (var3.is(var2.contents().getBlock())) {
