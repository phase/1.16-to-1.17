--- net/minecraft/world/level/levelgen/feature/TwistingVinesFeature.java
+++ net/minecraft/world/level/levelgen/feature/TwistingVinesFeature.java
@@ -3,26 +3,23 @@
 import com.mojang.serialization.Codec;
 import java.util.Random;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.util.Mth;
-import net.minecraft.world.level.Level;
 import net.minecraft.world.level.LevelAccessor;
-import net.minecraft.world.level.WorldGenLevel;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.GrowingPlantHeadBlock;
 import net.minecraft.world.level.block.state.BlockState;
-import net.minecraft.world.level.chunk.ChunkGenerator;
 import net.minecraft.world.level.levelgen.feature.configurations.NoneFeatureConfiguration;
 
 public class TwistingVinesFeature extends Feature<NoneFeatureConfiguration> {
    public TwistingVinesFeature(Codec<NoneFeatureConfiguration> var1) {
       super(var1);
    }
 
-   public boolean place(WorldGenLevel var1, ChunkGenerator var2, Random var3, BlockPos var4, NoneFeatureConfiguration var5) {
-      return place(var1, var3, var4, 8, 4, 8);
+   public boolean place(FeaturePlaceContext<NoneFeatureConfiguration> var1) {
+      return place(var1.level(), var1.random(), var1.origin(), 8, 4, 8);
    }
 
    public static boolean place(LevelAccessor var0, Random var1, BlockPos var2, int var3, int var4, int var5) {
       if (isInvalidPlacementLocation(var0, var2)) {
          return false;
@@ -56,11 +53,11 @@
    }
 
    private static boolean findFirstAirBlockAboveGround(LevelAccessor var0, BlockPos.MutableBlockPos var1) {
       do {
          var1.move(0, -1, 0);
-         if (Level.isOutsideBuildHeight(var1)) {
+         if (var0.isOutsideBuildHeight(var1)) {
             return false;
          }
       } while(var0.getBlockState(var1).isAir());
 
       var1.move(0, 1, 0);
