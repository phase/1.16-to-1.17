--- net/minecraft/world/level/levelgen/feature/HugeFungusFeature.java
+++ net/minecraft/world/level/levelgen/feature/HugeFungusFeature.java
@@ -12,41 +12,48 @@
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.chunk.ChunkGenerator;
 import net.minecraft.world.level.material.Material;
 
 public class HugeFungusFeature extends Feature<HugeFungusConfiguration> {
+   private static final float HUGE_PROBABILITY = 0.06F;
+
    public HugeFungusFeature(Codec<HugeFungusConfiguration> var1) {
       super(var1);
    }
 
-   public boolean place(WorldGenLevel var1, ChunkGenerator var2, Random var3, BlockPos var4, HugeFungusConfiguration var5) {
-      Block var6 = var5.validBaseState.getBlock();
-      BlockPos var7 = null;
-      Block var8 = var1.getBlockState(var4.below()).getBlock();
-      if (var8 == var6) {
-         var7 = var4;
+   public boolean place(FeaturePlaceContext<HugeFungusConfiguration> var1) {
+      WorldGenLevel var2 = var1.level();
+      BlockPos var3 = var1.origin();
+      Random var4 = var1.random();
+      ChunkGenerator var5 = var1.chunkGenerator();
+      HugeFungusConfiguration var6 = (HugeFungusConfiguration)var1.config();
+      Block var7 = var6.validBaseState.getBlock();
+      BlockPos var8 = null;
+      BlockState var9 = var2.getBlockState(var3.below());
+      if (var9.is(var7)) {
+         var8 = var3;
       }
 
-      if (var7 == null) {
+      if (var8 == null) {
          return false;
       } else {
-         int var9 = Mth.nextInt(var3, 4, 13);
-         if (var3.nextInt(12) == 0) {
-            var9 *= 2;
+         int var10 = Mth.nextInt(var4, 4, 13);
+         if (var4.nextInt(12) == 0) {
+            var10 *= 2;
          }
 
-         if (!var5.planted) {
-            int var10 = var2.getGenDepth();
-            if (var7.getY() + var9 + 1 >= var10) {
+         if (!var6.planted) {
+            int var11 = var5.getGenDepth();
+            if (var8.getY() + var10 + 1 >= var11) {
                return false;
             }
          }
 
-         boolean var11 = !var5.planted && var3.nextFloat() < 0.06F;
-         var1.setBlock(var4, Blocks.AIR.defaultBlockState(), 4);
-         this.placeStem(var1, var3, var5, var7, var9, var11);
-         this.placeHat(var1, var3, var5, var7, var9, var11);
+         boolean var12 = !var6.planted && var4.nextFloat() < 0.06F;
+         var2.setBlock(var3, Blocks.AIR.defaultBlockState(), 4);
+         this.placeStem(var2, var4, var6, var8, var10, var12);
+         this.placeHat(var2, var4, var6, var8, var10, var12);
          return true;
       }
    }
 
    private static boolean isReplaceable(LevelAccessor var0, BlockPos var1, boolean var2) {
