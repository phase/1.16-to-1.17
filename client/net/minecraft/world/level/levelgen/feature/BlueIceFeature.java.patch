--- net/minecraft/world/level/levelgen/feature/BlueIceFeature.java
+++ net/minecraft/world/level/levelgen/feature/BlueIceFeature.java
@@ -5,62 +5,64 @@
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.world.level.WorldGenLevel;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.state.BlockState;
-import net.minecraft.world.level.chunk.ChunkGenerator;
 import net.minecraft.world.level.levelgen.feature.configurations.NoneFeatureConfiguration;
 import net.minecraft.world.level.material.Material;
 
 public class BlueIceFeature extends Feature<NoneFeatureConfiguration> {
    public BlueIceFeature(Codec<NoneFeatureConfiguration> var1) {
       super(var1);
    }
 
-   public boolean place(WorldGenLevel var1, ChunkGenerator var2, Random var3, BlockPos var4, NoneFeatureConfiguration var5) {
-      if (var4.getY() > var1.getSeaLevel() - 1) {
+   public boolean place(FeaturePlaceContext<NoneFeatureConfiguration> var1) {
+      BlockPos var2 = var1.origin();
+      WorldGenLevel var3 = var1.level();
+      Random var4 = var1.random();
+      if (var2.getY() > var3.getSeaLevel() - 1) {
          return false;
-      } else if (!var1.getBlockState(var4).is(Blocks.WATER) && !var1.getBlockState(var4.below()).is(Blocks.WATER)) {
+      } else if (!var3.getBlockState(var2).is(Blocks.WATER) && !var3.getBlockState(var2.below()).is(Blocks.WATER)) {
          return false;
       } else {
-         boolean var6 = false;
-         Direction[] var7 = Direction.values();
-         int var8 = var7.length;
+         boolean var5 = false;
+         Direction[] var6 = Direction.values();
+         int var7 = var6.length;
 
-         int var9;
-         for(var9 = 0; var9 < var8; ++var9) {
-            Direction var10 = var7[var9];
-            if (var10 != Direction.DOWN && var1.getBlockState(var4.relative(var10)).is(Blocks.PACKED_ICE)) {
-               var6 = true;
+         int var8;
+         for(var8 = 0; var8 < var7; ++var8) {
+            Direction var9 = var6[var8];
+            if (var9 != Direction.DOWN && var3.getBlockState(var2.relative(var9)).is(Blocks.PACKED_ICE)) {
+               var5 = true;
                break;
             }
          }
 
-         if (!var6) {
+         if (!var5) {
             return false;
          } else {
-            var1.setBlock(var4, Blocks.BLUE_ICE.defaultBlockState(), 2);
+            var3.setBlock(var2, Blocks.BLUE_ICE.defaultBlockState(), 2);
 
-            for(int var17 = 0; var17 < 200; ++var17) {
-               var8 = var3.nextInt(5) - var3.nextInt(6);
-               var9 = 3;
-               if (var8 < 2) {
-                  var9 += var8 / 2;
+            for(int var16 = 0; var16 < 200; ++var16) {
+               var7 = var4.nextInt(5) - var4.nextInt(6);
+               var8 = 3;
+               if (var7 < 2) {
+                  var8 += var7 / 2;
                }
 
-               if (var9 >= 1) {
-                  BlockPos var18 = var4.offset(var3.nextInt(var9) - var3.nextInt(var9), var8, var3.nextInt(var9) - var3.nextInt(var9));
-                  BlockState var11 = var1.getBlockState(var18);
-                  if (var11.getMaterial() == Material.AIR || var11.is(Blocks.WATER) || var11.is(Blocks.PACKED_ICE) || var11.is(Blocks.ICE)) {
-                     Direction[] var12 = Direction.values();
-                     int var13 = var12.length;
+               if (var8 >= 1) {
+                  BlockPos var17 = var2.offset(var4.nextInt(var8) - var4.nextInt(var8), var7, var4.nextInt(var8) - var4.nextInt(var8));
+                  BlockState var10 = var3.getBlockState(var17);
+                  if (var10.getMaterial() == Material.AIR || var10.is(Blocks.WATER) || var10.is(Blocks.PACKED_ICE) || var10.is(Blocks.ICE)) {
+                     Direction[] var11 = Direction.values();
+                     int var12 = var11.length;
 
-                     for(int var14 = 0; var14 < var13; ++var14) {
-                        Direction var15 = var12[var14];
-                        BlockState var16 = var1.getBlockState(var18.relative(var15));
-                        if (var16.is(Blocks.BLUE_ICE)) {
-                           var1.setBlock(var18, Blocks.BLUE_ICE.defaultBlockState(), 2);
+                     for(int var13 = 0; var13 < var12; ++var13) {
+                        Direction var14 = var11[var13];
+                        BlockState var15 = var3.getBlockState(var17.relative(var14));
+                        if (var15.is(Blocks.BLUE_ICE)) {
+                           var3.setBlock(var17, Blocks.BLUE_ICE.defaultBlockState(), 2);
                            break;
                         }
                      }
                   }
                }
