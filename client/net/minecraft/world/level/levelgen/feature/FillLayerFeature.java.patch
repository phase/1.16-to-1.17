--- net/minecraft/world/level/levelgen/feature/FillLayerFeature.java
+++ net/minecraft/world/level/levelgen/feature/FillLayerFeature.java
@@ -1,30 +1,31 @@
 package net.minecraft.world.level.levelgen.feature;
 
 import com.mojang.serialization.Codec;
-import java.util.Random;
 import net.minecraft.core.BlockPos;
 import net.minecraft.world.level.WorldGenLevel;
-import net.minecraft.world.level.chunk.ChunkGenerator;
 import net.minecraft.world.level.levelgen.feature.configurations.LayerConfiguration;
 
 public class FillLayerFeature extends Feature<LayerConfiguration> {
    public FillLayerFeature(Codec<LayerConfiguration> var1) {
       super(var1);
    }
 
-   public boolean place(WorldGenLevel var1, ChunkGenerator var2, Random var3, BlockPos var4, LayerConfiguration var5) {
-      BlockPos.MutableBlockPos var6 = new BlockPos.MutableBlockPos();
+   public boolean place(FeaturePlaceContext<LayerConfiguration> var1) {
+      BlockPos var2 = var1.origin();
+      LayerConfiguration var3 = (LayerConfiguration)var1.config();
+      WorldGenLevel var4 = var1.level();
+      BlockPos.MutableBlockPos var5 = new BlockPos.MutableBlockPos();
 
-      for(int var7 = 0; var7 < 16; ++var7) {
-         for(int var8 = 0; var8 < 16; ++var8) {
-            int var9 = var4.getX() + var7;
-            int var10 = var4.getZ() + var8;
-            int var11 = var5.height;
-            var6.set(var9, var11, var10);
-            if (var1.getBlockState(var6).isAir()) {
-               var1.setBlock(var6, var5.state, 2);
+      for(int var6 = 0; var6 < 16; ++var6) {
+         for(int var7 = 0; var7 < 16; ++var7) {
+            int var8 = var2.getX() + var6;
+            int var9 = var2.getZ() + var7;
+            int var10 = var3.height;
+            var5.set(var8, var10, var9);
+            if (var4.getBlockState(var5).isAir()) {
+               var4.setBlock(var5, var3.state, 2);
             }
          }
       }
 
       return true;
