--- net/minecraft/world/level/levelgen/feature/SwamplandHutFeature.java
+++ net/minecraft/world/level/levelgen/feature/SwamplandHutFeature.java
@@ -3,10 +3,12 @@
 import com.google.common.collect.ImmutableList;
 import com.mojang.serialization.Codec;
 import java.util.List;
 import net.minecraft.core.RegistryAccess;
 import net.minecraft.world.entity.EntityType;
+import net.minecraft.world.level.ChunkPos;
+import net.minecraft.world.level.LevelHeightAccessor;
 import net.minecraft.world.level.biome.Biome;
 import net.minecraft.world.level.biome.MobSpawnSettings;
 import net.minecraft.world.level.chunk.ChunkGenerator;
 import net.minecraft.world.level.levelgen.feature.configurations.NoneFeatureConfiguration;
 import net.minecraft.world.level.levelgen.structure.BoundingBox;
@@ -38,16 +40,16 @@
       SWAMPHUT_ENEMIES = ImmutableList.of(new MobSpawnSettings.SpawnerData(EntityType.WITCH, 1, 1, 1));
       SWAMPHUT_ANIMALS = ImmutableList.of(new MobSpawnSettings.SpawnerData(EntityType.CAT, 1, 1, 1));
    }
 
    public static class FeatureStart extends StructureStart<NoneFeatureConfiguration> {
-      public FeatureStart(StructureFeature<NoneFeatureConfiguration> var1, int var2, int var3, BoundingBox var4, int var5, long var6) {
-         super(var1, var2, var3, var4, var5, var6);
+      public FeatureStart(StructureFeature<NoneFeatureConfiguration> var1, ChunkPos var2, BoundingBox var3, int var4, long var5) {
+         super(var1, var2, var3, var4, var5);
       }
 
-      public void generatePieces(RegistryAccess var1, ChunkGenerator var2, StructureManager var3, int var4, int var5, Biome var6, NoneFeatureConfiguration var7) {
-         SwamplandHutPiece var8 = new SwamplandHutPiece(this.random, var4 * 16, var5 * 16);
+      public void generatePieces(RegistryAccess var1, ChunkGenerator var2, StructureManager var3, ChunkPos var4, Biome var5, NoneFeatureConfiguration var6, LevelHeightAccessor var7) {
+         SwamplandHutPiece var8 = new SwamplandHutPiece(this.random, var4.getMinBlockX(), var4.getMinBlockZ());
          this.pieces.add(var8);
          this.calculateBoundingBox();
       }
    }
 }
