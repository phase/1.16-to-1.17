--- net/minecraft/world/level/levelgen/surfacebuilders/BadlandsSurfaceBuilder.java
+++ net/minecraft/world/level/levelgen/surfacebuilders/BadlandsSurfaceBuilder.java
@@ -5,18 +5,18 @@
 import java.util.Arrays;
 import java.util.Random;
 import java.util.stream.IntStream;
 import net.minecraft.core.BlockPos;
 import net.minecraft.world.level.biome.Biome;
-import net.minecraft.world.level.block.Block;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.chunk.ChunkAccess;
 import net.minecraft.world.level.levelgen.WorldgenRandom;
 import net.minecraft.world.level.levelgen.synth.PerlinSimplexNoise;
 
 public class BadlandsSurfaceBuilder extends SurfaceBuilder<SurfaceBuilderBaseConfiguration> {
+   protected static final int MAX_CLAY_DEPTH = 15;
    private static final BlockState WHITE_TERRACOTTA;
    private static final BlockState ORANGE_TERRACOTTA;
    private static final BlockState TERRACOTTA;
    private static final BlockState YELLOW_TERRACOTTA;
    private static final BlockState BROWN_TERRACOTTA;
@@ -30,82 +30,81 @@
 
    public BadlandsSurfaceBuilder(Codec<SurfaceBuilderBaseConfiguration> var1) {
       super(var1);
    }
 
-   public void apply(Random var1, ChunkAccess var2, Biome var3, int var4, int var5, int var6, double var7, BlockState var9, BlockState var10, int var11, long var12, SurfaceBuilderBaseConfiguration var14) {
-      int var15 = var4 & 15;
-      int var16 = var5 & 15;
-      BlockState var17 = WHITE_TERRACOTTA;
-      SurfaceBuilderConfiguration var18 = var3.getGenerationSettings().getSurfaceBuilderConfig();
-      BlockState var19 = var18.getUnderMaterial();
-      BlockState var20 = var18.getTopMaterial();
-      BlockState var21 = var19;
-      int var22 = (int)(var7 / 3.0D + 3.0D + var1.nextDouble() * 0.25D);
-      boolean var23 = Math.cos(var7 / 3.0D * 3.141592653589793D) > 0.0D;
-      int var24 = -1;
-      boolean var25 = false;
-      int var26 = 0;
-      BlockPos.MutableBlockPos var27 = new BlockPos.MutableBlockPos();
+   public void apply(Random var1, ChunkAccess var2, Biome var3, int var4, int var5, int var6, double var7, BlockState var9, BlockState var10, int var11, int var12, long var13, SurfaceBuilderBaseConfiguration var15) {
+      int var16 = var4 & 15;
+      int var17 = var5 & 15;
+      BlockState var18 = WHITE_TERRACOTTA;
+      SurfaceBuilderConfiguration var19 = var3.getGenerationSettings().getSurfaceBuilderConfig();
+      BlockState var20 = var19.getUnderMaterial();
+      BlockState var21 = var19.getTopMaterial();
+      BlockState var22 = var20;
+      int var23 = (int)(var7 / 3.0D + 3.0D + var1.nextDouble() * 0.25D);
+      boolean var24 = Math.cos(var7 / 3.0D * 3.141592653589793D) > 0.0D;
+      int var25 = -1;
+      boolean var26 = false;
+      int var27 = 0;
+      BlockPos.MutableBlockPos var28 = new BlockPos.MutableBlockPos();
 
-      for(int var28 = var6; var28 >= 0; --var28) {
-         if (var26 < 15) {
-            var27.set(var15, var28, var16);
-            BlockState var29 = var2.getBlockState(var27);
-            if (var29.isAir()) {
-               var24 = -1;
-            } else if (var29.is(var9.getBlock())) {
-               if (var24 == -1) {
-                  var25 = false;
-                  if (var22 <= 0) {
-                     var17 = Blocks.AIR.defaultBlockState();
-                     var21 = var9;
-                  } else if (var28 >= var11 - 4 && var28 <= var11 + 1) {
-                     var17 = WHITE_TERRACOTTA;
-                     var21 = var19;
+      for(int var29 = var6; var29 >= var12; --var29) {
+         if (var27 < 15) {
+            var28.set(var16, var29, var17);
+            BlockState var30 = var2.getBlockState(var28);
+            if (var30.isAir()) {
+               var25 = -1;
+            } else if (var30.is(var9.getBlock())) {
+               if (var25 == -1) {
+                  var26 = false;
+                  if (var23 <= 0) {
+                     var18 = Blocks.AIR.defaultBlockState();
+                     var22 = var9;
+                  } else if (var29 >= var11 - 4 && var29 <= var11 + 1) {
+                     var18 = WHITE_TERRACOTTA;
+                     var22 = var20;
                   }
 
-                  if (var28 < var11 && (var17 == null || var17.isAir())) {
-                     var17 = var10;
+                  if (var29 < var11 && (var18 == null || var18.isAir())) {
+                     var18 = var10;
                   }
 
-                  var24 = var22 + Math.max(0, var28 - var11);
-                  if (var28 >= var11 - 1) {
-                     if (var28 > var11 + 3 + var22) {
-                        BlockState var30;
-                        if (var28 >= 64 && var28 <= 127) {
-                           if (var23) {
-                              var30 = TERRACOTTA;
+                  var25 = var23 + Math.max(0, var29 - var11);
+                  if (var29 >= var11 - 1) {
+                     if (var29 > var11 + 3 + var23) {
+                        BlockState var31;
+                        if (var29 >= 64 && var29 <= 127) {
+                           if (var24) {
+                              var31 = TERRACOTTA;
                            } else {
-                              var30 = this.getBand(var4, var28, var5);
+                              var31 = this.getBand(var4, var29, var5);
                            }
                         } else {
-                           var30 = ORANGE_TERRACOTTA;
+                           var31 = ORANGE_TERRACOTTA;
                         }
 
-                        var2.setBlockState(var27, var30, false);
+                        var2.setBlockState(var28, var31, false);
                      } else {
-                        var2.setBlockState(var27, var20, false);
-                        var25 = true;
+                        var2.setBlockState(var28, var21, false);
+                        var26 = true;
                      }
                   } else {
-                     var2.setBlockState(var27, var21, false);
-                     Block var31 = var21.getBlock();
-                     if (var31 == Blocks.WHITE_TERRACOTTA || var31 == Blocks.ORANGE_TERRACOTTA || var31 == Blocks.MAGENTA_TERRACOTTA || var31 == Blocks.LIGHT_BLUE_TERRACOTTA || var31 == Blocks.YELLOW_TERRACOTTA || var31 == Blocks.LIME_TERRACOTTA || var31 == Blocks.PINK_TERRACOTTA || var31 == Blocks.GRAY_TERRACOTTA || var31 == Blocks.LIGHT_GRAY_TERRACOTTA || var31 == Blocks.CYAN_TERRACOTTA || var31 == Blocks.PURPLE_TERRACOTTA || var31 == Blocks.BLUE_TERRACOTTA || var31 == Blocks.BROWN_TERRACOTTA || var31 == Blocks.GREEN_TERRACOTTA || var31 == Blocks.RED_TERRACOTTA || var31 == Blocks.BLACK_TERRACOTTA) {
-                        var2.setBlockState(var27, ORANGE_TERRACOTTA, false);
+                     var2.setBlockState(var28, var22, false);
+                     if (var22.is(Blocks.WHITE_TERRACOTTA) || var22.is(Blocks.ORANGE_TERRACOTTA) || var22.is(Blocks.MAGENTA_TERRACOTTA) || var22.is(Blocks.LIGHT_BLUE_TERRACOTTA) || var22.is(Blocks.YELLOW_TERRACOTTA) || var22.is(Blocks.LIME_TERRACOTTA) || var22.is(Blocks.PINK_TERRACOTTA) || var22.is(Blocks.GRAY_TERRACOTTA) || var22.is(Blocks.LIGHT_GRAY_TERRACOTTA) || var22.is(Blocks.CYAN_TERRACOTTA) || var22.is(Blocks.PURPLE_TERRACOTTA) || var22.is(Blocks.BLUE_TERRACOTTA) || var22.is(Blocks.BROWN_TERRACOTTA) || var22.is(Blocks.GREEN_TERRACOTTA) || var22.is(Blocks.RED_TERRACOTTA) || var22.is(Blocks.BLACK_TERRACOTTA)) {
+                        var2.setBlockState(var28, ORANGE_TERRACOTTA, false);
                      }
                   }
-               } else if (var24 > 0) {
-                  --var24;
-                  if (var25) {
-                     var2.setBlockState(var27, ORANGE_TERRACOTTA, false);
+               } else if (var25 > 0) {
+                  --var25;
+                  if (var26) {
+                     var2.setBlockState(var28, ORANGE_TERRACOTTA, false);
                   } else {
-                     var2.setBlockState(var27, this.getBand(var4, var28, var5), false);
+                     var2.setBlockState(var28, this.getBand(var4, var29, var5), false);
                   }
                }
 
-               ++var26;
+               ++var27;
             }
          }
       }
 
    }
