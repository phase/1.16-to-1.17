--- net/minecraft/world/level/block/SnowLayerBlock.java
+++ net/minecraft/world/level/block/SnowLayerBlock.java
@@ -19,12 +19,14 @@
 import net.minecraft.world.phys.shapes.CollisionContext;
 import net.minecraft.world.phys.shapes.Shapes;
 import net.minecraft.world.phys.shapes.VoxelShape;
 
 public class SnowLayerBlock extends Block {
+   public static final int MAX_HEIGHT = 8;
    public static final IntegerProperty LAYERS;
    protected static final VoxelShape[] SHAPE_BY_LAYER;
+   public static final int HEIGHT_IMPASSABLE = 5;
 
    protected SnowLayerBlock(BlockBehaviour.Properties var1) {
       super(var1);
       this.registerDefaultState((BlockState)((BlockState)this.stateDefinition.any()).setValue(LAYERS, 1));
    }
@@ -64,11 +66,11 @@
 
    public boolean canSurvive(BlockState var1, LevelReader var2, BlockPos var3) {
       BlockState var4 = var2.getBlockState(var3.below());
       if (!var4.is(Blocks.ICE) && !var4.is(Blocks.PACKED_ICE) && !var4.is(Blocks.BARRIER)) {
          if (!var4.is(Blocks.HONEY_BLOCK) && !var4.is(Blocks.SOUL_SAND)) {
-            return Block.isFaceFull(var4.getCollisionShape(var2, var3.below()), Direction.UP) || var4.getBlock() == this && (Integer)var4.getValue(LAYERS) == 8;
+            return Block.isFaceFull(var4.getCollisionShape(var2, var3.below()), Direction.UP) || var4.is(this) && (Integer)var4.getValue(LAYERS) == 8;
          } else {
             return true;
          }
       } else {
          return false;
@@ -87,11 +89,11 @@
 
    }
 
    public boolean canBeReplaced(BlockState var1, BlockPlaceContext var2) {
       int var3 = (Integer)var1.getValue(LAYERS);
-      if (var2.getItemInHand().getItem() == this.asItem() && var3 < 8) {
+      if (var2.getItemInHand().is(this.asItem()) && var3 < 8) {
          if (var2.replacingClickedOnBlock()) {
             return var2.getClickedFace() == Direction.UP;
          } else {
             return true;
          }
