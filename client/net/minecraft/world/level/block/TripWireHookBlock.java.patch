--- net/minecraft/world/level/block/TripWireHookBlock.java
+++ net/minecraft/world/level/block/TripWireHookBlock.java
@@ -20,17 +20,22 @@
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.block.state.StateDefinition;
 import net.minecraft.world.level.block.state.properties.BlockStateProperties;
 import net.minecraft.world.level.block.state.properties.BooleanProperty;
 import net.minecraft.world.level.block.state.properties.DirectionProperty;
+import net.minecraft.world.level.gameevent.GameEvent;
 import net.minecraft.world.phys.shapes.CollisionContext;
 import net.minecraft.world.phys.shapes.VoxelShape;
 
 public class TripWireHookBlock extends Block {
    public static final DirectionProperty FACING;
    public static final BooleanProperty POWERED;
    public static final BooleanProperty ATTACHED;
+   protected static final int WIRE_DIST_MIN = 1;
+   protected static final int WIRE_DIST_MAX = 42;
+   private static final int RECHECK_PERIOD = 10;
+   protected static final int AABB_OFFSET = 3;
    protected static final VoxelShape NORTH_AABB;
    protected static final VoxelShape SOUTH_AABB;
    protected static final VoxelShape WEST_AABB;
    protected static final VoxelShape EAST_AABB;
 
@@ -168,16 +173,20 @@
    }
 
    private void playSound(Level var1, BlockPos var2, boolean var3, boolean var4, boolean var5, boolean var6) {
       if (var4 && !var6) {
          var1.playSound((Player)null, (BlockPos)var2, SoundEvents.TRIPWIRE_CLICK_ON, SoundSource.BLOCKS, 0.4F, 0.6F);
+         var1.gameEvent(GameEvent.BLOCK_PRESS, var2);
       } else if (!var4 && var6) {
          var1.playSound((Player)null, (BlockPos)var2, SoundEvents.TRIPWIRE_CLICK_OFF, SoundSource.BLOCKS, 0.4F, 0.5F);
+         var1.gameEvent(GameEvent.BLOCK_UNPRESS, var2);
       } else if (var3 && !var5) {
          var1.playSound((Player)null, (BlockPos)var2, SoundEvents.TRIPWIRE_ATTACH, SoundSource.BLOCKS, 0.4F, 0.7F);
+         var1.gameEvent(GameEvent.BLOCK_ATTACH, var2);
       } else if (!var3 && var5) {
          var1.playSound((Player)null, (BlockPos)var2, SoundEvents.TRIPWIRE_DETACH, SoundSource.BLOCKS, 0.4F, 1.2F / (var1.random.nextFloat() * 0.2F + 0.9F));
+         var1.gameEvent(GameEvent.BLOCK_DETACH, var2);
       }
 
    }
 
    private void notifyNeighbors(Level var1, BlockPos var2, Direction var3) {
