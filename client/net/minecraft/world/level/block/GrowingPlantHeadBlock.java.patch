--- net/minecraft/world/level/block/GrowingPlantHeadBlock.java
+++ net/minecraft/world/level/block/GrowingPlantHeadBlock.java
@@ -35,16 +35,24 @@
 
    public void randomTick(BlockState var1, ServerLevel var2, BlockPos var3, Random var4) {
       if ((Integer)var1.getValue(AGE) < 25 && var4.nextDouble() < this.growPerTickProbability) {
          BlockPos var5 = var3.relative(this.growthDirection);
          if (this.canGrowInto(var2.getBlockState(var5))) {
-            var2.setBlockAndUpdate(var5, (BlockState)var1.cycle(AGE));
+            var2.setBlockAndUpdate(var5, this.getGrowIntoState(var1, var2.random));
          }
       }
 
    }
 
+   protected BlockState getGrowIntoState(BlockState var1, Random var2) {
+      return (BlockState)var1.cycle(AGE);
+   }
+
+   protected BlockState updateBodyAfterConvertedFromHead(BlockState var1, BlockState var2) {
+      return var2;
+   }
+
    public BlockState updateShape(BlockState var1, Direction var2, BlockState var3, LevelAccessor var4, BlockPos var5, BlockPos var6) {
       if (var2 == this.growthDirection.getOpposite() && !var1.canSurvive(var4, var5)) {
          var4.getBlockTicks().scheduleTick(var5, this, 1);
       }
 
@@ -53,11 +61,11 @@
             var4.getLiquidTicks().scheduleTick(var5, Fluids.WATER, Fluids.WATER.getTickDelay(var4));
          }
 
          return super.updateShape(var1, var2, var3, var4, var5, var6);
       } else {
-         return this.getBodyBlock().defaultBlockState();
+         return this.updateBodyAfterConvertedFromHead(var1, this.getBodyBlock().defaultBlockState());
       }
    }
 
    protected void createBlockStateDefinition(StateDefinition.Builder<Block, BlockState> var1) {
       var1.add(AGE);
