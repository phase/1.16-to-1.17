--- net/minecraft/world/level/block/ScaffoldingBlock.java
+++ net/minecraft/world/level/block/ScaffoldingBlock.java
@@ -22,14 +22,16 @@
 import net.minecraft.world.phys.shapes.CollisionContext;
 import net.minecraft.world.phys.shapes.Shapes;
 import net.minecraft.world.phys.shapes.VoxelShape;
 
 public class ScaffoldingBlock extends Block implements SimpleWaterloggedBlock {
+   private static final int TICK_DELAY = 1;
    private static final VoxelShape STABLE_SHAPE;
    private static final VoxelShape UNSTABLE_SHAPE;
    private static final VoxelShape UNSTABLE_SHAPE_BOTTOM = Block.box(0.0D, 0.0D, 0.0D, 16.0D, 2.0D, 16.0D);
    private static final VoxelShape BELOW_BLOCK = Shapes.block().move(0.0D, -1.0D, 0.0D);
+   public static final int STABILITY_MAX_DISTANCE = 7;
    public static final IntegerProperty DISTANCE;
    public static final BooleanProperty WATERLOGGED;
    public static final BooleanProperty BOTTOM;
 
    protected ScaffoldingBlock(BlockBehaviour.Properties var1) {
@@ -52,11 +54,11 @@
    public VoxelShape getInteractionShape(BlockState var1, BlockGetter var2, BlockPos var3) {
       return Shapes.block();
    }
 
    public boolean canBeReplaced(BlockState var1, BlockPlaceContext var2) {
-      return var2.getItemInHand().getItem() == this.asItem();
+      return var2.getItemInHand().is(this.asItem());
    }
 
    public BlockState getStateForPlacement(BlockPlaceContext var1) {
       BlockPos var2 = var1.getClickedPos();
       Level var3 = var1.getLevel();
@@ -130,11 +132,11 @@
 
       Iterator var5 = Direction.Plane.HORIZONTAL.iterator();
 
       while(var5.hasNext()) {
          Direction var6 = (Direction)var5.next();
-         BlockState var7 = var0.getBlockState(var2.setWithOffset(var1, var6));
+         BlockState var7 = var0.getBlockState(var2.setWithOffset(var1, (Direction)var6));
          if (var7.is(Blocks.SCAFFOLDING)) {
             var4 = Math.min(var4, (Integer)var7.getValue(DISTANCE) + 1);
             if (var4 == 1) {
                break;
             }
