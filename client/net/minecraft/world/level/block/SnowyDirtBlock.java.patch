--- net/minecraft/world/level/block/SnowyDirtBlock.java
+++ net/minecraft/world/level/block/SnowyDirtBlock.java
@@ -1,9 +1,10 @@
 package net.minecraft.world.level.block;
 
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
+import net.minecraft.tags.BlockTags;
 import net.minecraft.world.item.context.BlockPlaceContext;
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.block.state.BlockBehaviour;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.block.state.StateDefinition;
@@ -17,18 +18,22 @@
       super(var1);
       this.registerDefaultState((BlockState)((BlockState)this.stateDefinition.any()).setValue(SNOWY, false));
    }
 
    public BlockState updateShape(BlockState var1, Direction var2, BlockState var3, LevelAccessor var4, BlockPos var5, BlockPos var6) {
-      return var2 != Direction.UP ? super.updateShape(var1, var2, var3, var4, var5, var6) : (BlockState)var1.setValue(SNOWY, var3.is(Blocks.SNOW_BLOCK) || var3.is(Blocks.SNOW));
+      return var2 == Direction.UP ? (BlockState)var1.setValue(SNOWY, isSnowySetting(var3)) : super.updateShape(var1, var2, var3, var4, var5, var6);
    }
 
    public BlockState getStateForPlacement(BlockPlaceContext var1) {
       BlockState var2 = var1.getLevel().getBlockState(var1.getClickedPos().above());
-      return (BlockState)this.defaultBlockState().setValue(SNOWY, var2.is(Blocks.SNOW_BLOCK) || var2.is(Blocks.SNOW));
+      return (BlockState)this.defaultBlockState().setValue(SNOWY, isSnowySetting(var2));
    }
 
+   private static boolean isSnowySetting(BlockState var0) {
+      return var0.is(BlockTags.SNOW);
+   }
+
    protected void createBlockStateDefinition(StateDefinition.Builder<Block, BlockState> var1) {
       var1.add(SNOWY);
    }
 
    static {
