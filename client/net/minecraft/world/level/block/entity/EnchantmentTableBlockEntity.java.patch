--- net/minecraft/world/level/block/entity/EnchantmentTableBlockEntity.java
+++ net/minecraft/world/level/block/entity/EnchantmentTableBlockEntity.java
@@ -1,18 +1,20 @@
 package net.minecraft.world.level.block.entity;
 
 import java.util.Random;
 import javax.annotation.Nullable;
+import net.minecraft.core.BlockPos;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.network.chat.Component;
 import net.minecraft.network.chat.TranslatableComponent;
 import net.minecraft.util.Mth;
 import net.minecraft.world.Nameable;
 import net.minecraft.world.entity.player.Player;
+import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.state.BlockState;
 
-public class EnchantmentTableBlockEntity extends BlockEntity implements Nameable, TickableBlockEntity {
+public class EnchantmentTableBlockEntity extends BlockEntity implements Nameable {
    public int time;
    public float flip;
    public float oFlip;
    public float flipT;
    public float flipA;
@@ -22,12 +24,12 @@
    public float oRot;
    public float tRot;
    private static final Random RANDOM = new Random();
    private Component name;
 
-   public EnchantmentTableBlockEntity() {
-      super(BlockEntityType.ENCHANTING_TABLE);
+   public EnchantmentTableBlockEntity(BlockPos var1, BlockState var2) {
+      super(BlockEntityType.ENCHANTING_TABLE, var1, var2);
    }
 
    public CompoundTag save(CompoundTag var1) {
       super.save(var1);
       if (this.hasCustomName()) {
@@ -35,72 +37,72 @@
       }
 
       return var1;
    }
 
-   public void load(BlockState var1, CompoundTag var2) {
-      super.load(var1, var2);
-      if (var2.contains("CustomName", 8)) {
-         this.name = Component.Serializer.fromJson(var2.getString("CustomName"));
+   public void load(CompoundTag var1) {
+      super.load(var1);
+      if (var1.contains("CustomName", 8)) {
+         this.name = Component.Serializer.fromJson(var1.getString("CustomName"));
       }
 
    }
 
-   public void tick() {
-      this.oOpen = this.open;
-      this.oRot = this.rot;
-      Player var1 = this.level.getNearestPlayer((double)this.worldPosition.getX() + 0.5D, (double)this.worldPosition.getY() + 0.5D, (double)this.worldPosition.getZ() + 0.5D, 3.0D, false);
-      if (var1 != null) {
-         double var2 = var1.getX() - ((double)this.worldPosition.getX() + 0.5D);
-         double var4 = var1.getZ() - ((double)this.worldPosition.getZ() + 0.5D);
-         this.tRot = (float)Mth.atan2(var4, var2);
-         this.open += 0.1F;
-         if (this.open < 0.5F || RANDOM.nextInt(40) == 0) {
-            float var6 = this.flipT;
+   public static void bookAnimationTick(Level var0, BlockPos var1, BlockState var2, EnchantmentTableBlockEntity var3) {
+      var3.oOpen = var3.open;
+      var3.oRot = var3.rot;
+      Player var4 = var0.getNearestPlayer((double)var1.getX() + 0.5D, (double)var1.getY() + 0.5D, (double)var1.getZ() + 0.5D, 3.0D, false);
+      if (var4 != null) {
+         double var5 = var4.getX() - ((double)var1.getX() + 0.5D);
+         double var7 = var4.getZ() - ((double)var1.getZ() + 0.5D);
+         var3.tRot = (float)Mth.atan2(var7, var5);
+         var3.open += 0.1F;
+         if (var3.open < 0.5F || RANDOM.nextInt(40) == 0) {
+            float var9 = var3.flipT;
 
             do {
-               this.flipT += (float)(RANDOM.nextInt(4) - RANDOM.nextInt(4));
-            } while(var6 == this.flipT);
+               var3.flipT += (float)(RANDOM.nextInt(4) - RANDOM.nextInt(4));
+            } while(var9 == var3.flipT);
          }
       } else {
-         this.tRot += 0.02F;
-         this.open -= 0.1F;
+         var3.tRot += 0.02F;
+         var3.open -= 0.1F;
       }
 
-      while(this.rot >= 3.1415927F) {
-         this.rot -= 6.2831855F;
+      while(var3.rot >= 3.1415927F) {
+         var3.rot -= 6.2831855F;
       }
 
-      while(this.rot < -3.1415927F) {
-         this.rot += 6.2831855F;
+      while(var3.rot < -3.1415927F) {
+         var3.rot += 6.2831855F;
       }
 
-      while(this.tRot >= 3.1415927F) {
-         this.tRot -= 6.2831855F;
+      while(var3.tRot >= 3.1415927F) {
+         var3.tRot -= 6.2831855F;
       }
 
-      while(this.tRot < -3.1415927F) {
-         this.tRot += 6.2831855F;
+      while(var3.tRot < -3.1415927F) {
+         var3.tRot += 6.2831855F;
       }
 
-      float var7;
-      for(var7 = this.tRot - this.rot; var7 >= 3.1415927F; var7 -= 6.2831855F) {
+      float var10;
+      for(var10 = var3.tRot - var3.rot; var10 >= 3.1415927F; var10 -= 6.2831855F) {
       }
 
-      while(var7 < -3.1415927F) {
-         var7 += 6.2831855F;
+      while(var10 < -3.1415927F) {
+         var10 += 6.2831855F;
       }
 
-      this.rot += var7 * 0.4F;
-      this.open = Mth.clamp(this.open, 0.0F, 1.0F);
-      ++this.time;
-      this.oFlip = this.flip;
-      float var3 = (this.flipT - this.flip) * 0.4F;
-      float var8 = 0.2F;
-      var3 = Mth.clamp(var3, -0.2F, 0.2F);
-      this.flipA += (var3 - this.flipA) * 0.9F;
-      this.flip += this.flipA;
+      var3.rot += var10 * 0.4F;
+      var3.open = Mth.clamp(var3.open, 0.0F, 1.0F);
+      ++var3.time;
+      var3.oFlip = var3.flip;
+      float var6 = (var3.flipT - var3.flip) * 0.4F;
+      float var11 = 0.2F;
+      var6 = Mth.clamp(var6, -0.2F, 0.2F);
+      var3.flipA += (var6 - var3.flipA) * 0.9F;
+      var3.flip += var3.flipA;
    }
 
    public Component getName() {
       return (Component)(this.name != null ? this.name : new TranslatableComponent("container.enchant"));
    }
