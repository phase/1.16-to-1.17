--- net/minecraft/world/level/block/HoneyBlock.java
+++ net/minecraft/world/level/block/HoneyBlock.java
@@ -4,10 +4,11 @@
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.particles.BlockParticleOption;
 import net.minecraft.core.particles.ParticleTypes;
 import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.sounds.SoundEvents;
+import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.item.PrimedTnt;
 import net.minecraft.world.entity.vehicle.AbstractMinecart;
 import net.minecraft.world.entity.vehicle.Boat;
@@ -18,10 +19,14 @@
 import net.minecraft.world.phys.Vec3;
 import net.minecraft.world.phys.shapes.CollisionContext;
 import net.minecraft.world.phys.shapes.VoxelShape;
 
 public class HoneyBlock extends HalfTransparentBlock {
+   private static final double SLIDE_STARTS_WHEN_VERTICAL_SPEED_IS_AT_LEAST = 0.13D;
+   private static final double MIN_FALL_SPEED_TO_BE_CONSIDERED_SLIDING = 0.08D;
+   private static final double THROTTLE_SLIDE_SPEED_TO = 0.05D;
+   private static final int SLIDE_ADVANCEMENT_CHECK_INTERVAL = 20;
    protected static final VoxelShape SHAPE = Block.box(1.0D, 0.0D, 1.0D, 15.0D, 15.0D, 15.0D);
 
    public HoneyBlock(BlockBehaviour.Properties var1) {
       super(var1);
    }
@@ -32,18 +37,18 @@
 
    public VoxelShape getCollisionShape(BlockState var1, BlockGetter var2, BlockPos var3, CollisionContext var4) {
       return SHAPE;
    }
 
-   public void fallOn(Level var1, BlockPos var2, Entity var3, float var4) {
-      var3.playSound(SoundEvents.HONEY_BLOCK_SLIDE, 1.0F, 1.0F);
+   public void fallOn(Level var1, BlockState var2, BlockPos var3, Entity var4, float var5) {
+      var4.playSound(SoundEvents.HONEY_BLOCK_SLIDE, 1.0F, 1.0F);
       if (!var1.isClientSide) {
-         var1.broadcastEntityEvent(var3, (byte)54);
+         var1.broadcastEntityEvent(var4, (byte)54);
       }
 
-      if (var3.causeFallDamage(var4, 0.2F)) {
-         var3.playSound(this.soundType.getFallSound(), this.soundType.getVolume() * 0.5F, this.soundType.getPitch() * 0.75F);
+      if (var4.causeFallDamage(var5, 0.2F, DamageSource.FALL)) {
+         var4.playSound(this.soundType.getFallSound(), this.soundType.getVolume() * 0.5F, this.soundType.getPitch() * 0.75F);
       }
 
    }
 
    public void entityInside(BlockState var1, Level var2, BlockPos var3, Entity var4) {
