--- net/minecraft/world/level/block/DispenserBlock.java
+++ net/minecraft/world/level/block/DispenserBlock.java
@@ -22,11 +22,10 @@
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.inventory.AbstractContainerMenu;
 import net.minecraft.world.item.Item;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.context.BlockPlaceContext;
-import net.minecraft.world.level.BlockGetter;
 import net.minecraft.world.level.ItemLike;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.entity.BlockEntity;
 import net.minecraft.world.level.block.entity.DispenserBlockEntity;
 import net.minecraft.world.level.block.entity.DropperBlockEntity;
@@ -34,10 +33,11 @@
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.block.state.StateDefinition;
 import net.minecraft.world.level.block.state.properties.BlockStateProperties;
 import net.minecraft.world.level.block.state.properties.BooleanProperty;
 import net.minecraft.world.level.block.state.properties.DirectionProperty;
+import net.minecraft.world.level.gameevent.GameEvent;
 import net.minecraft.world.phys.BlockHitResult;
 
 public class DispenserBlock extends BaseEntityBlock {
    public static final DirectionProperty FACING;
    public static final BooleanProperty TRIGGERED;
@@ -74,10 +74,11 @@
       BlockSourceImpl var3 = new BlockSourceImpl(var1, var2);
       DispenserBlockEntity var4 = (DispenserBlockEntity)var3.getEntity();
       int var5 = var4.getRandomSlot();
       if (var5 < 0) {
          var1.levelEvent(1001, var2, 0);
+         var1.gameEvent(GameEvent.DISPENSE_FAIL, var2);
       } else {
          ItemStack var6 = var4.getItem(var5);
          DispenseItemBehavior var7 = this.getDispenseMethod(var6);
          if (var7 != DispenseItemBehavior.NOOP) {
             var4.setItem(var5, var7.dispense(var3, var6));
@@ -104,12 +105,12 @@
 
    public void tick(BlockState var1, ServerLevel var2, BlockPos var3, Random var4) {
       this.dispenseFrom(var2, var3);
    }
 
-   public BlockEntity newBlockEntity(BlockGetter var1) {
-      return new DispenserBlockEntity();
+   public BlockEntity newBlockEntity(BlockPos var1, BlockState var2) {
+      return new DispenserBlockEntity(var1, var2);
    }
 
    public BlockState getStateForPlacement(BlockPlaceContext var1) {
       return (BlockState)this.defaultBlockState().setValue(FACING, var1.getNearestLookingDirection().getOpposite());
    }
