--- net/minecraft/world/level/block/StemBlock.java
+++ net/minecraft/world/level/block/StemBlock.java
@@ -1,17 +1,17 @@
 package net.minecraft.world.level.block;
 
 import java.util.Random;
-import javax.annotation.Nullable;
+import java.util.function.Supplier;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.util.Mth;
 import net.minecraft.world.item.Item;
 import net.minecraft.world.item.ItemStack;
-import net.minecraft.world.item.Items;
 import net.minecraft.world.level.BlockGetter;
+import net.minecraft.world.level.ItemLike;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.state.BlockBehaviour;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.block.state.StateDefinition;
 import net.minecraft.world.level.block.state.properties.BlockStateProperties;
@@ -21,14 +21,16 @@
 
 public class StemBlock extends BushBlock implements BonemealableBlock {
    public static final IntegerProperty AGE;
    protected static final VoxelShape[] SHAPE_BY_AGE;
    private final StemGrownBlock fruit;
+   private final Supplier<Item> seedSupplier;
 
-   protected StemBlock(StemGrownBlock var1, BlockBehaviour.Properties var2) {
-      super(var2);
+   protected StemBlock(StemGrownBlock var1, Supplier<Item> var2, BlockBehaviour.Properties var3) {
+      super(var3);
       this.fruit = var1;
+      this.seedSupplier = var2;
       this.registerDefaultState((BlockState)((BlockState)this.stateDefinition.any()).setValue(AGE, 0));
    }
 
    public VoxelShape getShape(BlockState var1, BlockGetter var2, BlockPos var3, CollisionContext var4) {
       return SHAPE_BY_AGE[(Integer)var1.getValue(AGE)];
@@ -58,22 +60,12 @@
          }
 
       }
    }
 
-   @Nullable
-   protected Item getSeedItem() {
-      if (this.fruit == Blocks.PUMPKIN) {
-         return Items.PUMPKIN_SEEDS;
-      } else {
-         return this.fruit == Blocks.MELON ? Items.MELON_SEEDS : null;
-      }
-   }
-
    public ItemStack getCloneItemStack(BlockGetter var1, BlockPos var2, BlockState var3) {
-      Item var4 = this.getSeedItem();
-      return var4 == null ? ItemStack.EMPTY : new ItemStack(var4);
+      return new ItemStack((ItemLike)this.seedSupplier.get());
    }
 
    public boolean isValidBonemealTarget(BlockGetter var1, BlockPos var2, BlockState var3, boolean var4) {
       return (Integer)var3.getValue(AGE) != 7;
    }
