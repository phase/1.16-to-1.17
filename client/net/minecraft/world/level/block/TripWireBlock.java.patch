--- net/minecraft/world/level/block/TripWireBlock.java
+++ net/minecraft/world/level/block/TripWireBlock.java
@@ -18,10 +18,11 @@
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.block.state.StateDefinition;
 import net.minecraft.world.level.block.state.properties.BlockStateProperties;
 import net.minecraft.world.level.block.state.properties.BooleanProperty;
 import net.minecraft.world.level.block.state.properties.Property;
+import net.minecraft.world.level.gameevent.GameEvent;
 import net.minecraft.world.phys.shapes.CollisionContext;
 import net.minecraft.world.phys.shapes.VoxelShape;
 
 public class TripWireBlock extends Block {
    public static final BooleanProperty POWERED;
@@ -32,10 +33,11 @@
    public static final BooleanProperty SOUTH;
    public static final BooleanProperty WEST;
    private static final Map<Direction, BooleanProperty> PROPERTY_BY_DIRECTION;
    protected static final VoxelShape AABB;
    protected static final VoxelShape NOT_ATTACHED_AABB;
+   private static final int RECHECK_PERIOD = 10;
    private final TripWireHookBlock hook;
 
    public TripWireBlock(TripWireHookBlock var1, BlockBehaviour.Properties var2) {
       super(var2);
       this.registerDefaultState((BlockState)((BlockState)((BlockState)((BlockState)((BlockState)((BlockState)((BlockState)((BlockState)this.stateDefinition.any()).setValue(POWERED, false)).setValue(ATTACHED, false)).setValue(DISARMED, false)).setValue(NORTH, false)).setValue(EAST, false)).setValue(SOUTH, false)).setValue(WEST, false));
@@ -67,12 +69,13 @@
          this.updateSource(var2, var3, (BlockState)var1.setValue(POWERED, true));
       }
    }
 
    public void playerWillDestroy(Level var1, BlockPos var2, BlockState var3, Player var4) {
-      if (!var1.isClientSide && !var4.getMainHandItem().isEmpty() && var4.getMainHandItem().getItem() == Items.SHEARS) {
+      if (!var1.isClientSide && !var4.getMainHandItem().isEmpty() && var4.getMainHandItem().is(Items.SHEARS)) {
          var1.setBlock(var2, (BlockState)var3.setValue(DISARMED, true), 4);
+         var1.gameEvent(var4, GameEvent.SHEAR, var2);
       }
 
       super.playerWillDestroy(var1, var2, var3, var4);
    }
 
@@ -143,15 +146,14 @@
       }
 
    }
 
    public boolean shouldConnectTo(BlockState var1, Direction var2) {
-      Block var3 = var1.getBlock();
-      if (var3 == this.hook) {
+      if (var1.is(this.hook)) {
          return var1.getValue(TripWireHookBlock.FACING) == var2.getOpposite();
       } else {
-         return var3 == this;
+         return var1.is(this);
       }
    }
 
    public BlockState rotate(BlockState var1, Rotation var2) {
       switch(var2) {
