--- net/minecraft/world/effect/MobEffectInstance.java
+++ net/minecraft/world/effect/MobEffectInstance.java
@@ -10,11 +10,10 @@
 public class MobEffectInstance implements Comparable<MobEffectInstance> {
    private static final Logger LOGGER = LogManager.getLogger();
    private final MobEffect effect;
    private int duration;
    private int amplifier;
-   private boolean splash;
    private boolean ambient;
    private boolean noCounter;
    private boolean visible;
    private boolean showIcon;
    @Nullable
@@ -174,14 +173,10 @@
          var1 = this.getDescriptionId() + " x " + (this.amplifier + 1) + ", Duration: " + this.duration;
       } else {
          var1 = this.getDescriptionId() + ", Duration: " + this.duration;
       }
 
-      if (this.splash) {
-         var1 = var1 + ", Splash: true";
-      }
-
       if (!this.visible) {
          var1 = var1 + ", Particles: false";
       }
 
       if (!this.showIcon) {
@@ -196,19 +191,18 @@
          return true;
       } else if (!(var1 instanceof MobEffectInstance)) {
          return false;
       } else {
          MobEffectInstance var2 = (MobEffectInstance)var1;
-         return this.duration == var2.duration && this.amplifier == var2.amplifier && this.splash == var2.splash && this.ambient == var2.ambient && this.effect.equals(var2.effect);
+         return this.duration == var2.duration && this.amplifier == var2.amplifier && this.ambient == var2.ambient && this.effect.equals(var2.effect);
       }
    }
 
    public int hashCode() {
       int var1 = this.effect.hashCode();
       var1 = 31 * var1 + this.duration;
       var1 = 31 * var1 + this.amplifier;
-      var1 = 31 * var1 + (this.splash ? 1 : 0);
       var1 = 31 * var1 + (this.ambient ? 1 : 0);
       return var1;
    }
 
    public CompoundTag save(CompoundTag var1) {
@@ -229,10 +223,11 @@
          var1.put("HiddenEffect", var2);
       }
 
    }
 
+   @Nullable
    public static MobEffectInstance load(CompoundTag var0) {
       byte var1 = var0.getByte("Id");
       MobEffect var2 = MobEffect.byId(var1);
       return var2 == null ? null : loadSpecifiedEffect(var2, var0);
    }
