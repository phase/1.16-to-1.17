--- net/minecraft/server/commands/data/StorageDataAccessor.java
+++ net/minecraft/server/commands/data/StorageDataAccessor.java
@@ -9,18 +9,19 @@
 import net.minecraft.commands.Commands;
 import net.minecraft.commands.SharedSuggestionProvider;
 import net.minecraft.commands.arguments.NbtPathArgument;
 import net.minecraft.commands.arguments.ResourceLocationArgument;
 import net.minecraft.nbt.CompoundTag;
+import net.minecraft.nbt.NbtUtils;
 import net.minecraft.nbt.Tag;
 import net.minecraft.network.chat.Component;
 import net.minecraft.network.chat.TranslatableComponent;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.world.level.storage.CommandStorage;
 
 public class StorageDataAccessor implements DataAccessor {
-   private static final SuggestionProvider<CommandSourceStack> SUGGEST_STORAGE = (var0, var1) -> {
+   static final SuggestionProvider<CommandSourceStack> SUGGEST_STORAGE = (var0, var1) -> {
       return SharedSuggestionProvider.suggestResource(getGlobalTags(var0).keys(), var1);
    };
    public static final Function<String, DataCommands.DataProvider> PROVIDER = (var0) -> {
       return new DataCommands.DataProvider() {
          public DataAccessor access(CommandContext<CommandSourceStack> var1) {
@@ -33,15 +34,15 @@
       };
    };
    private final CommandStorage storage;
    private final ResourceLocation id;
 
-   private static CommandStorage getGlobalTags(CommandContext<CommandSourceStack> var0) {
+   static CommandStorage getGlobalTags(CommandContext<CommandSourceStack> var0) {
       return ((CommandSourceStack)var0.getSource()).getServer().getCommandStorage();
    }
 
-   private StorageDataAccessor(CommandStorage var1, ResourceLocation var2) {
+   StorageDataAccessor(CommandStorage var1, ResourceLocation var2) {
       this.storage = var1;
       this.id = var2;
    }
 
    public void setData(CompoundTag var1) {
@@ -55,11 +56,11 @@
    public Component getModifiedSuccess() {
       return new TranslatableComponent("commands.data.storage.modified", new Object[]{this.id});
    }
 
    public Component getPrintSuccess(Tag var1) {
-      return new TranslatableComponent("commands.data.storage.query", new Object[]{this.id, var1.getPrettyDisplay()});
+      return new TranslatableComponent("commands.data.storage.query", new Object[]{this.id, NbtUtils.toPrettyComponent(var1)});
    }
 
    public Component getPrintSuccess(NbtPathArgument.NbtPath var1, double var2, int var4) {
       return new TranslatableComponent("commands.data.storage.get", new Object[]{var1, this.id, String.format(Locale.ROOT, "%.2f", var2), var4});
    }
