--- net/minecraft/server/commands/SummonCommand.java
+++ net/minecraft/server/commands/SummonCommand.java
@@ -27,10 +27,13 @@
 public class SummonCommand {
    private static final SimpleCommandExceptionType ERROR_FAILED = new SimpleCommandExceptionType(new TranslatableComponent("commands.summon.failed"));
    private static final SimpleCommandExceptionType ERROR_DUPLICATE_UUID = new SimpleCommandExceptionType(new TranslatableComponent("commands.summon.failed.uuid"));
    private static final SimpleCommandExceptionType INVALID_POSITION = new SimpleCommandExceptionType(new TranslatableComponent("commands.summon.invalidPosition"));
 
+   public SummonCommand() {
+   }
+
    public static void register(CommandDispatcher<CommandSourceStack> var0) {
       var0.register((LiteralArgumentBuilder)((LiteralArgumentBuilder)Commands.literal("summon").requires((var0x) -> {
          return var0x.hasPermission(2);
       })).then(((RequiredArgumentBuilder)Commands.argument("entity", EntitySummonArgument.id()).suggests(SuggestionProviders.SUMMONABLE_ENTITIES).executes((var0x) -> {
          return spawnEntity((CommandSourceStack)var0x.getSource(), EntitySummonArgument.getSummonableEntity(var0x, "entity"), ((CommandSourceStack)var0x.getSource()).getPosition(), new CompoundTag(), true);
@@ -48,11 +51,11 @@
       } else {
          CompoundTag var6 = var3.copy();
          var6.putString("id", var1.toString());
          ServerLevel var7 = var0.getLevel();
          Entity var8 = EntityType.loadEntityRecursive(var6, var7, (var1x) -> {
-            var1x.moveTo(var2.x, var2.y, var2.z, var1x.yRot, var1x.xRot);
+            var1x.moveTo(var2.x, var2.y, var2.z, var1x.getYRot(), var1x.getXRot());
             return var1x;
          });
          if (var8 == null) {
             throw ERROR_FAILED.create();
          } else {
