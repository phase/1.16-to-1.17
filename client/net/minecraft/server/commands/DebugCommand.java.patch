--- net/minecraft/server/commands/DebugCommand.java
+++ net/minecraft/server/commands/DebugCommand.java
@@ -32,10 +32,13 @@
    @Nullable
    private static final FileSystemProvider ZIP_FS_PROVIDER = (FileSystemProvider)FileSystemProvider.installedProviders().stream().filter((var0) -> {
       return var0.getScheme().equalsIgnoreCase("jar");
    }).findFirst().orElse((Object)null);
 
+   public DebugCommand() {
+   }
+
    public static void register(CommandDispatcher<CommandSourceStack> var0) {
       var0.register((LiteralArgumentBuilder)((LiteralArgumentBuilder)((LiteralArgumentBuilder)((LiteralArgumentBuilder)Commands.literal("debug").requires((var0x) -> {
          return var0x.hasPermission(3);
       })).then(Commands.literal("start").executes((var0x) -> {
          return start((CommandSourceStack)var0x.getSource());
@@ -62,11 +65,11 @@
       if (!var1.isProfiling()) {
          throw ERROR_NOT_RUNNING.create();
       } else {
          ProfileResults var2 = var1.finishProfiling();
          File var3 = new File(var1.getFile("debug"), "profile-results-" + (new SimpleDateFormat("yyyy-MM-dd_HH.mm.ss")).format(new Date()) + ".txt");
-         var2.saveResults(var3);
+         var2.saveResults(var3.toPath());
          float var4 = (float)var2.getNanoDuration() / 1.0E9F;
          float var5 = (float)var2.getTickDuration() / var4;
          var0.sendSuccess(new TranslatableComponent("commands.debug.stopped", new Object[]{String.format(Locale.ROOT, "%.2f", var4), var2.getTickDuration(), String.format("%.2f", var5)}), true);
          return Mth.floor(var5);
       }
