--- net/minecraft/server/MinecraftServer.java
+++ net/minecraft/server/MinecraftServer.java
@@ -875,11 +875,11 @@
       this.profiler.popPush("connection");
       this.getConnection().tick();
       this.profiler.popPush("players");
       this.playerList.tick();
       if (SharedConstants.IS_RUNNING_IN_IDE) {
-         GameTestTicker.singleton.tick();
+         GameTestTicker.SINGLETON.tick();
       }
 
       this.profiler.popPush("server gui refresh");
 
       for(int var7 = 0; var7 < this.tickables.size(); ++var7) {
@@ -1568,11 +1568,11 @@
       try {
          final ArrayList var4 = Lists.newArrayList();
          final GameRules var5 = this.getGameRules();
          GameRules.visitGameRuleTypes(new GameRules.GameRuleTypeVisitor() {
             public <T extends GameRules.Value<T>> void visit(GameRules.Key<T> var1, GameRules.Type<T> var2) {
-               var4.add(String.format("%s=%s\n", var1.getId(), var5.getRule(var1).toString()));
+               var4.add(String.format("%s=%s\n", var1.getId(), var5.getRule(var1)));
             }
          });
          Iterator var6 = var4.iterator();
 
          while(var6.hasNext()) {
@@ -1723,9 +1723,13 @@
    @Nullable
    public TextFilter createTextFilterForPlayer(ServerPlayer var1) {
       return null;
    }
 
+   public boolean isResourcePackRequired() {
+      return false;
+   }
+
    static {
       DEMO_SETTINGS = new LevelSettings("Demo World", GameType.SURVIVAL, false, Difficulty.NORMAL, false, new GameRules(), DataPackConfig.DEFAULT);
    }
 }
