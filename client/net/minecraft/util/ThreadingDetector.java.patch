--- net/minecraft/util/ThreadingDetector.java
+++ net/minecraft/util/ThreadingDetector.java
@@ -1,0 +1,29 @@
+package net.minecraft.util;
+
+import java.util.Arrays;
+import java.util.Objects;
+import java.util.concurrent.locks.ReentrantLock;
+import java.util.stream.Collectors;
+import net.minecraft.CrashReport;
+import net.minecraft.CrashReportCategory;
+import net.minecraft.ReportedException;
+
+public class ThreadingDetector {
+   public static void checkAndLock(ReentrantLock var0, String var1) {
+      if (var0.isLocked() && !var0.isHeldByCurrentThread()) {
+         throw makeThreadingException(var1);
+      } else {
+         var0.lock();
+      }
+   }
+
+   public static ReportedException makeThreadingException(String var0) {
+      String var1 = (String)Thread.getAllStackTraces().keySet().stream().filter(Objects::nonNull).map((var0x) -> {
+         return var0x.getName() + ": \n\tat " + (String)Arrays.stream(var0x.getStackTrace()).map(Object::toString).collect(Collectors.joining("\n\tat "));
+      }).collect(Collectors.joining("\n"));
+      CrashReport var2 = new CrashReport("Accessing " + var0 + " from multiple threads", new IllegalStateException());
+      CrashReportCategory var3 = var2.addCategory("Thread dumps");
+      var3.setDetail("Thread dumps", (Object)var1);
+      return new ReportedException(var2);
+   }
+}
