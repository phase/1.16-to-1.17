--- net/minecraft/util/datafix/schemas/V1460.java
+++ net/minecraft/util/datafix/schemas/V1460.java
@@ -213,11 +213,11 @@
       });
       var1.registerType(true, References.ENTITY, () -> {
          return DSL.taggedChoiceLazy("id", namespacedString(), var2);
       });
       var1.registerType(true, References.ITEM_STACK, () -> {
-         return DSL.hook(DSL.optionalFields("id", References.ITEM_NAME.in(var1), "tag", DSL.optionalFields("EntityTag", References.ENTITY_TREE.in(var1), "BlockEntityTag", References.BLOCK_ENTITY.in(var1), "CanDestroy", DSL.list(References.BLOCK_NAME.in(var1)), "CanPlaceOn", DSL.list(References.BLOCK_NAME.in(var1)))), V705.ADD_NAMES, HookFunction.IDENTITY);
+         return DSL.hook(DSL.optionalFields("id", References.ITEM_NAME.in(var1), "tag", DSL.optionalFields("EntityTag", References.ENTITY_TREE.in(var1), "BlockEntityTag", References.BLOCK_ENTITY.in(var1), "CanDestroy", DSL.list(References.BLOCK_NAME.in(var1)), "CanPlaceOn", DSL.list(References.BLOCK_NAME.in(var1)), "Items", DSL.list(References.ITEM_STACK.in(var1)))), V705.ADD_NAMES, HookFunction.IDENTITY);
       });
       var1.registerType(false, References.HOTBAR, () -> {
          return DSL.compoundList(DSL.list(References.ITEM_STACK.in(var1)));
       });
       var1.registerType(false, References.OPTIONS, DSL::remainder);
@@ -257,7 +257,10 @@
       var1.registerType(false, References.ENTITY_NAME, () -> {
          return DSL.constType(namespacedString());
       });
       var1.registerType(false, References.POI_CHUNK, DSL::remainder);
       var1.registerType(true, References.WORLD_GEN_SETTINGS, DSL::remainder);
+      var1.registerType(false, References.ENTITY_CHUNK, () -> {
+         return DSL.optionalFields("Entities", DSL.list(References.ENTITY_TREE.in(var1)));
+      });
    }
 }
