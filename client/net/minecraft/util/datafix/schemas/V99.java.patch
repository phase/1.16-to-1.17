--- net/minecraft/util/datafix/schemas/V99.java
+++ net/minecraft/util/datafix/schemas/V99.java
@@ -8,11 +8,10 @@
 import com.mojang.datafixers.types.templates.Hook.HookFunction;
 import com.mojang.serialization.Dynamic;
 import com.mojang.serialization.DynamicOps;
 import java.util.HashMap;
 import java.util.Map;
-import java.util.Objects;
 import java.util.function.Supplier;
 import net.minecraft.util.datafix.fixes.References;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
@@ -265,25 +264,31 @@
       var1.registerType(false, References.OBJECTIVE, DSL::remainder);
       var1.registerType(false, References.TEAM, DSL::remainder);
       var1.registerType(true, References.UNTAGGED_SPAWNER, DSL::remainder);
       var1.registerType(false, References.POI_CHUNK, DSL::remainder);
       var1.registerType(true, References.WORLD_GEN_SETTINGS, DSL::remainder);
+      var1.registerType(false, References.ENTITY_CHUNK, () -> {
+         return DSL.optionalFields("Entities", DSL.list(References.ENTITY_TREE.in(var1)));
+      });
    }
 
    protected static <T> T addNames(Dynamic<T> var0, Map<String, String> var1, String var2) {
       return var0.update("tag", (var3) -> {
          return var3.update("BlockEntityTag", (var2x) -> {
-            String var3 = var0.get("id").asString("");
-            String var4 = (String)var1.get(NamespacedSchema.ensureNamespaced(var3));
-            if (var4 == null) {
+            String var3 = (String)var0.get("id").asString().result().map(NamespacedSchema::ensureNamespaced).orElse("minecraft:air");
+            if (!"minecraft:air".equals(var3)) {
+               String var4 = (String)var1.get(var3);
+               if (var4 != null) {
+                  return var2x.set("id", var0.createString(var4));
+               }
+
                LOGGER.warn("Unable to resolve BlockEntity for ItemStack: {}", var3);
-               return var2x;
-            } else {
-               return var2x.set("id", var0.createString(var4));
             }
+
+            return var2x;
          }).update("EntityTag", (var2x) -> {
             String var3 = var0.get("id").asString("");
-            return Objects.equals(NamespacedSchema.ensureNamespaced(var3), "minecraft:armor_stand") ? var2x.set("id", var0.createString(var2)) : var2x;
+            return "minecraft:armor_stand".equals(NamespacedSchema.ensureNamespaced(var3)) ? var2x.set("id", var0.createString(var2)) : var2x;
          });
       }).getValue();
    }
 }
