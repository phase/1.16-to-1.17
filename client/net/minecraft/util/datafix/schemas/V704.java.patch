--- net/minecraft/util/datafix/schemas/V704.java
+++ net/minecraft/util/datafix/schemas/V704.java
@@ -1,7 +1,8 @@
 package net.minecraft.util.datafix.schemas;
 
+import com.google.common.collect.ImmutableMap;
 import com.google.common.collect.Maps;
 import com.mojang.datafixers.DSL;
 import com.mojang.datafixers.DataFixUtils;
 import com.mojang.datafixers.DSL.TypeReference;
 import com.mojang.datafixers.schemas.Schema;
@@ -15,21 +16,23 @@
 import java.util.Objects;
 import java.util.function.Supplier;
 import net.minecraft.util.datafix.fixes.References;
 
 public class V704 extends Schema {
-   protected static final Map<String, String> ITEM_TO_BLOCKENTITY = (Map)DataFixUtils.make(Maps.newHashMap(), (var0) -> {
+   protected static final Map<String, String> ITEM_TO_BLOCKENTITY = (Map)DataFixUtils.make(() -> {
+      HashMap var0 = Maps.newHashMap();
       var0.put("minecraft:furnace", "minecraft:furnace");
       var0.put("minecraft:lit_furnace", "minecraft:furnace");
       var0.put("minecraft:chest", "minecraft:chest");
       var0.put("minecraft:trapped_chest", "minecraft:chest");
       var0.put("minecraft:ender_chest", "minecraft:ender_chest");
       var0.put("minecraft:jukebox", "minecraft:jukebox");
       var0.put("minecraft:dispenser", "minecraft:dispenser");
       var0.put("minecraft:dropper", "minecraft:dropper");
       var0.put("minecraft:sign", "minecraft:sign");
       var0.put("minecraft:mob_spawner", "minecraft:mob_spawner");
+      var0.put("minecraft:spawner", "minecraft:mob_spawner");
       var0.put("minecraft:noteblock", "minecraft:noteblock");
       var0.put("minecraft:brewing_stand", "minecraft:brewing_stand");
       var0.put("minecraft:enhanting_table", "minecraft:enchanting_table");
       var0.put("minecraft:command_block", "minecraft:command_block");
       var0.put("minecraft:beacon", "minecraft:beacon");
@@ -87,10 +90,52 @@
       var0.put("minecraft:structure_block", "minecraft:structure_block");
       var0.put("minecraft:end_portal", "minecraft:end_portal");
       var0.put("minecraft:end_gateway", "minecraft:end_gateway");
       var0.put("minecraft:sign", "minecraft:sign");
       var0.put("minecraft:shield", "minecraft:banner");
+      var0.put("minecraft:white_bed", "minecraft:bed");
+      var0.put("minecraft:orange_bed", "minecraft:bed");
+      var0.put("minecraft:magenta_bed", "minecraft:bed");
+      var0.put("minecraft:light_blue_bed", "minecraft:bed");
+      var0.put("minecraft:yellow_bed", "minecraft:bed");
+      var0.put("minecraft:lime_bed", "minecraft:bed");
+      var0.put("minecraft:pink_bed", "minecraft:bed");
+      var0.put("minecraft:gray_bed", "minecraft:bed");
+      var0.put("minecraft:silver_bed", "minecraft:bed");
+      var0.put("minecraft:cyan_bed", "minecraft:bed");
+      var0.put("minecraft:purple_bed", "minecraft:bed");
+      var0.put("minecraft:blue_bed", "minecraft:bed");
+      var0.put("minecraft:brown_bed", "minecraft:bed");
+      var0.put("minecraft:green_bed", "minecraft:bed");
+      var0.put("minecraft:red_bed", "minecraft:bed");
+      var0.put("minecraft:black_bed", "minecraft:bed");
+      var0.put("minecraft:oak_sign", "minecraft:sign");
+      var0.put("minecraft:spruce_sign", "minecraft:sign");
+      var0.put("minecraft:birch_sign", "minecraft:sign");
+      var0.put("minecraft:jungle_sign", "minecraft:sign");
+      var0.put("minecraft:acacia_sign", "minecraft:sign");
+      var0.put("minecraft:dark_oak_sign", "minecraft:sign");
+      var0.put("minecraft:crimson_sign", "minecraft:sign");
+      var0.put("minecraft:warped_sign", "minecraft:sign");
+      var0.put("minecraft:skeleton_skull", "minecraft:skull");
+      var0.put("minecraft:wither_skeleton_skull", "minecraft:skull");
+      var0.put("minecraft:zombie_head", "minecraft:skull");
+      var0.put("minecraft:player_head", "minecraft:skull");
+      var0.put("minecraft:creeper_head", "minecraft:skull");
+      var0.put("minecraft:dragon_head", "minecraft:skull");
+      var0.put("minecraft:barrel", "minecraft:barrel");
+      var0.put("minecraft:conduit", "minecraft:conduit");
+      var0.put("minecraft:smoker", "minecraft:smoker");
+      var0.put("minecraft:blast_furnace", "minecraft:blast_furnace");
+      var0.put("minecraft:lectern", "minecraft:lectern");
+      var0.put("minecraft:bell", "minecraft:bell");
+      var0.put("minecraft:jigsaw", "minecraft:jigsaw");
+      var0.put("minecraft:campfire", "minecraft:campfire");
+      var0.put("minecraft:bee_nest", "minecraft:beehive");
+      var0.put("minecraft:beehive", "minecraft:beehive");
+      var0.put("minecraft:sculk_sensor", "minecraft:sculk_sensor");
+      return ImmutableMap.copyOf(var0);
    });
    protected static final HookFunction ADD_NAMES = new HookFunction() {
       public <T> T apply(DynamicOps<T> var1, T var2) {
          return V99.addNames(new Dynamic(var1, var2), V704.ITEM_TO_BLOCKENTITY, "ArmorStand");
       }
@@ -148,9 +193,9 @@
       super.registerTypes(var1, var2, var3);
       var1.registerType(false, References.BLOCK_ENTITY, () -> {
          return DSL.taggedChoiceLazy("id", NamespacedSchema.namespacedString(), var3);
       });
       var1.registerType(true, References.ITEM_STACK, () -> {
-         return DSL.hook(DSL.optionalFields("id", References.ITEM_NAME.in(var1), "tag", DSL.optionalFields("EntityTag", References.ENTITY_TREE.in(var1), "BlockEntityTag", References.BLOCK_ENTITY.in(var1), "CanDestroy", DSL.list(References.BLOCK_NAME.in(var1)), "CanPlaceOn", DSL.list(References.BLOCK_NAME.in(var1)))), ADD_NAMES, HookFunction.IDENTITY);
+         return DSL.hook(DSL.optionalFields("id", References.ITEM_NAME.in(var1), "tag", DSL.optionalFields("EntityTag", References.ENTITY_TREE.in(var1), "BlockEntityTag", References.BLOCK_ENTITY.in(var1), "CanDestroy", DSL.list(References.BLOCK_NAME.in(var1)), "CanPlaceOn", DSL.list(References.BLOCK_NAME.in(var1)), "Items", DSL.list(References.ITEM_STACK.in(var1)))), ADD_NAMES, HookFunction.IDENTITY);
       });
    }
 }
