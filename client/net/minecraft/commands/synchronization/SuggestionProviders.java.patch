--- net/minecraft/commands/synchronization/SuggestionProviders.java
+++ net/minecraft/commands/synchronization/SuggestionProviders.java
@@ -23,10 +23,13 @@
    public static final SuggestionProvider<CommandSourceStack> ALL_RECIPES;
    public static final SuggestionProvider<CommandSourceStack> AVAILABLE_SOUNDS;
    public static final SuggestionProvider<CommandSourceStack> AVAILABLE_BIOMES;
    public static final SuggestionProvider<CommandSourceStack> SUMMONABLE_ENTITIES;
 
+   public SuggestionProviders() {
+   }
+
    public static <S extends SharedSuggestionProvider> SuggestionProvider<S> register(ResourceLocation var0, SuggestionProvider<SharedSuggestionProvider> var1) {
       if (PROVIDERS_BY_NAME.containsKey(var0)) {
          throw new IllegalArgumentException("A command suggestion provider is already registered with the name " + var0);
       } else {
          PROVIDERS_BY_NAME.put(var0, var1);
@@ -64,13 +67,13 @@
             return new TranslatableComponent(Util.makeDescriptionId("entity", EntityType.getKey(var0x)));
          });
       });
    }
 
-   public static class Wrapper implements SuggestionProvider<SharedSuggestionProvider> {
+   protected static class Wrapper implements SuggestionProvider<SharedSuggestionProvider> {
       private final SuggestionProvider<SharedSuggestionProvider> delegate;
-      private final ResourceLocation name;
+      final ResourceLocation name;
 
       public Wrapper(ResourceLocation var1, SuggestionProvider<SharedSuggestionProvider> var2) {
          this.delegate = var2;
          this.name = var1;
       }
