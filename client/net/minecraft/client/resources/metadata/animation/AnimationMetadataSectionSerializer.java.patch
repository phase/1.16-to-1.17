--- net/minecraft/client/resources/metadata/animation/AnimationMetadataSectionSerializer.java
+++ net/minecraft/client/resources/metadata/animation/AnimationMetadataSectionSerializer.java
@@ -1,23 +1,24 @@
 package net.minecraft.client.resources.metadata.animation;
 
-import com.google.common.collect.Lists;
+import com.google.common.collect.ImmutableList;
+import com.google.common.collect.ImmutableList.Builder;
 import com.google.gson.JsonArray;
 import com.google.gson.JsonElement;
 import com.google.gson.JsonObject;
 import com.google.gson.JsonParseException;
-import java.util.ArrayList;
+import javax.annotation.Nullable;
 import net.minecraft.server.packs.metadata.MetadataSectionSerializer;
 import net.minecraft.util.GsonHelper;
 import org.apache.commons.lang3.Validate;
 
 public class AnimationMetadataSectionSerializer implements MetadataSectionSerializer<AnimationMetadataSection> {
    public AnimationMetadataSectionSerializer() {
    }
 
    public AnimationMetadataSection fromJson(JsonObject var1) {
-      ArrayList var2 = Lists.newArrayList();
+      Builder var2 = ImmutableList.builder();
       int var3 = GsonHelper.getAsInt(var1, "frametime", 1);
       if (var3 != 1) {
          Validate.inclusiveBetween(1L, 2147483647L, (long)var3, "Invalid default frame time");
       }
 
@@ -47,13 +48,14 @@
       if (var5 != -1) {
          Validate.inclusiveBetween(1L, 2147483647L, (long)var5, "Invalid height");
       }
 
       boolean var10 = GsonHelper.getAsBoolean(var1, "interpolate", false);
-      return new AnimationMetadataSection(var2, var9, var5, var3, var10);
+      return new AnimationMetadataSection(var2.build(), var9, var5, var3, var10);
    }
 
+   @Nullable
    private AnimationFrame getFrame(int var1, JsonElement var2) {
       if (var2.isJsonPrimitive()) {
          return new AnimationFrame(GsonHelper.convertToInt(var2, "frames[" + var1 + "]"));
       } else if (var2.isJsonObject()) {
          JsonObject var3 = GsonHelper.convertToJsonObject(var2, "frames[" + var1 + "]");
