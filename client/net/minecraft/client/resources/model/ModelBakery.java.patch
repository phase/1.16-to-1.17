--- net/minecraft/client/resources/model/ModelBakery.java
+++ net/minecraft/client/resources/model/ModelBakery.java
@@ -220,11 +220,11 @@
             Iterator var5;
             do {
                if (!var3.hasNext()) {
                   Block var10 = (Block)var0.getOwner();
                   return (var2x) -> {
-                     if (var2x != null && var10 == var2x.getBlock()) {
+                     if (var2x != null && var2x.is(var10)) {
                         Iterator var3 = var2.entrySet().iterator();
 
                         Entry var4;
                         do {
                            if (!var3.hasNext()) {
@@ -328,13 +328,13 @@
             Pair var12 = Pair.of(var10, () -> {
                return var11;
             });
             boolean var25 = false;
 
-            label98: {
+            label97: {
                try {
-                  label107: {
+                  label112: {
                      List var13;
                      try {
                         var25 = true;
                         var13 = (List)this.resourceManager.getResources(var9).stream().map((var1x) -> {
                            try {
@@ -368,11 +368,11 @@
                            }
                         }).collect(Collectors.toList());
                      } catch (IOException var26) {
                         LOGGER.warn("Exception loading blockstate definition: {}: {}", var9, var26);
                         var25 = false;
-                        break label107;
+                        break label112;
                      }
 
                      Iterator var14 = var13.iterator();
 
                      while(var14.hasNext()) {
@@ -411,11 +411,11 @@
                         });
                         var8.putAll(var17);
                      }
 
                      var25 = false;
-                     break label98;
+                     break label97;
                   }
                } catch (ModelBakery.BlockStateDefinitionException var27) {
                   throw var27;
                } catch (Exception var28) {
                   throw new ModelBakery.BlockStateDefinitionException(String.format("Exception loading blockstate definition: '%s': %s", var9, var28));
