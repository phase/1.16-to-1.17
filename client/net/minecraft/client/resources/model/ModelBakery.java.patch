--- net/minecraft/client/resources/model/ModelBakery.java
+++ net/minecraft/client/resources/model/ModelBakery.java
@@ -220,11 +220,11 @@
             Iterator var5;
             do {
                if (!var3.hasNext()) {
                   Block var10 = (Block)var0.getOwner();
                   return (var2x) -> {
-                     if (var2x != null && var10 == var2x.getBlock()) {
+                     if (var2x != null && var2x.is(var10)) {
                         Iterator var3 = var2.entrySet().iterator();
 
                         Entry var4;
                         do {
                            if (!var3.hasNext()) {
@@ -585,16 +585,16 @@
       Resource var3 = null;
 
       BlockModel var5;
       try {
          String var4 = var1.getPath();
-         if (!"builtin/generated".equals(var4)) {
-            if ("builtin/entity".equals(var4)) {
-               var5 = BLOCK_ENTITY_MARKER;
-               return var5;
-            }
+         if ("builtin/generated".equals(var4)) {
+            var5 = GENERATION_MARKER;
+            return var5;
+         }
 
+         if (!"builtin/entity".equals(var4)) {
             if (var4.startsWith("builtin/")) {
                String var10 = var4.substring("builtin/".length());
                String var6 = (String)BUILTIN_MODELS.get(var10);
                if (var6 == null) {
                   throw new FileNotFoundException(var1.toString());
@@ -610,11 +610,11 @@
             var5.name = var1.toString();
             BlockModel var11 = var5;
             return var11;
          }
 
-         var5 = GENERATION_MARKER;
+         var5 = BLOCK_ENTITY_MARKER;
       } finally {
          IOUtils.closeQuietly((Reader)var2);
          IOUtils.closeQuietly(var3);
       }
 
@@ -689,11 +689,11 @@
       BLOCK_ENTITY_MARKER = (BlockModel)Util.make(BlockModel.fromString("{\"gui_light\": \"side\"}"), (var0) -> {
          var0.name = "block entity marker";
       });
       ITEM_FRAME_FAKE_DEFINITION = (new StateDefinition.Builder(Blocks.AIR)).add(BooleanProperty.create("map")).create(Block::defaultBlockState, BlockState::new);
       ITEM_MODEL_GENERATOR = new ItemModelGenerator();
-      STATIC_DEFINITIONS = ImmutableMap.of(new ResourceLocation("item_frame"), ITEM_FRAME_FAKE_DEFINITION);
+      STATIC_DEFINITIONS = ImmutableMap.of(new ResourceLocation("item_frame"), ITEM_FRAME_FAKE_DEFINITION, new ResourceLocation("glow_item_frame"), ITEM_FRAME_FAKE_DEFINITION);
    }
 
    static class ModelGroupKey {
       private final List<UnbakedModel> models;
       private final List<Object> coloringValues;
