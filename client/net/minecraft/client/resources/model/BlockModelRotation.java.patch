--- net/minecraft/client/resources/model/BlockModelRotation.java
+++ net/minecraft/client/resources/model/BlockModelRotation.java
@@ -25,10 +25,11 @@
    X270_Y0(270, 0),
    X270_Y90(270, 90),
    X270_Y180(270, 180),
    X270_Y270(270, 270);
 
+   private static final int DEGREES = 360;
    private static final Map<Integer, BlockModelRotation> BY_INDEX = (Map)Arrays.stream(values()).collect(Collectors.toMap((var0) -> {
       return var0.index;
    }, (var0) -> {
       return var0;
    }));
@@ -40,12 +41,12 @@
       return var0 * 360 + var1;
    }
 
    private BlockModelRotation(int var3, int var4) {
       this.index = getIndex(var3, var4);
-      Quaternion var5 = new Quaternion(new Vector3f(0.0F, 1.0F, 0.0F), (float)(-var4), true);
-      var5.mul(new Quaternion(new Vector3f(1.0F, 0.0F, 0.0F), (float)(-var3), true));
+      Quaternion var5 = Vector3f.YP.rotationDegrees((float)(-var4));
+      var5.mul(Vector3f.XP.rotationDegrees((float)(-var3)));
       OctahedralGroup var6 = OctahedralGroup.IDENTITY;
 
       int var7;
       for(var7 = 0; var7 < var4; var7 += 90) {
          var6 = var6.compose(OctahedralGroup.ROT_90_Y_NEG);
@@ -64,6 +65,10 @@
    }
 
    public static BlockModelRotation by(int var0, int var1) {
       return (BlockModelRotation)BY_INDEX.get(getIndex(Mth.positiveModulo(var0, 360), Mth.positiveModulo(var1, 360)));
    }
+
+   public OctahedralGroup actualRotation() {
+      return this.actualRotation;
+   }
 }
