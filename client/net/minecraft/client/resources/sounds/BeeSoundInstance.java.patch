--- net/minecraft/client/resources/sounds/BeeSoundInstance.java
+++ net/minecraft/client/resources/sounds/BeeSoundInstance.java
@@ -2,14 +2,16 @@
 
 import net.minecraft.client.Minecraft;
 import net.minecraft.sounds.SoundEvent;
 import net.minecraft.sounds.SoundSource;
 import net.minecraft.util.Mth;
-import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.animal.Bee;
 
 public abstract class BeeSoundInstance extends AbstractTickableSoundInstance {
+   private static final float VOLUME_MIN = 0.0F;
+   private static final float VOLUME_MAX = 1.2F;
+   private static final float PITCH_MIN = 0.0F;
    protected final Bee bee;
    private boolean hasSwitched;
 
    public BeeSoundInstance(Bee var1, SoundEvent var2, SoundSource var3) {
       super(var2, var3);
@@ -27,16 +29,16 @@
       if (var1 && !this.isStopped()) {
          Minecraft.getInstance().getSoundManager().queueTickingSound(this.getAlternativeSoundInstance());
          this.hasSwitched = true;
       }
 
-      if (!this.bee.removed && !this.hasSwitched) {
+      if (!this.bee.isRemoved() && !this.hasSwitched) {
          this.x = (double)((float)this.bee.getX());
          this.y = (double)((float)this.bee.getY());
          this.z = (double)((float)this.bee.getZ());
-         float var2 = Mth.sqrt(Entity.getHorizontalDistanceSqr(this.bee.getDeltaMovement()));
-         if ((double)var2 >= 0.01D) {
+         float var2 = (float)this.bee.getDeltaMovement().horizontalDistance();
+         if (var2 >= 0.01F) {
             this.pitch = Mth.lerp(Mth.clamp(var2, this.getMinPitch(), this.getMaxPitch()), this.getMinPitch(), this.getMaxPitch());
             this.volume = Mth.lerp(Mth.clamp(var2, 0.0F, 0.5F), 0.0F, 1.2F);
          } else {
             this.pitch = 0.0F;
             this.volume = 0.0F;
