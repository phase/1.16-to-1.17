--- net/minecraft/client/resources/sounds/BiomeAmbientSoundsHandler.java
+++ net/minecraft/client/resources/sounds/BiomeAmbientSoundsHandler.java
@@ -15,15 +15,17 @@
 import net.minecraft.world.level.biome.AmbientMoodSettings;
 import net.minecraft.world.level.biome.Biome;
 import net.minecraft.world.level.biome.BiomeManager;
 
 public class BiomeAmbientSoundsHandler implements AmbientSoundHandler {
+   private static final int LOOP_SOUND_CROSS_FADE_TIME = 40;
+   private static final float SKY_MOOD_RECOVERY_RATE = 0.001F;
    private final LocalPlayer player;
    private final SoundManager soundManager;
    private final BiomeManager biomeManager;
    private final Random random;
-   private Object2ObjectArrayMap<Biome, BiomeAmbientSoundsHandler.LoopSoundInstance> loopSounds = new Object2ObjectArrayMap();
+   private final Object2ObjectArrayMap<Biome, BiomeAmbientSoundsHandler.LoopSoundInstance> loopSounds = new Object2ObjectArrayMap();
    private Optional<AmbientMoodSettings> moodSettings = Optional.empty();
    private Optional<AmbientAdditionsSettings> additionsSettings = Optional.empty();
    private float moodiness;
    private Biome previousBiome;
 
@@ -45,11 +47,11 @@
          this.previousBiome = var1;
          this.moodSettings = var1.getAmbientMood();
          this.additionsSettings = var1.getAmbientAdditions();
          this.loopSounds.values().forEach(BiomeAmbientSoundsHandler.LoopSoundInstance::fadeOut);
          var1.getAmbientLoop().ifPresent((var2) -> {
-            BiomeAmbientSoundsHandler.LoopSoundInstance var10000 = (BiomeAmbientSoundsHandler.LoopSoundInstance)this.loopSounds.compute(var1, (var2x, var3) -> {
+            this.loopSounds.compute(var1, (var2x, var3) -> {
                if (var3 == null) {
                   var3 = new BiomeAmbientSoundsHandler.LoopSoundInstance(var2);
                   this.soundManager.play(var3);
                }
 
@@ -81,11 +83,11 @@
             double var8 = (double)var4.getY() + 0.5D;
             double var10 = (double)var4.getZ() + 0.5D;
             double var12 = var6 - this.player.getX();
             double var14 = var8 - this.player.getEyeY();
             double var16 = var10 - this.player.getZ();
-            double var18 = (double)Mth.sqrt(var12 * var12 + var14 * var14 + var16 * var16);
+            double var18 = Math.sqrt(var12 * var12 + var14 * var14 + var16 * var16);
             double var20 = var18 + var1x.getSoundPositionOffset();
             SimpleSoundInstance var22 = SimpleSoundInstance.forAmbientMood(var1x.getSoundEvent(), this.player.getX() + var12 / var18 * var20, this.player.getEyeY() + var14 / var18 * var20, this.player.getZ() + var16 / var18 * var20);
             this.soundManager.play(var22);
             this.moodiness = 0.0F;
          } else {
