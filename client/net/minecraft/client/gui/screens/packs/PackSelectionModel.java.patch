--- net/minecraft/client/gui/screens/packs/PackSelectionModel.java
+++ net/minecraft/client/gui/screens/packs/PackSelectionModel.java
@@ -15,14 +15,14 @@
 import net.minecraft.server.packs.repository.PackRepository;
 import net.minecraft.server.packs.repository.PackSource;
 
 public class PackSelectionModel {
    private final PackRepository repository;
-   private final List<Pack> selected;
-   private final List<Pack> unselected;
-   private final Function<Pack, ResourceLocation> iconGetter;
-   private final Runnable onListChanged;
+   final List<Pack> selected;
+   final List<Pack> unselected;
+   final Function<Pack, ResourceLocation> iconGetter;
+   final Runnable onListChanged;
    private final Consumer<PackRepository> output;
 
    public PackSelectionModel(Runnable var1, Function<Pack, ResourceLocation> var2, PackRepository var3, Consumer<PackRepository> var4) {
       this.onListChanged = var1;
       this.iconGetter = var2;
@@ -57,57 +57,57 @@
       this.unselected.clear();
       this.unselected.addAll(this.repository.getAvailablePacks());
       this.unselected.removeAll(this.selected);
    }
 
-   class UnselectedPackEntry extends PackSelectionModel.EntryBase {
-      public UnselectedPackEntry(Pack var2) {
+   private class SelectedPackEntry extends PackSelectionModel.EntryBase {
+      public SelectedPackEntry(Pack var2) {
          super(var2);
       }
 
       protected List<Pack> getSelfList() {
-         return PackSelectionModel.this.unselected;
+         return PackSelectionModel.this.selected;
       }
 
       protected List<Pack> getOtherList() {
-         return PackSelectionModel.this.selected;
+         return PackSelectionModel.this.unselected;
       }
 
       public boolean isSelected() {
-         return false;
+         return true;
       }
 
       public void select() {
-         this.toggleSelection();
       }
 
       public void unselect() {
+         this.toggleSelection();
       }
    }
 
-   class SelectedPackEntry extends PackSelectionModel.EntryBase {
-      public SelectedPackEntry(Pack var2) {
+   class UnselectedPackEntry extends PackSelectionModel.EntryBase {
+      public UnselectedPackEntry(Pack var2) {
          super(var2);
       }
 
       protected List<Pack> getSelfList() {
-         return PackSelectionModel.this.selected;
+         return PackSelectionModel.this.unselected;
       }
 
       protected List<Pack> getOtherList() {
-         return PackSelectionModel.this.unselected;
+         return PackSelectionModel.this.selected;
       }
 
       public boolean isSelected() {
-         return true;
+         return false;
       }
 
       public void select() {
+         this.toggleSelection();
       }
 
       public void unselect() {
-         this.toggleSelection();
       }
    }
 
    abstract class EntryBase implements PackSelectionModel.Entry {
       private final Pack pack;
