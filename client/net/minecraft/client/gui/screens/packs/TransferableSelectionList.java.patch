--- net/minecraft/client/gui/screens/packs/TransferableSelectionList.java
+++ net/minecraft/client/gui/screens/packs/TransferableSelectionList.java
@@ -1,17 +1,19 @@
 package net.minecraft.client.gui.screens.packs;
 
 import com.mojang.blaze3d.systems.RenderSystem;
 import com.mojang.blaze3d.vertex.PoseStack;
 import com.mojang.blaze3d.vertex.Tesselator;
+import java.util.Objects;
 import net.minecraft.ChatFormatting;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.gui.GuiComponent;
 import net.minecraft.client.gui.components.MultiLineLabel;
 import net.minecraft.client.gui.components.ObjectSelectionList;
 import net.minecraft.client.gui.screens.ConfirmScreen;
 import net.minecraft.client.gui.screens.Screen;
+import net.minecraft.client.renderer.GameRenderer;
 import net.minecraft.locale.Language;
 import net.minecraft.network.chat.Component;
 import net.minecraft.network.chat.FormattedText;
 import net.minecraft.network.chat.MutableComponent;
 import net.minecraft.network.chat.TextComponent;
@@ -19,20 +21,20 @@
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.server.packs.repository.PackCompatibility;
 import net.minecraft.util.FormattedCharSequence;
 
 public class TransferableSelectionList extends ObjectSelectionList<TransferableSelectionList.PackEntry> {
-   private static final ResourceLocation ICON_OVERLAY_LOCATION = new ResourceLocation("textures/gui/resource_packs.png");
-   private static final Component INCOMPATIBLE_TITLE = new TranslatableComponent("pack.incompatible");
-   private static final Component INCOMPATIBLE_CONFIRM_TITLE = new TranslatableComponent("pack.incompatible.confirm.title");
+   static final ResourceLocation ICON_OVERLAY_LOCATION = new ResourceLocation("textures/gui/resource_packs.png");
+   static final Component INCOMPATIBLE_TITLE = new TranslatableComponent("pack.incompatible");
+   static final Component INCOMPATIBLE_CONFIRM_TITLE = new TranslatableComponent("pack.incompatible.confirm.title");
    private final Component title;
 
    public TransferableSelectionList(Minecraft var1, int var2, int var3, Component var4) {
       super(var1, var2, var3, 32, var3 - 55 + 4, 36);
       this.title = var4;
       this.centerListVertically = false;
-      var1.font.getClass();
+      Objects.requireNonNull(var1.font);
       this.setRenderHeader(true, (int)(9.0F * 1.5F));
    }
 
    protected void renderHeader(PoseStack var1, int var2, int var3, Tesselator var4) {
       MutableComponent var5 = (new TextComponent("")).append(this.title).withStyle(ChatFormatting.UNDERLINE, ChatFormatting.BOLD);
@@ -46,11 +48,20 @@
    protected int getScrollbarPosition() {
       return this.x1 - 6;
    }
 
    public static class PackEntry extends ObjectSelectionList.Entry<TransferableSelectionList.PackEntry> {
-      private TransferableSelectionList parent;
+      private static final int ICON_OVERLAY_X_MOVE_RIGHT = 0;
+      private static final int ICON_OVERLAY_X_MOVE_LEFT = 32;
+      private static final int ICON_OVERLAY_X_MOVE_DOWN = 64;
+      private static final int ICON_OVERLAY_X_MOVE_UP = 96;
+      private static final int ICON_OVERLAY_Y_UNSELECTED = 0;
+      private static final int ICON_OVERLAY_Y_SELECTED = 32;
+      private static final int MAX_DESCRIPTION_WIDTH_PIXELS = 157;
+      private static final int MAX_NAME_WIDTH_PIXELS = 157;
+      private static final String TOO_LONG_NAME_SUFFIX = "...";
+      private final TransferableSelectionList parent;
       protected final Minecraft minecraft;
       protected final Screen screen;
       private final PackSelectionModel.Entry pack;
       private final FormattedCharSequence nameDisplayCache;
       private final MultiLineLabel descriptionDisplayCache;
@@ -80,26 +91,32 @@
 
       private static MultiLineLabel cacheDescription(Minecraft var0, Component var1) {
          return MultiLineLabel.create(var0.font, var1, 157, 2);
       }
 
+      public Component getNarration() {
+         return new TranslatableComponent("narrator.select", new Object[]{this.pack.getTitle()});
+      }
+
       public void render(PoseStack var1, int var2, int var3, int var4, int var5, int var6, int var7, int var8, boolean var9, float var10) {
          PackCompatibility var11 = this.pack.getCompatibility();
          if (!var11.isCompatible()) {
-            RenderSystem.color4f(1.0F, 1.0F, 1.0F, 1.0F);
+            RenderSystem.setShaderColor(1.0F, 1.0F, 1.0F, 1.0F);
             GuiComponent.fill(var1, var4 - 1, var3 - 1, var4 + var5 - 9, var3 + var6 + 1, -8978432);
          }
 
-         this.minecraft.getTextureManager().bind(this.pack.getIconTexture());
-         RenderSystem.color4f(1.0F, 1.0F, 1.0F, 1.0F);
+         RenderSystem.setShader(GameRenderer::getPositionTexShader);
+         RenderSystem.setShaderTexture(0, this.pack.getIconTexture());
+         RenderSystem.setShaderColor(1.0F, 1.0F, 1.0F, 1.0F);
          GuiComponent.blit(var1, var4, var3, 0.0F, 0.0F, 32, 32, 32, 32);
          FormattedCharSequence var12 = this.nameDisplayCache;
          MultiLineLabel var13 = this.descriptionDisplayCache;
          if (this.showHoverOverlay() && (this.minecraft.options.touchscreen || var9)) {
-            this.minecraft.getTextureManager().bind(TransferableSelectionList.ICON_OVERLAY_LOCATION);
+            RenderSystem.setShaderTexture(0, TransferableSelectionList.ICON_OVERLAY_LOCATION);
             GuiComponent.fill(var1, var4, var3, var4 + 32, var3 + 32, -1601138544);
-            RenderSystem.color4f(1.0F, 1.0F, 1.0F, 1.0F);
+            RenderSystem.setShader(GameRenderer::getPositionTexShader);
+            RenderSystem.setShaderColor(1.0F, 1.0F, 1.0F, 1.0F);
             int var14 = var7 - var4;
             int var15 = var8 - var3;
             if (!this.pack.getCompatibility().isCompatible()) {
                var12 = this.incompatibleNameDisplayCache;
                var13 = this.incompatibleDescriptionDisplayCache;
