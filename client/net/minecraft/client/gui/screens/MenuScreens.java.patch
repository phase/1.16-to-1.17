--- net/minecraft/client/gui/screens/MenuScreens.java
+++ net/minecraft/client/gui/screens/MenuScreens.java
@@ -35,10 +35,13 @@
 
 public class MenuScreens {
    private static final Logger LOGGER = LogManager.getLogger();
    private static final Map<MenuType<?>, MenuScreens.ScreenConstructor<?, ?>> SCREENS = Maps.newHashMap();
 
+   public MenuScreens() {
+   }
+
    public static <T extends AbstractContainerMenu> void create(@Nullable MenuType<T> var0, Minecraft var1, int var2, Component var3) {
       if (var0 == null) {
          LOGGER.warn("Trying to open invalid screen with name: {}", var3.getString());
       } else {
          MenuScreens.ScreenConstructor var4 = getConstructor(var0);
@@ -104,11 +107,11 @@
       register(MenuType.STONECUTTER, StonecutterScreen::new);
    }
 
    interface ScreenConstructor<T extends AbstractContainerMenu, U extends Screen & MenuAccess<T>> {
       default void fromPacket(Component var1, MenuType<T> var2, Minecraft var3, int var4) {
-         Screen var5 = this.create(var2.create(var4, var3.player.inventory), var3.player.inventory, var1);
+         Screen var5 = this.create(var2.create(var4, var3.player.getInventory()), var3.player.getInventory(), var1);
          var3.player.containerMenu = ((MenuAccess)var5).getMenu();
          var3.setScreen(var5);
       }
 
       U create(T var1, Inventory var2, Component var3);
