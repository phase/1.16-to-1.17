--- net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent.java
+++ net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent.java
@@ -9,10 +9,11 @@
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.gui.GuiComponent;
 import net.minecraft.client.gui.components.AbstractWidget;
 import net.minecraft.client.gui.components.Widget;
 import net.minecraft.client.gui.components.events.GuiEventListener;
+import net.minecraft.client.gui.narration.NarrationElementOutput;
 import net.minecraft.network.chat.TextComponent;
 import net.minecraft.recipebook.PlaceRecipe;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.util.Mth;
 import net.minecraft.world.inventory.AbstractFurnaceMenu;
@@ -20,20 +21,23 @@
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.crafting.Ingredient;
 import net.minecraft.world.item.crafting.Recipe;
 
 public class OverlayRecipeComponent extends GuiComponent implements Widget, GuiEventListener {
-   private static final ResourceLocation RECIPE_BOOK_LOCATION = new ResourceLocation("textures/gui/recipe_book.png");
+   static final ResourceLocation RECIPE_BOOK_LOCATION = new ResourceLocation("textures/gui/recipe_book.png");
+   private static final int MAX_ROW = 4;
+   private static final int MAX_ROW_LARGE = 5;
+   private static final float ITEM_RENDER_SCALE = 0.375F;
    private final List<OverlayRecipeComponent.OverlayRecipeButton> recipeButtons = Lists.newArrayList();
    private boolean isVisible;
    private int x;
    private int y;
-   private Minecraft minecraft;
+   Minecraft minecraft;
    private RecipeCollection collection;
    private Recipe<?> lastRecipeClicked;
-   private float time;
-   private boolean isFurnaceMenu;
+   float time;
+   boolean isFurnaceMenu;
 
    public OverlayRecipeComponent() {
    }
 
    public void init(Minecraft var1, RecipeCollection var2, int var3, int var4, int var5, int var6, float var7) {
@@ -127,14 +131,14 @@
 
    public void render(PoseStack var1, int var2, int var3, float var4) {
       if (this.isVisible) {
          this.time += var4;
          RenderSystem.enableBlend();
-         RenderSystem.color4f(1.0F, 1.0F, 1.0F, 1.0F);
-         this.minecraft.getTextureManager().bind(RECIPE_BOOK_LOCATION);
-         RenderSystem.pushMatrix();
-         RenderSystem.translatef(0.0F, 0.0F, 170.0F);
+         RenderSystem.setShaderColor(1.0F, 1.0F, 1.0F, 1.0F);
+         RenderSystem.setShaderTexture(0, RECIPE_BOOK_LOCATION);
+         var1.pushPose();
+         var1.translate(0.0D, 0.0D, 170.0D);
          int var5 = this.recipeButtons.size() <= 16 ? 4 : 5;
          int var6 = Math.min(this.recipeButtons.size(), var5);
          int var7 = Mth.ceil((float)this.recipeButtons.size() / (float)var5);
          boolean var8 = true;
          boolean var9 = true;
@@ -147,11 +151,11 @@
          while(var12.hasNext()) {
             OverlayRecipeComponent.OverlayRecipeButton var13 = (OverlayRecipeComponent.OverlayRecipeButton)var12.next();
             var13.render(var1, var2, var3, var4);
          }
 
-         RenderSystem.popMatrix();
+         var1.popPose();
       }
    }
 
    private void nineInchSprite(PoseStack var1, int var2, int var3, int var4, int var5, int var6, int var7) {
       this.blit(var1, this.x, this.y, var6, var7, var5, var5);
@@ -191,12 +195,23 @@
 
    public boolean isVisible() {
       return this.isVisible;
    }
 
-   class OverlayRecipeButton extends AbstractWidget implements PlaceRecipe<Ingredient> {
-      private final Recipe<?> recipe;
+   private class OverlaySmeltingRecipeButton extends OverlayRecipeComponent.OverlayRecipeButton {
+      public OverlaySmeltingRecipeButton(int var2, int var3, Recipe<?> var4, boolean var5) {
+         super(var2, var3, var4, var5);
+      }
+
+      protected void calculateIngredientsPositions(Recipe<?> var1) {
+         ItemStack[] var2 = ((Ingredient)var1.getIngredients().get(0)).getItems();
+         this.ingredientPos.add(new OverlayRecipeComponent.OverlayRecipeButton.Pos(10, 10, var2));
+      }
+   }
+
+   private class OverlayRecipeButton extends AbstractWidget implements PlaceRecipe<Ingredient> {
+      final Recipe<?> recipe;
       private final boolean isCraftable;
       protected final List<OverlayRecipeComponent.OverlayRecipeButton.Pos> ingredientPos = Lists.newArrayList();
 
       public OverlayRecipeButton(int var2, int var3, Recipe<?> var4, boolean var5) {
          super(var2, var3, 200, 20, TextComponent.EMPTY);
@@ -209,21 +224,24 @@
 
       protected void calculateIngredientsPositions(Recipe<?> var1) {
          this.placeRecipe(3, 3, -1, var1, var1.getIngredients().iterator(), 0);
       }
 
+      public void updateNarration(NarrationElementOutput var1) {
+         this.defaultButtonNarrationText(var1);
+      }
+
       public void addItemToSlot(Iterator<Ingredient> var1, int var2, int var3, int var4, int var5) {
          ItemStack[] var6 = ((Ingredient)var1.next()).getItems();
          if (var6.length != 0) {
             this.ingredientPos.add(new OverlayRecipeComponent.OverlayRecipeButton.Pos(3 + var5 * 7, 3 + var4 * 7, var6));
          }
 
       }
 
       public void renderButton(PoseStack var1, int var2, int var3, float var4) {
-         RenderSystem.enableAlphaTest();
-         OverlayRecipeComponent.this.minecraft.getTextureManager().bind(OverlayRecipeComponent.RECIPE_BOOK_LOCATION);
+         RenderSystem.setShaderTexture(0, OverlayRecipeComponent.RECIPE_BOOK_LOCATION);
          int var5 = 152;
          if (!this.isCraftable) {
             var5 += 26;
          }
 
@@ -231,27 +249,31 @@
          if (this.isHovered()) {
             var6 += 26;
          }
 
          this.blit(var1, this.x, this.y, var5, var6, this.width, this.height);
-         Iterator var7 = this.ingredientPos.iterator();
+         PoseStack var7 = RenderSystem.getModelViewStack();
+         var7.pushPose();
+         var7.translate((double)(this.x + 2), (double)(this.y + 2), 125.0D);
+         Iterator var8 = this.ingredientPos.iterator();
 
-         while(var7.hasNext()) {
-            OverlayRecipeComponent.OverlayRecipeButton.Pos var8 = (OverlayRecipeComponent.OverlayRecipeButton.Pos)var7.next();
-            RenderSystem.pushMatrix();
-            float var9 = 0.42F;
-            int var10 = (int)((float)(this.x + var8.x) / 0.42F - 3.0F);
-            int var11 = (int)((float)(this.y + var8.y) / 0.42F - 3.0F);
-            RenderSystem.scalef(0.42F, 0.42F, 1.0F);
-            OverlayRecipeComponent.this.minecraft.getItemRenderer().renderAndDecorateItem(var8.ingredients[Mth.floor(OverlayRecipeComponent.this.time / 30.0F) % var8.ingredients.length], var10, var11);
-            RenderSystem.popMatrix();
+         while(var8.hasNext()) {
+            OverlayRecipeComponent.OverlayRecipeButton.Pos var9 = (OverlayRecipeComponent.OverlayRecipeButton.Pos)var8.next();
+            var7.pushPose();
+            var7.translate((double)var9.x, (double)var9.y, 0.0D);
+            var7.scale(0.375F, 0.375F, 1.0F);
+            var7.translate(-8.0D, -8.0D, 0.0D);
+            RenderSystem.applyModelViewMatrix();
+            OverlayRecipeComponent.this.minecraft.getItemRenderer().renderAndDecorateItem(var9.ingredients[Mth.floor(OverlayRecipeComponent.this.time / 30.0F) % var9.ingredients.length], 0, 0);
+            var7.popPose();
          }
 
-         RenderSystem.disableAlphaTest();
+         var7.popPose();
+         RenderSystem.applyModelViewMatrix();
       }
 
-      public class Pos {
+      protected class Pos {
          public final ItemStack[] ingredients;
          public final int x;
          public final int y;
 
          public Pos(int var2, int var3, ItemStack[] var4) {
@@ -259,17 +281,6 @@
             this.y = var3;
             this.ingredients = var4;
          }
       }
    }
-
-   class OverlaySmeltingRecipeButton extends OverlayRecipeComponent.OverlayRecipeButton {
-      public OverlaySmeltingRecipeButton(int var2, int var3, Recipe<?> var4, boolean var5) {
-         super(var2, var3, var4, var5);
-      }
-
-      protected void calculateIngredientsPositions(Recipe<?> var1) {
-         ItemStack[] var2 = ((Ingredient)var1.getIngredients().get(0)).getItems();
-         this.ingredientPos.add(new OverlayRecipeComponent.OverlayRecipeButton.Pos(10, 10, var2));
-      }
-   }
 }
