--- net/minecraft/client/gui/screens/recipebook/RecipeBookComponent.java
+++ net/minecraft/client/gui/screens/recipebook/RecipeBookComponent.java
@@ -18,10 +18,11 @@
 import net.minecraft.client.gui.components.EditBox;
 import net.minecraft.client.gui.components.StateSwitchingButton;
 import net.minecraft.client.gui.components.Widget;
 import net.minecraft.client.gui.components.events.GuiEventListener;
 import net.minecraft.client.gui.screens.Screen;
+import net.minecraft.client.renderer.GameRenderer;
 import net.minecraft.client.resources.language.LanguageInfo;
 import net.minecraft.client.resources.language.LanguageManager;
 import net.minecraft.client.searchtree.SearchRegistry;
 import net.minecraft.network.chat.Component;
 import net.minecraft.network.chat.TranslatableComponent;
@@ -67,11 +68,11 @@
       this.width = var1;
       this.height = var2;
       this.menu = var5;
       var3.player.containerMenu = var5;
       this.book = var3.player.getRecipeBook();
-      this.timesInventoryChanged = var3.player.inventory.getTimesChanged();
+      this.timesInventoryChanged = var3.player.getInventory().getTimesChanged();
       if (this.isVisible()) {
          this.initVisuals(var4);
       }
 
       var3.keyboardHandler.setSendRepeatsToGui(true);
@@ -80,11 +81,11 @@
    public void initVisuals(boolean var1) {
       this.xOffset = var1 ? 0 : 86;
       int var2 = (this.width - 147) / 2 - this.xOffset;
       int var3 = (this.height - 166) / 2;
       this.stackedContents.clear();
-      this.minecraft.player.inventory.fillStackedContents(this.stackedContents);
+      this.minecraft.player.getInventory().fillStackedContents(this.stackedContents);
       this.menu.fillCraftSlotsStackedContents(this.stackedContents);
       String var4 = this.searchBox != null ? this.searchBox.getValue() : "";
       Font var10003 = this.minecraft.font;
       int var10004 = var2 + 25;
       int var10005 = var3 + 14;
@@ -229,32 +230,33 @@
       }
    }
 
    public void tick() {
       if (this.isVisible()) {
-         if (this.timesInventoryChanged != this.minecraft.player.inventory.getTimesChanged()) {
+         if (this.timesInventoryChanged != this.minecraft.player.getInventory().getTimesChanged()) {
             this.updateStackedContents();
-            this.timesInventoryChanged = this.minecraft.player.inventory.getTimesChanged();
+            this.timesInventoryChanged = this.minecraft.player.getInventory().getTimesChanged();
          }
 
          this.searchBox.tick();
       }
    }
 
    private void updateStackedContents() {
       this.stackedContents.clear();
-      this.minecraft.player.inventory.fillStackedContents(this.stackedContents);
+      this.minecraft.player.getInventory().fillStackedContents(this.stackedContents);
       this.menu.fillCraftSlotsStackedContents(this.stackedContents);
       this.updateCollections(false);
    }
 
    public void render(PoseStack var1, int var2, int var3, float var4) {
       if (this.isVisible()) {
-         RenderSystem.pushMatrix();
-         RenderSystem.translatef(0.0F, 0.0F, 100.0F);
-         this.minecraft.getTextureManager().bind(RECIPE_BOOK_LOCATION);
-         RenderSystem.color4f(1.0F, 1.0F, 1.0F, 1.0F);
+         var1.pushPose();
+         var1.translate(0.0D, 0.0D, 100.0D);
+         RenderSystem.setShader(GameRenderer::getPositionTexShader);
+         RenderSystem.setShaderTexture(0, RECIPE_BOOK_LOCATION);
+         RenderSystem.setShaderColor(1.0F, 1.0F, 1.0F, 1.0F);
          int var5 = (this.width - 147) / 2 - this.xOffset;
          int var6 = (this.height - 166) / 2;
          this.blit(var1, var5, var6, 1, 1, 147, 166);
          if (!this.searchBox.isFocused() && this.searchBox.getValue().isEmpty()) {
             drawString(var1, this.minecraft.font, SEARCH_HINT, var5 + 25, var6 + 14, -1);
@@ -269,11 +271,11 @@
             var8.render(var1, var2, var3, var4);
          }
 
          this.filterButton.render(var1, var2, var3, var4);
          this.recipeBookPage.render(var1, var5, var6, var2, var3, var4);
-         RenderSystem.popMatrix();
+         var1.popPose();
       }
    }
 
    public void renderTooltip(PoseStack var1, int var2, int var3, int var4, int var5) {
       if (this.isVisible()) {
