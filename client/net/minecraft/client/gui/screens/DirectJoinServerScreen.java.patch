--- net/minecraft/client/gui/screens/DirectJoinServerScreen.java
+++ net/minecraft/client/gui/screens/DirectJoinServerScreen.java
@@ -4,10 +4,11 @@
 import it.unimi.dsi.fastutil.booleans.BooleanConsumer;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.gui.components.Button;
 import net.minecraft.client.gui.components.EditBox;
 import net.minecraft.client.multiplayer.ServerData;
+import net.minecraft.client.multiplayer.resolver.ServerAddress;
 import net.minecraft.network.chat.CommonComponents;
 import net.minecraft.network.chat.Component;
 import net.minecraft.network.chat.TranslatableComponent;
 
 public class DirectJoinServerScreen extends Screen {
@@ -28,34 +29,34 @@
    public void tick() {
       this.ipEdit.tick();
    }
 
    public boolean keyPressed(int var1, int var2, int var3) {
-      if (this.getFocused() != this.ipEdit || var1 != 257 && var1 != 335) {
+      if (!this.selectButton.active || this.getFocused() != this.ipEdit || var1 != 257 && var1 != 335) {
          return super.keyPressed(var1, var2, var3);
       } else {
          this.onSelect();
          return true;
       }
    }
 
    protected void init() {
       this.minecraft.keyboardHandler.setSendRepeatsToGui(true);
-      this.selectButton = (Button)this.addButton(new Button(this.width / 2 - 100, this.height / 4 + 96 + 12, 200, 20, new TranslatableComponent("selectServer.select"), (var1) -> {
+      this.selectButton = (Button)this.addRenderableWidget(new Button(this.width / 2 - 100, this.height / 4 + 96 + 12, 200, 20, new TranslatableComponent("selectServer.select"), (var1) -> {
          this.onSelect();
       }));
-      this.addButton(new Button(this.width / 2 - 100, this.height / 4 + 120 + 12, 200, 20, CommonComponents.GUI_CANCEL, (var1) -> {
+      this.addRenderableWidget(new Button(this.width / 2 - 100, this.height / 4 + 120 + 12, 200, 20, CommonComponents.GUI_CANCEL, (var1) -> {
          this.callback.accept(false);
       }));
       this.ipEdit = new EditBox(this.font, this.width / 2 - 100, 116, 200, 20, new TranslatableComponent("addServer.enterIp"));
       this.ipEdit.setMaxLength(128);
       this.ipEdit.setFocus(true);
       this.ipEdit.setValue(this.minecraft.options.lastMpIp);
       this.ipEdit.setResponder((var1) -> {
          this.updateSelectButtonStatus();
       });
-      this.children.add(this.ipEdit);
+      this.addWidget(this.ipEdit);
       this.setInitialFocus(this.ipEdit);
       this.updateSelectButtonStatus();
    }
 
    public void resize(Minecraft var1, int var2, int var3) {
@@ -78,12 +79,11 @@
       this.minecraft.options.lastMpIp = this.ipEdit.getValue();
       this.minecraft.options.save();
    }
 
    private void updateSelectButtonStatus() {
-      String var1 = this.ipEdit.getValue();
-      this.selectButton.active = !var1.isEmpty() && var1.split(":").length > 0 && var1.indexOf(32) == -1;
+      this.selectButton.active = ServerAddress.isValidAddress(this.ipEdit.getValue());
    }
 
    public void render(PoseStack var1, int var2, int var3, float var4) {
       this.renderBackground(var1);
       drawCenteredString(var1, this.font, this.title, this.width / 2, 20, 16777215);
