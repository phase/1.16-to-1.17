--- net/minecraft/client/gui/screens/inventory/StructureBlockEditScreen.java
+++ net/minecraft/client/gui/screens/inventory/StructureBlockEditScreen.java
@@ -1,16 +1,19 @@
 package net.minecraft.client.gui.screens.inventory;
 
+import com.google.common.collect.ImmutableList;
 import com.mojang.blaze3d.vertex.PoseStack;
 import java.text.DecimalFormat;
 import java.text.DecimalFormatSymbols;
 import java.util.Locale;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.gui.components.Button;
+import net.minecraft.client.gui.components.CycleButton;
 import net.minecraft.client.gui.components.EditBox;
 import net.minecraft.client.gui.screens.Screen;
 import net.minecraft.core.BlockPos;
+import net.minecraft.core.Vec3i;
 import net.minecraft.network.chat.CommonComponents;
 import net.minecraft.network.chat.Component;
 import net.minecraft.network.chat.FormattedText;
 import net.minecraft.network.chat.TextComponent;
 import net.minecraft.network.chat.TranslatableComponent;
@@ -30,10 +33,12 @@
    private static final Component CUSTOM_DATA_LABEL = new TranslatableComponent("structure_block.custom_data");
    private static final Component INCLUDE_ENTITIES_LABEL = new TranslatableComponent("structure_block.include_entities");
    private static final Component DETECT_SIZE_LABEL = new TranslatableComponent("structure_block.detect_size");
    private static final Component SHOW_AIR_LABEL = new TranslatableComponent("structure_block.show_air");
    private static final Component SHOW_BOUNDING_BOX_LABEL = new TranslatableComponent("structure_block.show_boundingbox");
+   private static final ImmutableList<StructureMode> ALL_MODES = ImmutableList.copyOf(StructureMode.values());
+   private static final ImmutableList<StructureMode> DEFAULT_MODES;
    private final StructureBlockEntity structure;
    private Mirror initialMirror;
    private Rotation initialRotation;
    private StructureMode initialMode;
    private boolean initialEntityIgnoring;
@@ -47,24 +52,21 @@
    private EditBox sizeYEdit;
    private EditBox sizeZEdit;
    private EditBox integrityEdit;
    private EditBox seedEdit;
    private EditBox dataEdit;
-   private Button doneButton;
-   private Button cancelButton;
    private Button saveButton;
    private Button loadButton;
    private Button rot0Button;
    private Button rot90Button;
    private Button rot180Button;
    private Button rot270Button;
-   private Button modeButton;
    private Button detectButton;
-   private Button entitiesButton;
-   private Button mirrorButton;
-   private Button toggleAirButton;
-   private Button toggleBoundingBox;
+   private CycleButton<Boolean> includeEntitiesButton;
+   private CycleButton<Mirror> mirrorButton;
+   private CycleButton<Boolean> toggleAirButton;
+   private CycleButton<Boolean> toggleBoundingBox;
    private final DecimalFormat decimalFormat;
 
    public StructureBlockEditScreen(StructureBlockEntity var1) {
       super(new TranslatableComponent(Blocks.STRUCTURE_BLOCK.getDescriptionId()));
       this.initialMirror = Mirror.NONE;
@@ -105,141 +107,125 @@
       this.minecraft.setScreen((Screen)null);
    }
 
    protected void init() {
       this.minecraft.keyboardHandler.setSendRepeatsToGui(true);
-      this.doneButton = (Button)this.addButton(new Button(this.width / 2 - 4 - 150, 210, 150, 20, CommonComponents.GUI_DONE, (var1x) -> {
+      this.addRenderableWidget(new Button(this.width / 2 - 4 - 150, 210, 150, 20, CommonComponents.GUI_DONE, (var1x) -> {
          this.onDone();
       }));
-      this.cancelButton = (Button)this.addButton(new Button(this.width / 2 + 4, 210, 150, 20, CommonComponents.GUI_CANCEL, (var1x) -> {
+      this.addRenderableWidget(new Button(this.width / 2 + 4, 210, 150, 20, CommonComponents.GUI_CANCEL, (var1x) -> {
          this.onCancel();
       }));
-      this.saveButton = (Button)this.addButton(new Button(this.width / 2 + 4 + 100, 185, 50, 20, new TranslatableComponent("structure_block.button.save"), (var1x) -> {
+      this.initialMirror = this.structure.getMirror();
+      this.initialRotation = this.structure.getRotation();
+      this.initialMode = this.structure.getMode();
+      this.initialEntityIgnoring = this.structure.isIgnoreEntities();
+      this.initialShowAir = this.structure.getShowAir();
+      this.initialShowBoundingBox = this.structure.getShowBoundingBox();
+      this.saveButton = (Button)this.addRenderableWidget(new Button(this.width / 2 + 4 + 100, 185, 50, 20, new TranslatableComponent("structure_block.button.save"), (var1x) -> {
          if (this.structure.getMode() == StructureMode.SAVE) {
             this.sendToServer(StructureBlockEntity.UpdateType.SAVE_AREA);
             this.minecraft.setScreen((Screen)null);
          }
 
       }));
-      this.loadButton = (Button)this.addButton(new Button(this.width / 2 + 4 + 100, 185, 50, 20, new TranslatableComponent("structure_block.button.load"), (var1x) -> {
+      this.loadButton = (Button)this.addRenderableWidget(new Button(this.width / 2 + 4 + 100, 185, 50, 20, new TranslatableComponent("structure_block.button.load"), (var1x) -> {
          if (this.structure.getMode() == StructureMode.LOAD) {
             this.sendToServer(StructureBlockEntity.UpdateType.LOAD_AREA);
             this.minecraft.setScreen((Screen)null);
          }
 
       }));
-      this.modeButton = (Button)this.addButton(new Button(this.width / 2 - 4 - 150, 185, 50, 20, new TextComponent("MODE"), (var1x) -> {
-         this.structure.nextMode();
-         this.updateMode();
+      this.addRenderableWidget(CycleButton.builder((var0) -> {
+         return new TranslatableComponent("structure_block.mode." + var0.getSerializedName());
+      }).withValues(DEFAULT_MODES, ALL_MODES).displayOnlyValue().withInitialValue(this.initialMode).create(this.width / 2 - 4 - 150, 185, 50, 20, new TextComponent("MODE"), (var1x, var2x) -> {
+         this.structure.setMode(var2x);
+         this.updateMode(var2x);
       }));
-      this.detectButton = (Button)this.addButton(new Button(this.width / 2 + 4 + 100, 120, 50, 20, new TranslatableComponent("structure_block.button.detect_size"), (var1x) -> {
+      this.detectButton = (Button)this.addRenderableWidget(new Button(this.width / 2 + 4 + 100, 120, 50, 20, new TranslatableComponent("structure_block.button.detect_size"), (var1x) -> {
          if (this.structure.getMode() == StructureMode.SAVE) {
             this.sendToServer(StructureBlockEntity.UpdateType.SCAN_AREA);
             this.minecraft.setScreen((Screen)null);
          }
 
       }));
-      this.entitiesButton = (Button)this.addButton(new Button(this.width / 2 + 4 + 100, 160, 50, 20, new TextComponent("ENTITIES"), (var1x) -> {
-         this.structure.setIgnoreEntities(!this.structure.isIgnoreEntities());
-         this.updateEntitiesButton();
+      this.includeEntitiesButton = (CycleButton)this.addRenderableWidget(CycleButton.onOffBuilder(!this.structure.isIgnoreEntities()).displayOnlyValue().create(this.width / 2 + 4 + 100, 160, 50, 20, INCLUDE_ENTITIES_LABEL, (var1x, var2x) -> {
+         this.structure.setIgnoreEntities(!var2x);
       }));
-      this.mirrorButton = (Button)this.addButton(new Button(this.width / 2 - 20, 185, 40, 20, new TextComponent("MIRROR"), (var1x) -> {
-         switch(this.structure.getMirror()) {
-         case NONE:
-            this.structure.setMirror(Mirror.LEFT_RIGHT);
-            break;
-         case LEFT_RIGHT:
-            this.structure.setMirror(Mirror.FRONT_BACK);
-            break;
-         case FRONT_BACK:
-            this.structure.setMirror(Mirror.NONE);
-         }
-
-         this.updateMirrorButton();
+      this.mirrorButton = (CycleButton)this.addRenderableWidget(CycleButton.builder(Mirror::symbol).withValues((Object[])Mirror.values()).displayOnlyValue().withInitialValue(this.initialMirror).create(this.width / 2 - 20, 185, 40, 20, new TextComponent("MIRROR"), (var1x, var2x) -> {
+         this.structure.setMirror(var2x);
       }));
-      this.toggleAirButton = (Button)this.addButton(new Button(this.width / 2 + 4 + 100, 80, 50, 20, new TextComponent("SHOWAIR"), (var1x) -> {
-         this.structure.setShowAir(!this.structure.getShowAir());
-         this.updateToggleAirButton();
+      this.toggleAirButton = (CycleButton)this.addRenderableWidget(CycleButton.onOffBuilder(this.structure.getShowAir()).displayOnlyValue().create(this.width / 2 + 4 + 100, 80, 50, 20, SHOW_AIR_LABEL, (var1x, var2x) -> {
+         this.structure.setShowAir(var2x);
       }));
-      this.toggleBoundingBox = (Button)this.addButton(new Button(this.width / 2 + 4 + 100, 80, 50, 20, new TextComponent("SHOWBB"), (var1x) -> {
-         this.structure.setShowBoundingBox(!this.structure.getShowBoundingBox());
-         this.updateToggleBoundingBox();
+      this.toggleBoundingBox = (CycleButton)this.addRenderableWidget(CycleButton.onOffBuilder(this.structure.getShowBoundingBox()).displayOnlyValue().create(this.width / 2 + 4 + 100, 80, 50, 20, SHOW_BOUNDING_BOX_LABEL, (var1x, var2x) -> {
+         this.structure.setShowBoundingBox(var2x);
       }));
-      this.rot0Button = (Button)this.addButton(new Button(this.width / 2 - 1 - 40 - 1 - 40 - 20, 185, 40, 20, new TextComponent("0"), (var1x) -> {
+      this.rot0Button = (Button)this.addRenderableWidget(new Button(this.width / 2 - 1 - 40 - 1 - 40 - 20, 185, 40, 20, new TextComponent("0"), (var1x) -> {
          this.structure.setRotation(Rotation.NONE);
          this.updateDirectionButtons();
       }));
-      this.rot90Button = (Button)this.addButton(new Button(this.width / 2 - 1 - 40 - 20, 185, 40, 20, new TextComponent("90"), (var1x) -> {
+      this.rot90Button = (Button)this.addRenderableWidget(new Button(this.width / 2 - 1 - 40 - 20, 185, 40, 20, new TextComponent("90"), (var1x) -> {
          this.structure.setRotation(Rotation.CLOCKWISE_90);
          this.updateDirectionButtons();
       }));
-      this.rot180Button = (Button)this.addButton(new Button(this.width / 2 + 1 + 20, 185, 40, 20, new TextComponent("180"), (var1x) -> {
+      this.rot180Button = (Button)this.addRenderableWidget(new Button(this.width / 2 + 1 + 20, 185, 40, 20, new TextComponent("180"), (var1x) -> {
          this.structure.setRotation(Rotation.CLOCKWISE_180);
          this.updateDirectionButtons();
       }));
-      this.rot270Button = (Button)this.addButton(new Button(this.width / 2 + 1 + 40 + 1 + 20, 185, 40, 20, new TextComponent("270"), (var1x) -> {
+      this.rot270Button = (Button)this.addRenderableWidget(new Button(this.width / 2 + 1 + 40 + 1 + 20, 185, 40, 20, new TextComponent("270"), (var1x) -> {
          this.structure.setRotation(Rotation.COUNTERCLOCKWISE_90);
          this.updateDirectionButtons();
       }));
       this.nameEdit = new EditBox(this.font, this.width / 2 - 152, 40, 300, 20, new TranslatableComponent("structure_block.structure_name")) {
          public boolean charTyped(char var1, int var2) {
             return !StructureBlockEditScreen.this.isValidCharacterForName(this.getValue(), var1, this.getCursorPosition()) ? false : super.charTyped(var1, var2);
          }
       };
       this.nameEdit.setMaxLength(64);
       this.nameEdit.setValue(this.structure.getStructureName());
-      this.children.add(this.nameEdit);
+      this.addWidget(this.nameEdit);
       BlockPos var1 = this.structure.getStructurePos();
       this.posXEdit = new EditBox(this.font, this.width / 2 - 152, 80, 80, 20, new TranslatableComponent("structure_block.position.x"));
       this.posXEdit.setMaxLength(15);
       this.posXEdit.setValue(Integer.toString(var1.getX()));
-      this.children.add(this.posXEdit);
+      this.addWidget(this.posXEdit);
       this.posYEdit = new EditBox(this.font, this.width / 2 - 72, 80, 80, 20, new TranslatableComponent("structure_block.position.y"));
       this.posYEdit.setMaxLength(15);
       this.posYEdit.setValue(Integer.toString(var1.getY()));
-      this.children.add(this.posYEdit);
+      this.addWidget(this.posYEdit);
       this.posZEdit = new EditBox(this.font, this.width / 2 + 8, 80, 80, 20, new TranslatableComponent("structure_block.position.z"));
       this.posZEdit.setMaxLength(15);
       this.posZEdit.setValue(Integer.toString(var1.getZ()));
-      this.children.add(this.posZEdit);
-      BlockPos var2 = this.structure.getStructureSize();
+      this.addWidget(this.posZEdit);
+      Vec3i var2 = this.structure.getStructureSize();
       this.sizeXEdit = new EditBox(this.font, this.width / 2 - 152, 120, 80, 20, new TranslatableComponent("structure_block.size.x"));
       this.sizeXEdit.setMaxLength(15);
       this.sizeXEdit.setValue(Integer.toString(var2.getX()));
-      this.children.add(this.sizeXEdit);
+      this.addWidget(this.sizeXEdit);
       this.sizeYEdit = new EditBox(this.font, this.width / 2 - 72, 120, 80, 20, new TranslatableComponent("structure_block.size.y"));
       this.sizeYEdit.setMaxLength(15);
       this.sizeYEdit.setValue(Integer.toString(var2.getY()));
-      this.children.add(this.sizeYEdit);
+      this.addWidget(this.sizeYEdit);
       this.sizeZEdit = new EditBox(this.font, this.width / 2 + 8, 120, 80, 20, new TranslatableComponent("structure_block.size.z"));
       this.sizeZEdit.setMaxLength(15);
       this.sizeZEdit.setValue(Integer.toString(var2.getZ()));
-      this.children.add(this.sizeZEdit);
+      this.addWidget(this.sizeZEdit);
       this.integrityEdit = new EditBox(this.font, this.width / 2 - 152, 120, 80, 20, new TranslatableComponent("structure_block.integrity.integrity"));
       this.integrityEdit.setMaxLength(15);
       this.integrityEdit.setValue(this.decimalFormat.format((double)this.structure.getIntegrity()));
-      this.children.add(this.integrityEdit);
+      this.addWidget(this.integrityEdit);
       this.seedEdit = new EditBox(this.font, this.width / 2 - 72, 120, 80, 20, new TranslatableComponent("structure_block.integrity.seed"));
       this.seedEdit.setMaxLength(31);
       this.seedEdit.setValue(Long.toString(this.structure.getSeed()));
-      this.children.add(this.seedEdit);
+      this.addWidget(this.seedEdit);
       this.dataEdit = new EditBox(this.font, this.width / 2 - 152, 120, 240, 20, new TranslatableComponent("structure_block.custom_data"));
       this.dataEdit.setMaxLength(128);
       this.dataEdit.setValue(this.structure.getMetaData());
-      this.children.add(this.dataEdit);
-      this.initialMirror = this.structure.getMirror();
-      this.updateMirrorButton();
-      this.initialRotation = this.structure.getRotation();
+      this.addWidget(this.dataEdit);
       this.updateDirectionButtons();
-      this.initialMode = this.structure.getMode();
-      this.updateMode();
-      this.initialEntityIgnoring = this.structure.isIgnoreEntities();
-      this.updateEntitiesButton();
-      this.initialShowAir = this.structure.getShowAir();
-      this.updateToggleAirButton();
-      this.initialShowBoundingBox = this.structure.getShowBoundingBox();
-      this.updateToggleBoundingBox();
+      this.updateMode(this.initialMode);
       this.setInitialFocus(this.nameEdit);
    }
 
    public void resize(Minecraft var1, int var2, int var3) {
       String var4 = this.nameEdit.getValue();
@@ -267,37 +253,10 @@
 
    public void removed() {
       this.minecraft.keyboardHandler.setSendRepeatsToGui(false);
    }
 
-   private void updateEntitiesButton() {
-      this.entitiesButton.setMessage(CommonComponents.optionStatus(!this.structure.isIgnoreEntities()));
-   }
-
-   private void updateToggleAirButton() {
-      this.toggleAirButton.setMessage(CommonComponents.optionStatus(this.structure.getShowAir()));
-   }
-
-   private void updateToggleBoundingBox() {
-      this.toggleBoundingBox.setMessage(CommonComponents.optionStatus(this.structure.getShowBoundingBox()));
-   }
-
-   private void updateMirrorButton() {
-      Mirror var1 = this.structure.getMirror();
-      switch(var1) {
-      case NONE:
-         this.mirrorButton.setMessage(new TextComponent("|"));
-         break;
-      case LEFT_RIGHT:
-         this.mirrorButton.setMessage(new TextComponent("< >"));
-         break;
-      case FRONT_BACK:
-         this.mirrorButton.setMessage(new TextComponent("^ v"));
-      }
-
-   }
-
    private void updateDirectionButtons() {
       this.rot0Button.active = true;
       this.rot90Button.active = true;
       this.rot180Button.active = true;
       this.rot270Button.active = true;
@@ -315,11 +274,11 @@
          this.rot90Button.active = false;
       }
 
    }
 
-   private void updateMode() {
+   private void updateMode(StructureMode var1) {
       this.nameEdit.setVisible(false);
       this.posXEdit.setVisible(false);
       this.posYEdit.setVisible(false);
       this.posZEdit.setVisible(false);
       this.sizeXEdit.setVisible(false);
@@ -329,41 +288,41 @@
       this.seedEdit.setVisible(false);
       this.dataEdit.setVisible(false);
       this.saveButton.visible = false;
       this.loadButton.visible = false;
       this.detectButton.visible = false;
-      this.entitiesButton.visible = false;
+      this.includeEntitiesButton.visible = false;
       this.mirrorButton.visible = false;
       this.rot0Button.visible = false;
       this.rot90Button.visible = false;
       this.rot180Button.visible = false;
       this.rot270Button.visible = false;
       this.toggleAirButton.visible = false;
       this.toggleBoundingBox.visible = false;
-      switch(this.structure.getMode()) {
+      switch(var1) {
       case SAVE:
          this.nameEdit.setVisible(true);
          this.posXEdit.setVisible(true);
          this.posYEdit.setVisible(true);
          this.posZEdit.setVisible(true);
          this.sizeXEdit.setVisible(true);
          this.sizeYEdit.setVisible(true);
          this.sizeZEdit.setVisible(true);
          this.saveButton.visible = true;
          this.detectButton.visible = true;
-         this.entitiesButton.visible = true;
+         this.includeEntitiesButton.visible = true;
          this.toggleAirButton.visible = true;
          break;
       case LOAD:
          this.nameEdit.setVisible(true);
          this.posXEdit.setVisible(true);
          this.posYEdit.setVisible(true);
          this.posZEdit.setVisible(true);
          this.integrityEdit.setVisible(true);
          this.seedEdit.setVisible(true);
          this.loadButton.visible = true;
-         this.entitiesButton.visible = true;
+         this.includeEntitiesButton.visible = true;
          this.mirrorButton.visible = true;
          this.rot0Button.visible = true;
          this.rot90Button.visible = true;
          this.rot180Button.visible = true;
          this.rot270Button.visible = true;
@@ -375,16 +334,15 @@
          break;
       case DATA:
          this.dataEdit.setVisible(true);
       }
 
-      this.modeButton.setMessage(new TranslatableComponent("structure_block.mode." + this.structure.getMode().getSerializedName()));
    }
 
    private boolean sendToServer(StructureBlockEntity.UpdateType var1) {
       BlockPos var2 = new BlockPos(this.parseCoordinate(this.posXEdit.getValue()), this.parseCoordinate(this.posYEdit.getValue()), this.parseCoordinate(this.posZEdit.getValue()));
-      BlockPos var3 = new BlockPos(this.parseCoordinate(this.sizeXEdit.getValue()), this.parseCoordinate(this.sizeYEdit.getValue()), this.parseCoordinate(this.sizeZEdit.getValue()));
+      Vec3i var3 = new Vec3i(this.parseCoordinate(this.sizeXEdit.getValue()), this.parseCoordinate(this.sizeYEdit.getValue()), this.parseCoordinate(this.sizeZEdit.getValue()));
       float var4 = this.parseIntegrity(this.integrityEdit.getValue());
       long var5 = this.parseSeed(this.seedEdit.getValue());
       this.minecraft.getConnection().send((Packet)(new ServerboundSetStructureBlockPacket(this.structure.getBlockPos(), var1, this.structure.getMode(), this.nameEdit.getValue(), var2, var3, this.structure.getMirror(), this.structure.getRotation(), this.dataEdit.getValue(), this.structure.isIgnoreEntities(), this.structure.getShowAir(), this.structure.getShowBoundingBox(), var4, var5)));
       return true;
    }
@@ -471,6 +429,12 @@
    }
 
    public boolean isPauseScreen() {
       return false;
    }
+
+   static {
+      DEFAULT_MODES = (ImmutableList)ALL_MODES.stream().filter((var0) -> {
+         return var0 != StructureMode.DATA;
+      }).collect(ImmutableList.toImmutableList());
+   }
 }
