--- net/minecraft/client/gui/screens/inventory/AbstractCommandBlockEditScreen.java
+++ net/minecraft/client/gui/screens/inventory/AbstractCommandBlockEditScreen.java
@@ -3,10 +3,11 @@
 import com.mojang.blaze3d.vertex.PoseStack;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.gui.chat.NarratorChatListener;
 import net.minecraft.client.gui.components.Button;
 import net.minecraft.client.gui.components.CommandSuggestions;
+import net.minecraft.client.gui.components.CycleButton;
 import net.minecraft.client.gui.components.EditBox;
 import net.minecraft.client.gui.screens.Screen;
 import net.minecraft.network.chat.CommonComponents;
 import net.minecraft.network.chat.Component;
 import net.minecraft.network.chat.MutableComponent;
@@ -20,11 +21,11 @@
    private static final Component PREVIOUS_OUTPUT_LABEL = new TranslatableComponent("advMode.previousOutput");
    protected EditBox commandEdit;
    protected EditBox previousEdit;
    protected Button doneButton;
    protected Button cancelButton;
-   protected Button outputButton;
+   protected CycleButton<Boolean> outputButton;
    protected boolean trackOutput;
    private CommandSuggestions commandSuggestions;
 
    public AbstractCommandBlockEditScreen() {
       super(NarratorChatListener.NO_TITLE);
@@ -38,20 +39,21 @@
 
    abstract int getPreviousY();
 
    protected void init() {
       this.minecraft.keyboardHandler.setSendRepeatsToGui(true);
-      this.doneButton = (Button)this.addButton(new Button(this.width / 2 - 4 - 150, this.height / 4 + 120 + 12, 150, 20, CommonComponents.GUI_DONE, (var1) -> {
+      this.doneButton = (Button)this.addButton(new Button(this.width / 2 - 4 - 150, this.height / 4 + 120 + 12, 150, 20, CommonComponents.GUI_DONE, (var1x) -> {
          this.onDone();
       }));
-      this.cancelButton = (Button)this.addButton(new Button(this.width / 2 + 4, this.height / 4 + 120 + 12, 150, 20, CommonComponents.GUI_CANCEL, (var1) -> {
+      this.cancelButton = (Button)this.addButton(new Button(this.width / 2 + 4, this.height / 4 + 120 + 12, 150, 20, CommonComponents.GUI_CANCEL, (var1x) -> {
          this.onClose();
       }));
-      this.outputButton = (Button)this.addButton(new Button(this.width / 2 + 150 - 20, this.getPreviousY(), 20, 20, new TextComponent("O"), (var1) -> {
-         BaseCommandBlock var2 = this.getCommandBlock();
-         var2.setTrackOutput(!var2.isTrackOutput());
-         this.updateCommandOutput();
+      boolean var1 = this.getCommandBlock().isTrackOutput();
+      this.outputButton = (CycleButton)this.addButton(CycleButton.booleanBuilder(new TextComponent("O"), new TextComponent("X")).withInitialValue(var1).displayOnlyValue().create(this.width / 2 + 150 - 20, this.getPreviousY(), 20, 20, new TranslatableComponent("advMode.trackOutput"), (var1x, var2) -> {
+         BaseCommandBlock var3 = this.getCommandBlock();
+         var3.setTrackOutput(var2);
+         this.updatePreviousOutput(var2);
       }));
       this.commandEdit = new EditBox(this.font, this.width / 2 - 150, 50, 300, 20, new TranslatableComponent("advMode.command")) {
          protected MutableComponent createNarrationMessage() {
             return super.createNarrationMessage().append(AbstractCommandBlockEditScreen.this.commandSuggestions.getNarrationMessage());
          }
@@ -67,28 +69,22 @@
       this.setInitialFocus(this.commandEdit);
       this.commandEdit.setFocus(true);
       this.commandSuggestions = new CommandSuggestions(this.minecraft, this, this.commandEdit, this.font, true, true, 0, 7, false, Integer.MIN_VALUE);
       this.commandSuggestions.setAllowSuggestions(true);
       this.commandSuggestions.updateCommandInfo();
+      this.updatePreviousOutput(var1);
    }
 
    public void resize(Minecraft var1, int var2, int var3) {
       String var4 = this.commandEdit.getValue();
       this.init(var1, var2, var3);
       this.commandEdit.setValue(var4);
       this.commandSuggestions.updateCommandInfo();
    }
 
-   protected void updateCommandOutput() {
-      if (this.getCommandBlock().isTrackOutput()) {
-         this.outputButton.setMessage(new TextComponent("O"));
-         this.previousEdit.setValue(this.getCommandBlock().getLastOutput().getString());
-      } else {
-         this.outputButton.setMessage(new TextComponent("X"));
-         this.previousEdit.setValue("-");
-      }
-
+   private void updatePreviousOutput(boolean var1) {
+      this.previousEdit.setValue(var1 ? this.getCommandBlock().getLastOutput().getString() : "-");
    }
 
    protected void onDone() {
       BaseCommandBlock var1 = this.getCommandBlock();
       this.populateAndSendPacket(var1);
