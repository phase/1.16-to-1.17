--- net/minecraft/client/gui/screens/inventory/BookEditScreen.java
+++ net/minecraft/client/gui/screens/inventory/BookEditScreen.java
@@ -5,15 +5,18 @@
 import com.mojang.blaze3d.systems.RenderSystem;
 import com.mojang.blaze3d.vertex.BufferBuilder;
 import com.mojang.blaze3d.vertex.DefaultVertexFormat;
 import com.mojang.blaze3d.vertex.PoseStack;
 import com.mojang.blaze3d.vertex.Tesselator;
+import com.mojang.blaze3d.vertex.VertexFormat;
 import it.unimi.dsi.fastutil.ints.IntArrayList;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
 import java.util.ListIterator;
+import java.util.Objects;
+import java.util.stream.Stream;
 import javax.annotation.Nullable;
 import net.minecraft.ChatFormatting;
 import net.minecraft.SharedConstants;
 import net.minecraft.Util;
 import net.minecraft.client.StringSplitter;
@@ -22,10 +25,11 @@
 import net.minecraft.client.gui.chat.NarratorChatListener;
 import net.minecraft.client.gui.components.Button;
 import net.minecraft.client.gui.components.events.GuiEventListener;
 import net.minecraft.client.gui.font.TextFieldHelper;
 import net.minecraft.client.gui.screens.Screen;
+import net.minecraft.client.renderer.GameRenderer;
 import net.minecraft.client.renderer.Rect2i;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.nbt.ListTag;
 import net.minecraft.nbt.StringTag;
 import net.minecraft.network.chat.CommonComponents;
@@ -43,10 +47,15 @@
 import org.apache.commons.lang3.StringUtils;
 import org.apache.commons.lang3.mutable.MutableBoolean;
 import org.apache.commons.lang3.mutable.MutableInt;
 
 public class BookEditScreen extends Screen {
+   private static final int TEXT_WIDTH = 114;
+   private static final int TEXT_HEIGHT = 128;
+   private static final int DOUBLECLICK_SPEED = 250;
+   private static final int IMAGE_WIDTH = 192;
+   private static final int IMAGE_HEIGHT = 192;
    private static final Component EDIT_TITLE_LABEL = new TranslatableComponent("book.editTitle");
    private static final Component FINALIZE_WARNING_LABEL = new TranslatableComponent("book.finalizeWarning");
    private static final FormattedCharSequence BLACK_CURSOR;
    private static final FormattedCharSequence GRAY_CURSOR;
    private final Player owner;
@@ -88,15 +97,13 @@
       this.owner = var1;
       this.book = var2;
       this.hand = var3;
       CompoundTag var4 = var2.getTag();
       if (var4 != null) {
-         ListTag var5 = var4.getList("pages", 8).copy();
-
-         for(int var6 = 0; var6 < var5.size(); ++var6) {
-            this.pages.add(var5.getString(var6));
-         }
+         List var10001 = this.pages;
+         Objects.requireNonNull(var10001);
+         BookViewScreen.loadPages(var4, var10001::add);
       }
 
       if (this.pages.isEmpty()) {
          this.pages.add("");
       }
@@ -125,38 +132,38 @@
    }
 
    protected void init() {
       this.clearDisplayCache();
       this.minecraft.keyboardHandler.setSendRepeatsToGui(true);
-      this.signButton = (Button)this.addButton(new Button(this.width / 2 - 100, 196, 98, 20, new TranslatableComponent("book.signButton"), (var1x) -> {
+      this.signButton = (Button)this.addRenderableWidget(new Button(this.width / 2 - 100, 196, 98, 20, new TranslatableComponent("book.signButton"), (var1x) -> {
          this.isSigning = true;
          this.updateButtonVisibility();
       }));
-      this.doneButton = (Button)this.addButton(new Button(this.width / 2 + 2, 196, 98, 20, CommonComponents.GUI_DONE, (var1x) -> {
+      this.doneButton = (Button)this.addRenderableWidget(new Button(this.width / 2 + 2, 196, 98, 20, CommonComponents.GUI_DONE, (var1x) -> {
          this.minecraft.setScreen((Screen)null);
          this.saveChanges(false);
       }));
-      this.finalizeButton = (Button)this.addButton(new Button(this.width / 2 - 100, 196, 98, 20, new TranslatableComponent("book.finalizeButton"), (var1x) -> {
+      this.finalizeButton = (Button)this.addRenderableWidget(new Button(this.width / 2 - 100, 196, 98, 20, new TranslatableComponent("book.finalizeButton"), (var1x) -> {
          if (this.isSigning) {
             this.saveChanges(true);
             this.minecraft.setScreen((Screen)null);
          }
 
       }));
-      this.cancelButton = (Button)this.addButton(new Button(this.width / 2 + 2, 196, 98, 20, CommonComponents.GUI_CANCEL, (var1x) -> {
+      this.cancelButton = (Button)this.addRenderableWidget(new Button(this.width / 2 + 2, 196, 98, 20, CommonComponents.GUI_CANCEL, (var1x) -> {
          if (this.isSigning) {
             this.isSigning = false;
          }
 
          this.updateButtonVisibility();
       }));
       int var1 = (this.width - 192) / 2;
       boolean var2 = true;
-      this.forwardButton = (PageButton)this.addButton(new PageButton(var1 + 116, 159, true, (var1x) -> {
+      this.forwardButton = (PageButton)this.addRenderableWidget(new PageButton(var1 + 116, 159, true, (var1x) -> {
          this.pageForward();
       }, true));
-      this.backButton = (PageButton)this.addButton(new PageButton(var1 + 43, 159, false, (var1x) -> {
+      this.backButton = (PageButton)this.addRenderableWidget(new PageButton(var1 + 43, 159, false, (var1x) -> {
          this.pageBack();
       }, true));
       this.updateButtonVisibility();
    }
 
@@ -208,21 +215,23 @@
 
    private void saveChanges(boolean var1) {
       if (this.isModified) {
          this.eraseEmptyTrailingPages();
          ListTag var2 = new ListTag();
-         this.pages.stream().map(StringTag::valueOf).forEach(var2::add);
+         Stream var10000 = this.pages.stream().map(StringTag::valueOf);
+         Objects.requireNonNull(var2);
+         var10000.forEach(var2::add);
          if (!this.pages.isEmpty()) {
             this.book.addTagElement("pages", var2);
          }
 
          if (var1) {
             this.book.addTagElement("author", StringTag.valueOf(this.owner.getGameProfile().getName()));
             this.book.addTagElement("title", StringTag.valueOf(this.title.trim()));
          }
 
-         int var3 = this.hand == InteractionHand.MAIN_HAND ? this.owner.inventory.selected : 40;
+         int var3 = this.hand == InteractionHand.MAIN_HAND ? this.owner.getInventory().selected : 40;
          this.minecraft.getConnection().send((Packet)(new ServerboundEditBookPacket(this.book, var1, var3)));
       }
    }
 
    private void appendPageToBook() {
@@ -385,12 +394,13 @@
    }
 
    public void render(PoseStack var1, int var2, int var3, float var4) {
       this.renderBackground(var1);
       this.setFocused((GuiEventListener)null);
-      RenderSystem.color4f(1.0F, 1.0F, 1.0F, 1.0F);
-      this.minecraft.getTextureManager().bind(BookViewScreen.BOOK_LOCATION);
+      RenderSystem.setShader(GameRenderer::getPositionTexShader);
+      RenderSystem.setShaderColor(1.0F, 1.0F, 1.0F, 1.0F);
+      RenderSystem.setShaderTexture(0, BookViewScreen.BOOK_LOCATION);
       int var5 = (this.width - 192) / 2;
       boolean var6 = true;
       this.blit(var1, var5, 2, 0, 0, 192, 192);
       int var10;
       int var11;
@@ -429,11 +439,11 @@
          if (!var3) {
             int var10001 = var2.x;
             int var10002 = var2.y - 1;
             int var10003 = var2.x + 1;
             int var10004 = var2.y;
-            this.font.getClass();
+            Objects.requireNonNull(this.font);
             GuiComponent.fill(var1, var10001, var10002, var10003, var10004 + 9, -16777216);
          } else {
             this.font.draw(var1, (String)"_", (float)var2.x, (float)var2.y, 0);
          }
       }
@@ -441,15 +451,16 @@
    }
 
    private void renderHighlight(Rect2i[] var1) {
       Tesselator var2 = Tesselator.getInstance();
       BufferBuilder var3 = var2.getBuilder();
-      RenderSystem.color4f(0.0F, 0.0F, 255.0F, 255.0F);
+      RenderSystem.setShader(GameRenderer::getPositionShader);
+      RenderSystem.setShaderColor(0.0F, 0.0F, 255.0F, 255.0F);
       RenderSystem.disableTexture();
       RenderSystem.enableColorLogicOp();
       RenderSystem.logicOp(GlStateManager.LogicOp.OR_REVERSE);
-      var3.begin(7, DefaultVertexFormat.POSITION);
+      var3.begin(VertexFormat.Mode.QUADS, DefaultVertexFormat.POSITION);
       Rect2i[] var4 = var1;
       int var5 = var1.length;
 
       for(int var6 = 0; var6 < var5; ++var6) {
          Rect2i var7 = var4[var6];
@@ -559,11 +570,11 @@
          var8.splitLines(var1, 114, Style.EMPTY, true, (var6x, var7x, var8x) -> {
             int var9 = var6.getAndIncrement();
             String var10 = var1.substring(var7x, var8x);
             var7.setValue(var10.endsWith("\n"));
             String var11 = StringUtils.stripEnd(var10, " \n");
-            this.font.getClass();
+            Objects.requireNonNull(this.font);
             int var12 = var9 * 9;
             BookEditScreen.Pos2i var13 = this.convertLocalToScreen(new BookEditScreen.Pos2i(0, var12));
             var4.add(var7x);
             var5.add(new BookEditScreen.LineInfo(var6x, var11, var13.x, var13.y));
          });
@@ -571,16 +582,16 @@
          boolean var10 = var2 == var1.length();
          BookEditScreen.Pos2i var11;
          int var13;
          if (var10 && var7.isTrue()) {
             int var10003 = var5.size();
-            this.font.getClass();
+            Objects.requireNonNull(this.font);
             var11 = new BookEditScreen.Pos2i(0, var10003 * 9);
          } else {
             int var12 = findLineFromPos(var9, var2);
             var13 = this.font.width(var1.substring(var9[var12], var2));
-            this.font.getClass();
+            Objects.requireNonNull(this.font);
             var11 = new BookEditScreen.Pos2i(var13, var12 * 9);
          }
 
          ArrayList var22 = Lists.newArrayList();
          if (var2 != var3) {
@@ -589,50 +600,50 @@
             int var15 = findLineFromPos(var9, var13);
             int var16 = findLineFromPos(var9, var14);
             int var17;
             int var18;
             if (var15 == var16) {
-               this.font.getClass();
+               Objects.requireNonNull(this.font);
                var17 = var15 * 9;
                var18 = var9[var15];
                var22.add(this.createPartialLineSelection(var1, var8, var13, var14, var17, var18));
             } else {
                var17 = var15 + 1 > var9.length ? var1.length() : var9[var15 + 1];
-               this.font.getClass();
+               Objects.requireNonNull(this.font);
                var22.add(this.createPartialLineSelection(var1, var8, var13, var17, var15 * 9, var9[var15]));
 
                for(var18 = var15 + 1; var18 < var16; ++var18) {
-                  this.font.getClass();
+                  Objects.requireNonNull(this.font);
                   int var19 = var18 * 9;
                   String var20 = var1.substring(var9[var18], var9[var18 + 1]);
                   int var21 = (int)var8.stringWidth(var20);
                   BookEditScreen.Pos2i var10002 = new BookEditScreen.Pos2i(0, var19);
-                  this.font.getClass();
+                  Objects.requireNonNull(this.font);
                   var22.add(this.createSelection(var10002, new BookEditScreen.Pos2i(var21, var19 + 9)));
                }
 
                int var10004 = var9[var16];
-               this.font.getClass();
+               Objects.requireNonNull(this.font);
                var22.add(this.createPartialLineSelection(var1, var8, var10004, var14, var16 * 9, var9[var16]));
             }
          }
 
          return new BookEditScreen.DisplayCache(var1, var11, var10, var9, (BookEditScreen.LineInfo[])var5.toArray(new BookEditScreen.LineInfo[0]), (Rect2i[])var22.toArray(new Rect2i[0]));
       }
    }
 
-   private static int findLineFromPos(int[] var0, int var1) {
+   static int findLineFromPos(int[] var0, int var1) {
       int var2 = Arrays.binarySearch(var0, var1);
       return var2 < 0 ? -(var2 + 2) : var2;
    }
 
    private Rect2i createPartialLineSelection(String var1, StringSplitter var2, int var3, int var4, int var5, int var6) {
       String var7 = var1.substring(var6, var3);
       String var8 = var1.substring(var6, var4);
       BookEditScreen.Pos2i var9 = new BookEditScreen.Pos2i((int)var2.stringWidth(var7), var5);
       int var10002 = (int)var2.stringWidth(var8);
-      this.font.getClass();
+      Objects.requireNonNull(this.font);
       BookEditScreen.Pos2i var10 = new BookEditScreen.Pos2i(var10002, var5 + 9);
       return this.createSelection(var9, var10);
    }
 
    private Rect2i createSelection(BookEditScreen.Pos2i var1, BookEditScreen.Pos2i var2) {
@@ -649,17 +660,17 @@
       BLACK_CURSOR = FormattedCharSequence.forward("_", Style.EMPTY.withColor(ChatFormatting.BLACK));
       GRAY_CURSOR = FormattedCharSequence.forward("_", Style.EMPTY.withColor(ChatFormatting.GRAY));
    }
 
    static class DisplayCache {
-      private static final BookEditScreen.DisplayCache EMPTY;
+      static final BookEditScreen.DisplayCache EMPTY;
       private final String fullText;
-      private final BookEditScreen.Pos2i cursor;
-      private final boolean cursorAtEnd;
+      final BookEditScreen.Pos2i cursor;
+      final boolean cursorAtEnd;
       private final int[] lineStarts;
-      private final BookEditScreen.LineInfo[] lines;
-      private final Rect2i[] selection;
+      final BookEditScreen.LineInfo[] lines;
+      final Rect2i[] selection;
 
       public DisplayCache(String var1, BookEditScreen.Pos2i var2, boolean var3, int[] var4, BookEditScreen.LineInfo[] var5, Rect2i[] var6) {
          this.fullText = var1;
          this.cursor = var2;
          this.cursorAtEnd = var3;
@@ -668,11 +679,11 @@
          this.selection = var6;
       }
 
       public int getIndexAtPosition(Font var1, BookEditScreen.Pos2i var2) {
          int var10000 = var2.y;
-         var1.getClass();
+         Objects.requireNonNull(var1);
          int var3 = var10000 / 9;
          if (var3 < 0) {
             return 0;
          } else if (var3 >= this.lines.length) {
             return this.fullText.length();
@@ -711,15 +722,15 @@
          EMPTY = new BookEditScreen.DisplayCache("", new BookEditScreen.Pos2i(0, 0), true, new int[]{0}, new BookEditScreen.LineInfo[]{new BookEditScreen.LineInfo(Style.EMPTY, "", 0, 0)}, new Rect2i[0]);
       }
    }
 
    static class LineInfo {
-      private final Style style;
-      private final String contents;
-      private final Component asComponent;
-      private final int x;
-      private final int y;
+      final Style style;
+      final String contents;
+      final Component asComponent;
+      final int x;
+      final int y;
 
       public LineInfo(Style var1, String var2, int var3, int var4) {
          this.style = var1;
          this.contents = var2;
          this.x = var3;
