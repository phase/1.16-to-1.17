--- net/minecraft/client/gui/screens/inventory/BookEditScreen.java
+++ net/minecraft/client/gui/screens/inventory/BookEditScreen.java
@@ -5,10 +5,11 @@
 import com.mojang.blaze3d.systems.RenderSystem;
 import com.mojang.blaze3d.vertex.BufferBuilder;
 import com.mojang.blaze3d.vertex.DefaultVertexFormat;
 import com.mojang.blaze3d.vertex.PoseStack;
 import com.mojang.blaze3d.vertex.Tesselator;
+import com.mojang.blaze3d.vertex.VertexFormat;
 import it.unimi.dsi.fastutil.ints.IntArrayList;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
 import java.util.ListIterator;
@@ -22,10 +23,11 @@
 import net.minecraft.client.gui.chat.NarratorChatListener;
 import net.minecraft.client.gui.components.Button;
 import net.minecraft.client.gui.components.events.GuiEventListener;
 import net.minecraft.client.gui.font.TextFieldHelper;
 import net.minecraft.client.gui.screens.Screen;
+import net.minecraft.client.renderer.GameRenderer;
 import net.minecraft.client.renderer.Rect2i;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.nbt.ListTag;
 import net.minecraft.nbt.StringTag;
 import net.minecraft.network.chat.CommonComponents;
@@ -43,10 +45,15 @@
 import org.apache.commons.lang3.StringUtils;
 import org.apache.commons.lang3.mutable.MutableBoolean;
 import org.apache.commons.lang3.mutable.MutableInt;
 
 public class BookEditScreen extends Screen {
+   private static final int TEXT_WIDTH = 114;
+   private static final int TEXT_HEIGHT = 128;
+   private static final int DOUBLECLICK_SPEED = 250;
+   private static final int IMAGE_WIDTH = 192;
+   private static final int IMAGE_HEIGHT = 192;
    private static final Component EDIT_TITLE_LABEL = new TranslatableComponent("book.editTitle");
    private static final Component FINALIZE_WARNING_LABEL = new TranslatableComponent("book.finalizeWarning");
    private static final FormattedCharSequence BLACK_CURSOR;
    private static final FormattedCharSequence GRAY_CURSOR;
    private final Player owner;
@@ -88,15 +95,12 @@
       this.owner = var1;
       this.book = var2;
       this.hand = var3;
       CompoundTag var4 = var2.getTag();
       if (var4 != null) {
-         ListTag var5 = var4.getList("pages", 8).copy();
-
-         for(int var6 = 0; var6 < var5.size(); ++var6) {
-            this.pages.add(var5.getString(var6));
-         }
+         List var10001 = this.pages;
+         BookViewScreen.loadPages(var4, var10001::add);
       }
 
       if (this.pages.isEmpty()) {
          this.pages.add("");
       }
@@ -218,11 +222,11 @@
          if (var1) {
             this.book.addTagElement("author", StringTag.valueOf(this.owner.getGameProfile().getName()));
             this.book.addTagElement("title", StringTag.valueOf(this.title.trim()));
          }
 
-         int var3 = this.hand == InteractionHand.MAIN_HAND ? this.owner.inventory.selected : 40;
+         int var3 = this.hand == InteractionHand.MAIN_HAND ? this.owner.getInventory().selected : 40;
          this.minecraft.getConnection().send((Packet)(new ServerboundEditBookPacket(this.book, var1, var3)));
       }
    }
 
    private void appendPageToBook() {
@@ -385,12 +389,13 @@
    }
 
    public void render(PoseStack var1, int var2, int var3, float var4) {
       this.renderBackground(var1);
       this.setFocused((GuiEventListener)null);
-      RenderSystem.color4f(1.0F, 1.0F, 1.0F, 1.0F);
-      this.minecraft.getTextureManager().bind(BookViewScreen.BOOK_LOCATION);
+      RenderSystem.setShader(GameRenderer::getPositionTexShader);
+      RenderSystem.setShaderColor(1.0F, 1.0F, 1.0F, 1.0F);
+      RenderSystem.setShaderTexture(0, BookViewScreen.BOOK_LOCATION);
       int var5 = (this.width - 192) / 2;
       boolean var6 = true;
       this.blit(var1, var5, 2, 0, 0, 192, 192);
       int var10;
       int var11;
@@ -441,15 +446,16 @@
    }
 
    private void renderHighlight(Rect2i[] var1) {
       Tesselator var2 = Tesselator.getInstance();
       BufferBuilder var3 = var2.getBuilder();
-      RenderSystem.color4f(0.0F, 0.0F, 255.0F, 255.0F);
+      RenderSystem.setShader(GameRenderer::getPositionShader);
+      RenderSystem.setShaderColor(0.0F, 0.0F, 255.0F, 255.0F);
       RenderSystem.disableTexture();
       RenderSystem.enableColorLogicOp();
       RenderSystem.logicOp(GlStateManager.LogicOp.OR_REVERSE);
-      var3.begin(7, DefaultVertexFormat.POSITION);
+      var3.begin(VertexFormat.Mode.QUADS, DefaultVertexFormat.POSITION);
       Rect2i[] var4 = var1;
       int var5 = var1.length;
 
       for(int var6 = 0; var6 < var5; ++var6) {
          Rect2i var7 = var4[var6];
