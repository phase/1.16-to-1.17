--- net/minecraft/client/gui/screens/OptionsScreen.java
+++ net/minecraft/client/gui/screens/OptionsScreen.java
@@ -4,16 +4,15 @@
 import com.mojang.blaze3d.vertex.PoseStack;
 import java.util.Iterator;
 import net.minecraft.client.Option;
 import net.minecraft.client.Options;
 import net.minecraft.client.gui.components.Button;
+import net.minecraft.client.gui.components.CycleButton;
 import net.minecraft.client.gui.components.LockIconButton;
-import net.minecraft.client.gui.components.OptionButton;
 import net.minecraft.client.gui.screens.controls.ControlsScreen;
 import net.minecraft.client.gui.screens.packs.PackSelectionScreen;
 import net.minecraft.network.chat.CommonComponents;
-import net.minecraft.network.chat.Component;
 import net.minecraft.network.chat.TranslatableComponent;
 import net.minecraft.network.protocol.Packet;
 import net.minecraft.network.protocol.game.ServerboundChangeDifficultyPacket;
 import net.minecraft.network.protocol.game.ServerboundLockDifficultyPacket;
 import net.minecraft.server.packs.repository.Pack;
@@ -22,13 +21,12 @@
 
 public class OptionsScreen extends Screen {
    private static final Option[] OPTION_SCREEN_OPTIONS;
    private final Screen lastScreen;
    private final Options options;
-   private Button difficultyButton;
+   private CycleButton<Difficulty> difficultyButton;
    private LockIconButton lockButton;
-   private Difficulty currentDifficulty;
 
    public OptionsScreen(Screen var1, Options var2) {
       super(new TranslatableComponent("options.title"));
       this.lastScreen = var1;
       this.options = var2;
@@ -41,65 +39,58 @@
 
       for(int var4 = 0; var4 < var3; ++var4) {
          Option var5 = var2[var4];
          int var6 = this.width / 2 - 155 + var1 % 2 * 160;
          int var7 = this.height / 6 - 12 + 24 * (var1 >> 1);
-         this.addButton(var5.createButton(this.minecraft.options, var6, var7, 150));
+         this.addRenderableWidget(var5.createButton(this.minecraft.options, var6, var7, 150));
          ++var1;
       }
 
       if (this.minecraft.level != null) {
-         this.currentDifficulty = this.minecraft.level.getDifficulty();
-         this.difficultyButton = (Button)this.addButton(new Button(this.width / 2 - 155 + var1 % 2 * 160, this.height / 6 - 12 + 24 * (var1 >> 1), 150, 20, this.getDifficultyText(this.currentDifficulty), (var1x) -> {
-            this.currentDifficulty = Difficulty.byId(this.currentDifficulty.getId() + 1);
-            this.minecraft.getConnection().send((Packet)(new ServerboundChangeDifficultyPacket(this.currentDifficulty)));
-            this.difficultyButton.setMessage(this.getDifficultyText(this.currentDifficulty));
+         this.difficultyButton = (CycleButton)this.addRenderableWidget(CycleButton.builder(Difficulty::getDisplayName).withValues((Object[])Difficulty.values()).withInitialValue(this.minecraft.level.getDifficulty()).create(this.width / 2 - 155 + var1 % 2 * 160, this.height / 6 - 12 + 24 * (var1 >> 1), 150, 20, new TranslatableComponent("options.difficulty"), (var1x, var2x) -> {
+            this.minecraft.getConnection().send((Packet)(new ServerboundChangeDifficultyPacket(var2x)));
          }));
          if (this.minecraft.hasSingleplayerServer() && !this.minecraft.level.getLevelData().isHardcore()) {
             this.difficultyButton.setWidth(this.difficultyButton.getWidth() - 20);
-            this.lockButton = (LockIconButton)this.addButton(new LockIconButton(this.difficultyButton.x + this.difficultyButton.getWidth(), this.difficultyButton.y, (var1x) -> {
-               this.minecraft.setScreen(new ConfirmScreen(this::lockCallback, new TranslatableComponent("difficulty.lock.title"), new TranslatableComponent("difficulty.lock.question", new Object[]{new TranslatableComponent("options.difficulty." + this.minecraft.level.getLevelData().getDifficulty().getKey())})));
+            this.lockButton = (LockIconButton)this.addRenderableWidget(new LockIconButton(this.difficultyButton.x + this.difficultyButton.getWidth(), this.difficultyButton.y, (var1x) -> {
+               this.minecraft.setScreen(new ConfirmScreen(this::lockCallback, new TranslatableComponent("difficulty.lock.title"), new TranslatableComponent("difficulty.lock.question", new Object[]{this.minecraft.level.getLevelData().getDifficulty().getDisplayName()})));
             }));
             this.lockButton.setLocked(this.minecraft.level.getLevelData().isDifficultyLocked());
             this.lockButton.active = !this.lockButton.isLocked();
             this.difficultyButton.active = !this.lockButton.isLocked();
          } else {
             this.difficultyButton.active = false;
          }
       } else {
-         this.addButton(new OptionButton(this.width / 2 - 155 + var1 % 2 * 160, this.height / 6 - 12 + 24 * (var1 >> 1), 150, 20, Option.REALMS_NOTIFICATIONS, Option.REALMS_NOTIFICATIONS.getMessage(this.options), (var1x) -> {
-            Option.REALMS_NOTIFICATIONS.toggle(this.options);
-            this.options.save();
-            var1x.setMessage(Option.REALMS_NOTIFICATIONS.getMessage(this.options));
-         }));
+         this.addRenderableWidget(Option.REALMS_NOTIFICATIONS.createButton(this.options, this.width / 2 - 155 + var1 % 2 * 160, this.height / 6 - 12 + 24 * (var1 >> 1), 150));
       }
 
-      this.addButton(new Button(this.width / 2 - 155, this.height / 6 + 48 - 6, 150, 20, new TranslatableComponent("options.skinCustomisation"), (var1x) -> {
+      this.addRenderableWidget(new Button(this.width / 2 - 155, this.height / 6 + 48 - 6, 150, 20, new TranslatableComponent("options.skinCustomisation"), (var1x) -> {
          this.minecraft.setScreen(new SkinCustomizationScreen(this, this.options));
       }));
-      this.addButton(new Button(this.width / 2 + 5, this.height / 6 + 48 - 6, 150, 20, new TranslatableComponent("options.sounds"), (var1x) -> {
+      this.addRenderableWidget(new Button(this.width / 2 + 5, this.height / 6 + 48 - 6, 150, 20, new TranslatableComponent("options.sounds"), (var1x) -> {
          this.minecraft.setScreen(new SoundOptionsScreen(this, this.options));
       }));
-      this.addButton(new Button(this.width / 2 - 155, this.height / 6 + 72 - 6, 150, 20, new TranslatableComponent("options.video"), (var1x) -> {
+      this.addRenderableWidget(new Button(this.width / 2 - 155, this.height / 6 + 72 - 6, 150, 20, new TranslatableComponent("options.video"), (var1x) -> {
          this.minecraft.setScreen(new VideoSettingsScreen(this, this.options));
       }));
-      this.addButton(new Button(this.width / 2 + 5, this.height / 6 + 72 - 6, 150, 20, new TranslatableComponent("options.controls"), (var1x) -> {
+      this.addRenderableWidget(new Button(this.width / 2 + 5, this.height / 6 + 72 - 6, 150, 20, new TranslatableComponent("options.controls"), (var1x) -> {
          this.minecraft.setScreen(new ControlsScreen(this, this.options));
       }));
-      this.addButton(new Button(this.width / 2 - 155, this.height / 6 + 96 - 6, 150, 20, new TranslatableComponent("options.language"), (var1x) -> {
+      this.addRenderableWidget(new Button(this.width / 2 - 155, this.height / 6 + 96 - 6, 150, 20, new TranslatableComponent("options.language"), (var1x) -> {
          this.minecraft.setScreen(new LanguageSelectScreen(this, this.options, this.minecraft.getLanguageManager()));
       }));
-      this.addButton(new Button(this.width / 2 + 5, this.height / 6 + 96 - 6, 150, 20, new TranslatableComponent("options.chat.title"), (var1x) -> {
+      this.addRenderableWidget(new Button(this.width / 2 + 5, this.height / 6 + 96 - 6, 150, 20, new TranslatableComponent("options.chat.title"), (var1x) -> {
          this.minecraft.setScreen(new ChatOptionsScreen(this, this.options));
       }));
-      this.addButton(new Button(this.width / 2 - 155, this.height / 6 + 120 - 6, 150, 20, new TranslatableComponent("options.resourcepack"), (var1x) -> {
+      this.addRenderableWidget(new Button(this.width / 2 - 155, this.height / 6 + 120 - 6, 150, 20, new TranslatableComponent("options.resourcepack"), (var1x) -> {
          this.minecraft.setScreen(new PackSelectionScreen(this, this.minecraft.getResourcePackRepository(), this::updatePackList, this.minecraft.getResourcePackDirectory(), new TranslatableComponent("resourcePack.title")));
       }));
-      this.addButton(new Button(this.width / 2 + 5, this.height / 6 + 120 - 6, 150, 20, new TranslatableComponent("options.accessibility.title"), (var1x) -> {
+      this.addRenderableWidget(new Button(this.width / 2 + 5, this.height / 6 + 120 - 6, 150, 20, new TranslatableComponent("options.accessibility.title"), (var1x) -> {
          this.minecraft.setScreen(new AccessibilityOptionsScreen(this, this.options));
       }));
-      this.addButton(new Button(this.width / 2 - 100, this.height / 6 + 168, 200, 20, CommonComponents.GUI_DONE, (var1x) -> {
+      this.addRenderableWidget(new Button(this.width / 2 - 100, this.height / 6 + 168, 200, 20, CommonComponents.GUI_DONE, (var1x) -> {
          this.minecraft.setScreen(this.lastScreen);
       }));
    }
 
    private void updatePackList(PackRepository var1) {
@@ -124,14 +115,10 @@
          this.minecraft.reloadResourcePacks();
       }
 
    }
 
-   private Component getDifficultyText(Difficulty var1) {
-      return (new TranslatableComponent("options.difficulty")).append(": ").append(var1.getDisplayName());
-   }
-
    private void lockCallback(boolean var1) {
       this.minecraft.setScreen(this);
       if (var1 && this.minecraft.level != null) {
          this.minecraft.getConnection().send((Packet)(new ServerboundLockDifficultyPacket(true)));
          this.lockButton.setLocked(true);
