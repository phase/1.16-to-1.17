--- net/minecraft/client/gui/screens/multiplayer/ServerSelectionList.java
+++ net/minecraft/client/gui/screens/multiplayer/ServerSelectionList.java
@@ -25,12 +25,14 @@
 import net.minecraft.client.gui.components.AbstractSelectionList;
 import net.minecraft.client.gui.components.ObjectSelectionList;
 import net.minecraft.client.gui.screens.Screen;
 import net.minecraft.client.multiplayer.ServerData;
 import net.minecraft.client.multiplayer.ServerList;
+import net.minecraft.client.renderer.GameRenderer;
 import net.minecraft.client.renderer.texture.AbstractTexture;
 import net.minecraft.client.renderer.texture.DynamicTexture;
+import net.minecraft.client.renderer.texture.MissingTextureAtlasSprite;
 import net.minecraft.client.server.LanServer;
 import net.minecraft.network.chat.Component;
 import net.minecraft.network.chat.FormattedText;
 import net.minecraft.network.chat.TextComponent;
 import net.minecraft.network.chat.TranslatableComponent;
@@ -138,19 +140,24 @@
       private final JoinMultiplayerScreen screen;
       private final Minecraft minecraft;
       private final ServerData serverData;
       private final ResourceLocation iconLocation;
       private String lastIconB64;
+      @Nullable
       private DynamicTexture icon;
       private long lastClickTime;
 
       protected OnlineServerEntry(JoinMultiplayerScreen var2, ServerData var3) {
          this.screen = var2;
          this.serverData = var3;
          this.minecraft = Minecraft.getInstance();
          this.iconLocation = new ResourceLocation("servers/" + Hashing.sha1().hashUnencodedChars(var3.ip) + "/icon");
-         this.icon = (DynamicTexture)this.minecraft.getTextureManager().getTexture(this.iconLocation);
+         AbstractTexture var4 = this.minecraft.getTextureManager().getTexture(this.iconLocation, MissingTextureAtlasSprite.getTexture());
+         if (var4 != MissingTextureAtlasSprite.getTexture() && var4 instanceof DynamicTexture) {
+            this.icon = (DynamicTexture)var4;
+         }
+
       }
 
       public void render(PoseStack var1, int var2, int var3, int var4, int var5, int var6, int var7, int var8, boolean var9, float var10) {
          if (!this.serverData.pinged) {
             this.serverData.pinged = true;
@@ -228,12 +235,13 @@
 
             var18 = ServerSelectionList.PINGING_TOOLTIP;
             var17 = Collections.emptyList();
          }
 
-         RenderSystem.color4f(1.0F, 1.0F, 1.0F, 1.0F);
-         this.minecraft.getTextureManager().bind(GuiComponent.GUI_ICONS_LOCATION);
+         RenderSystem.setShader(GameRenderer::getPositionTexShader);
+         RenderSystem.setShaderColor(1.0F, 1.0F, 1.0F, 1.0F);
+         RenderSystem.setShaderTexture(0, GuiComponent.GUI_ICONS_LOCATION);
          GuiComponent.blit(var1, var4 + var5 - 15, var3, (float)(var15 * 10), (float)(176 + var16 * 8), 10, 8, 256, 256);
          String var19 = this.serverData.getIconB64();
          if (!Objects.equals(var19, this.lastIconB64)) {
             if (this.uploadServerIcon(var19)) {
                this.lastIconB64 = var19;
@@ -241,14 +249,14 @@
                this.serverData.setIconB64((String)null);
                this.updateServerList();
             }
          }
 
-         if (this.icon != null) {
-            this.drawIcon(var1, var4, var3, this.iconLocation);
-         } else {
+         if (this.icon == null) {
             this.drawIcon(var1, var4, var3, ServerSelectionList.ICON_MISSING);
+         } else {
+            this.drawIcon(var1, var4, var3, this.iconLocation);
          }
 
          int var20 = var7 - var4;
          int var21 = var8 - var3;
          if (var20 >= var5 - 15 && var20 <= var5 - 5 && var21 >= 0 && var21 <= 8) {
@@ -256,13 +264,14 @@
          } else if (var20 >= var5 - var14 - 15 - 2 && var20 <= var5 - 15 - 2 && var21 >= 0 && var21 <= 8) {
             this.screen.setToolTip(var17);
          }
 
          if (this.minecraft.options.touchscreen || var9) {
-            this.minecraft.getTextureManager().bind(ServerSelectionList.ICON_OVERLAY_LOCATION);
+            RenderSystem.setShaderTexture(0, ServerSelectionList.ICON_OVERLAY_LOCATION);
             GuiComponent.fill(var1, var4, var3, var4 + 32, var3 + 32, -1601138544);
-            RenderSystem.color4f(1.0F, 1.0F, 1.0F, 1.0F);
+            RenderSystem.setShader(GameRenderer::getPositionTexShader);
+            RenderSystem.setShaderColor(1.0F, 1.0F, 1.0F, 1.0F);
             int var22 = var7 - var4;
             int var23 = var8 - var3;
             if (this.canJoin()) {
                if (var22 < 32 && var22 > 16) {
                   GuiComponent.blit(var1, var4, var3, 0.0F, 32.0F, 32, 32, 256, 256);
@@ -293,11 +302,11 @@
       public void updateServerList() {
          this.screen.getServers().save();
       }
 
       protected void drawIcon(PoseStack var1, int var2, int var3, ResourceLocation var4) {
-         this.minecraft.getTextureManager().bind(var4);
+         RenderSystem.setShaderTexture(0, var4);
          RenderSystem.enableBlend();
          GuiComponent.blit(var1, var2, var3, 0.0F, 0.0F, 32, 32, 32, 32);
          RenderSystem.disableBlend();
       }
 
