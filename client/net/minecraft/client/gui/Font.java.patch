--- net/minecraft/client/gui/Font.java
+++ net/minecraft/client/gui/Font.java
@@ -3,11 +3,10 @@
 import com.google.common.collect.Lists;
 import com.ibm.icu.text.ArabicShaping;
 import com.ibm.icu.text.ArabicShapingException;
 import com.ibm.icu.text.Bidi;
 import com.mojang.blaze3d.font.GlyphInfo;
-import com.mojang.blaze3d.systems.RenderSystem;
 import com.mojang.blaze3d.vertex.PoseStack;
 import com.mojang.blaze3d.vertex.Tesselator;
 import com.mojang.blaze3d.vertex.VertexConsumer;
 import com.mojang.math.Matrix4f;
 import com.mojang.math.Transformation;
@@ -54,36 +53,30 @@
    public int drawShadow(PoseStack var1, String var2, float var3, float var4, int var5) {
       return this.drawInternal(var2, var3, var4, var5, var1.last().pose(), true, this.isBidirectional());
    }
 
    public int drawShadow(PoseStack var1, String var2, float var3, float var4, int var5, boolean var6) {
-      RenderSystem.enableAlphaTest();
       return this.drawInternal(var2, var3, var4, var5, var1.last().pose(), true, var6);
    }
 
    public int draw(PoseStack var1, String var2, float var3, float var4, int var5) {
-      RenderSystem.enableAlphaTest();
       return this.drawInternal(var2, var3, var4, var5, var1.last().pose(), false, this.isBidirectional());
    }
 
    public int drawShadow(PoseStack var1, FormattedCharSequence var2, float var3, float var4, int var5) {
-      RenderSystem.enableAlphaTest();
       return this.drawInternal(var2, var3, var4, var5, var1.last().pose(), true);
    }
 
    public int drawShadow(PoseStack var1, Component var2, float var3, float var4, int var5) {
-      RenderSystem.enableAlphaTest();
       return this.drawInternal(var2.getVisualOrderText(), var3, var4, var5, var1.last().pose(), true);
    }
 
    public int draw(PoseStack var1, FormattedCharSequence var2, float var3, float var4, int var5) {
-      RenderSystem.enableAlphaTest();
       return this.drawInternal(var2, var3, var4, var5, var1.last().pose(), false);
    }
 
    public int draw(PoseStack var1, Component var2, float var3, float var4, int var5) {
-      RenderSystem.enableAlphaTest();
       return this.drawInternal(var2.getVisualOrderText(), var3, var4, var5, var1.last().pose(), false);
    }
 
    public String bidirectionalShaping(String var1) {
       try {
@@ -241,11 +234,11 @@
       private final float a;
       private final Matrix4f pose;
       private final boolean seeThrough;
       private final int packedLightCoords;
       private float x;
-      private float y;
+      private final float y;
       @Nullable
       private List<BakedGlyph.Effect> effects;
 
       private void addEffect(BakedGlyph.Effect var1) {
          if (this.effects == null) {
