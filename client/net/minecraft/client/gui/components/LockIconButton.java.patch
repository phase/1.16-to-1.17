--- net/minecraft/client/gui/components/LockIconButton.java
+++ net/minecraft/client/gui/components/LockIconButton.java
@@ -1,11 +1,11 @@
 package net.minecraft.client.gui.components;
 
 import com.mojang.blaze3d.systems.RenderSystem;
 import com.mojang.blaze3d.vertex.PoseStack;
-import net.minecraft.client.Minecraft;
-import net.minecraft.network.chat.Component;
+import net.minecraft.client.renderer.GameRenderer;
+import net.minecraft.network.chat.CommonComponents;
 import net.minecraft.network.chat.MutableComponent;
 import net.minecraft.network.chat.TranslatableComponent;
 
 public class LockIconButton extends Button {
    private boolean locked;
@@ -13,11 +13,11 @@
    public LockIconButton(int var1, int var2, Button.OnPress var3) {
       super(var1, var2, 20, 20, new TranslatableComponent("narrator.button.difficulty_lock"), var3);
    }
 
    protected MutableComponent createNarrationMessage() {
-      return super.createNarrationMessage().append(". ").append((Component)(this.isLocked() ? new TranslatableComponent("narrator.button.difficulty_lock.locked") : new TranslatableComponent("narrator.button.difficulty_lock.unlocked")));
+      return CommonComponents.joinForNarration(super.createNarrationMessage(), this.isLocked() ? new TranslatableComponent("narrator.button.difficulty_lock.locked") : new TranslatableComponent("narrator.button.difficulty_lock.unlocked"));
    }
 
    public boolean isLocked() {
       return this.locked;
    }
@@ -25,12 +25,13 @@
    public void setLocked(boolean var1) {
       this.locked = var1;
    }
 
    public void renderButton(PoseStack var1, int var2, int var3, float var4) {
-      Minecraft.getInstance().getTextureManager().bind(Button.WIDGETS_LOCATION);
-      RenderSystem.color4f(1.0F, 1.0F, 1.0F, 1.0F);
+      RenderSystem.setShader(GameRenderer::getPositionTexShader);
+      RenderSystem.setShaderTexture(0, Button.WIDGETS_LOCATION);
+      RenderSystem.setShaderColor(1.0F, 1.0F, 1.0F, 1.0F);
       LockIconButton.Icon var5;
       if (!this.active) {
          var5 = this.locked ? LockIconButton.Icon.LOCKED_DISABLED : LockIconButton.Icon.UNLOCKED_DISABLED;
       } else if (this.isHovered()) {
          var5 = this.locked ? LockIconButton.Icon.LOCKED_HOVER : LockIconButton.Icon.UNLOCKED_HOVER;
@@ -39,11 +40,11 @@
       }
 
       this.blit(var1, this.x, this.y, var5.getX(), var5.getY(), this.width, this.height);
    }
 
-   static enum Icon {
+   private static enum Icon {
       LOCKED(0, 146),
       LOCKED_HOVER(0, 166),
       LOCKED_DISABLED(0, 186),
       UNLOCKED(20, 146),
       UNLOCKED_HOVER(20, 166),
