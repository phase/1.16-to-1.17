--- net/minecraft/client/gui/components/DebugScreenOverlay.java
+++ net/minecraft/client/gui/components/DebugScreenOverlay.java
@@ -8,10 +8,11 @@
 import com.mojang.blaze3d.vertex.BufferBuilder;
 import com.mojang.blaze3d.vertex.BufferUploader;
 import com.mojang.blaze3d.vertex.DefaultVertexFormat;
 import com.mojang.blaze3d.vertex.PoseStack;
 import com.mojang.blaze3d.vertex.Tesselator;
+import com.mojang.blaze3d.vertex.VertexFormat;
 import com.mojang.datafixers.DataFixUtils;
 import com.mojang.math.Matrix4f;
 import com.mojang.math.Transformation;
 import it.unimi.dsi.fastutil.longs.LongSet;
 import it.unimi.dsi.fastutil.longs.LongSets;
@@ -39,10 +40,11 @@
 import net.minecraft.client.renderer.PostChain;
 import net.minecraft.client.server.IntegratedServer;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.core.Registry;
+import net.minecraft.core.SectionPos;
 import net.minecraft.network.Connection;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.util.FrameTimer;
 import net.minecraft.util.Mth;
@@ -206,11 +208,11 @@
 
          var13.add(this.minecraft.level.dimension().location() + " FC: " + ((LongSet)var12).size());
          var13.add("");
          var13.add(String.format(Locale.ROOT, "XYZ: %.3f / %.5f / %.3f", this.minecraft.getCameraEntity().getX(), this.minecraft.getCameraEntity().getY(), this.minecraft.getCameraEntity().getZ()));
          var13.add(String.format("Block: %d %d %d", var6.getX(), var6.getY(), var6.getZ()));
-         var13.add(String.format("Chunk: %d %d %d in %d %d %d", var6.getX() & 15, var6.getY() & 15, var6.getZ() & 15, var6.getX() >> 4, var6.getY() >> 4, var6.getZ() >> 4));
+         var13.add(String.format("Chunk: %d %d %d in %d %d %d", var6.getX() & 15, var6.getY() & 15, var6.getZ() & 15, SectionPos.blockToSectionCoord(var6.getX()), SectionPos.blockToSectionCoord(var6.getY()), SectionPos.blockToSectionCoord(var6.getZ())));
          var13.add(String.format(Locale.ROOT, "Facing: %s (%s) (%.1f / %.1f)", var8, var9, Mth.wrapDegrees(var7.yRot), Mth.wrapDegrees(var7.xRot)));
          int var18;
          if (this.minecraft.level != null) {
             if (this.minecraft.level.hasChunkAt(var6)) {
                LevelChunk var15 = this.getClientChunk();
@@ -259,11 +261,11 @@
                         }
                      }
                   }
 
                   var13.add(var29.toString());
-                  if (var6.getY() >= 0 && var6.getY() < 256) {
+                  if (var6.getY() >= this.minecraft.level.getMinBuildHeight() && var6.getY() < this.minecraft.level.getMaxBuildHeight()) {
                      var13.add("Biome: " + this.minecraft.level.registryAccess().registryOrThrow(Registry.BIOME_REGISTRY).getKey(this.minecraft.level.getBiome(var6)));
                      long var30 = 0L;
                      float var31 = 0.0F;
                      if (var19 != null) {
                         var31 = var11.getMoonBrightness();
@@ -378,11 +380,11 @@
             while(var12.hasNext()) {
                var13 = (Entry)var12.next();
                var9.add(this.getPropertyValueString(var13));
             }
 
-            var16 = this.minecraft.getConnection().getTags().getBlocks().getMatchingTags(var11.getBlock()).iterator();
+            var16 = this.minecraft.getConnection().getTags().getOrEmpty(Registry.BLOCK_REGISTRY).getMatchingTags(var11.getBlock()).iterator();
 
             while(var16.hasNext()) {
                var17 = (ResourceLocation)var16.next();
                var9.add("#" + var17);
             }
@@ -399,11 +401,11 @@
             while(var12.hasNext()) {
                var13 = (Entry)var12.next();
                var9.add(this.getPropertyValueString(var13));
             }
 
-            var16 = this.minecraft.getConnection().getTags().getFluids().getMatchingTags(var15.getType()).iterator();
+            var16 = this.minecraft.getConnection().getTags().getOrEmpty(Registry.FLUID_REGISTRY).getMatchingTags(var15.getType()).iterator();
 
             while(var16.hasNext()) {
                var17 = (ResourceLocation)var16.next();
                var9.add("#" + var17);
             }
@@ -458,11 +460,11 @@
       fill(var1, var3, var17 - 60, var3 + var12, var17, -1873784752);
       BufferBuilder var27 = Tesselator.getInstance().getBuilder();
       RenderSystem.enableBlend();
       RenderSystem.disableTexture();
       RenderSystem.defaultBlendFunc();
-      var27.begin(7, DefaultVertexFormat.POSITION_COLOR);
+      var27.begin(VertexFormat.Mode.QUADS, DefaultVertexFormat.POSITION_COLOR);
 
       for(Matrix4f var19 = Transformation.identity().getMatrix(); var9 != var7; var9 = var2.wrapIndex(var9 + 1)) {
          int var20 = var2.scaleSampleTo(var8[var9], var5 ? 30 : 60, var5 ? 60 : 20);
          int var21 = var5 ? 100 : 60;
          int var22 = this.getSampleColor(Mth.clamp(var20, 0, var21), 0, var21 / 2, var21);
