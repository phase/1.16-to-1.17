--- net/minecraft/client/gui/components/OptionsList.java
+++ net/minecraft/client/gui/components/OptionsList.java
@@ -1,17 +1,20 @@
 package net.minecraft.client.gui.components;
 
 import com.google.common.collect.ImmutableList;
+import com.google.common.collect.ImmutableMap;
 import com.mojang.blaze3d.vertex.PoseStack;
 import java.util.Iterator;
 import java.util.List;
+import java.util.Map;
 import java.util.Optional;
 import javax.annotation.Nullable;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.Option;
 import net.minecraft.client.Options;
 import net.minecraft.client.gui.components.events.GuiEventListener;
+import net.minecraft.client.gui.narration.NarratableEntry;
 
 public class OptionsList extends ContainerObjectSelectionList<OptionsList.Entry> {
    public OptionsList(Minecraft var1, int var2, int var3, int var4, int var5, int var6) {
       super(var1, var2, var3, var4, var5, var6);
       this.centerListVertically = false;
@@ -42,23 +45,21 @@
 
    @Nullable
    public AbstractWidget findOption(Option var1) {
       Iterator var2 = this.children().iterator();
 
-      while(var2.hasNext()) {
-         OptionsList.Entry var3 = (OptionsList.Entry)var2.next();
-         Iterator var4 = var3.children.iterator();
-
-         while(var4.hasNext()) {
-            AbstractWidget var5 = (AbstractWidget)var4.next();
-            if (var5 instanceof OptionButton && ((OptionButton)var5).getOption() == var1) {
-               return var5;
-            }
+      AbstractWidget var4;
+      do {
+         if (!var2.hasNext()) {
+            return null;
          }
-      }
 
-      return null;
+         OptionsList.Entry var3 = (OptionsList.Entry)var2.next();
+         var4 = (AbstractWidget)var3.options.get(var1);
+      } while(var4 == null);
+
+      return var4;
    }
 
    public Optional<AbstractWidget> getMouseOver(double var1, double var3) {
       Iterator var5 = this.children().iterator();
 
@@ -75,24 +76,26 @@
       }
 
       return Optional.empty();
    }
 
-   public static class Entry extends ContainerObjectSelectionList.Entry<OptionsList.Entry> {
-      private final List<AbstractWidget> children;
+   protected static class Entry extends ContainerObjectSelectionList.Entry<OptionsList.Entry> {
+      final Map<Option, AbstractWidget> options;
+      final List<AbstractWidget> children;
 
-      private Entry(List<AbstractWidget> var1) {
-         this.children = var1;
+      private Entry(Map<Option, AbstractWidget> var1) {
+         this.options = var1;
+         this.children = ImmutableList.copyOf(var1.values());
       }
 
       public static OptionsList.Entry big(Options var0, int var1, Option var2) {
-         return new OptionsList.Entry(ImmutableList.of(var2.createButton(var0, var1 / 2 - 155, 0, 310)));
+         return new OptionsList.Entry(ImmutableMap.of(var2, var2.createButton(var0, var1 / 2 - 155, 0, 310)));
       }
 
       public static OptionsList.Entry small(Options var0, int var1, Option var2, @Nullable Option var3) {
          AbstractWidget var4 = var2.createButton(var0, var1 / 2 - 155, 0, 150);
-         return var3 == null ? new OptionsList.Entry(ImmutableList.of(var4)) : new OptionsList.Entry(ImmutableList.of(var4, var3.createButton(var0, var1 / 2 - 155 + 160, 0, 150)));
+         return var3 == null ? new OptionsList.Entry(ImmutableMap.of(var2, var4)) : new OptionsList.Entry(ImmutableMap.of(var2, var4, var3, var3.createButton(var0, var1 / 2 - 155 + 160, 0, 150)));
       }
 
       public void render(PoseStack var1, int var2, int var3, int var4, int var5, int var6, int var7, int var8, boolean var9, float var10) {
          this.children.forEach((var5x) -> {
             var5x.y = var3;
@@ -101,7 +104,11 @@
       }
 
       public List<? extends GuiEventListener> children() {
          return this.children;
       }
+
+      public List<? extends NarratableEntry> narratables() {
+         return this.children;
+      }
    }
 }
