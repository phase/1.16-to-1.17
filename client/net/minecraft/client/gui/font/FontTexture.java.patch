--- net/minecraft/client/gui/font/FontTexture.java
+++ net/minecraft/client/gui/font/FontTexture.java
@@ -9,23 +9,24 @@
 import net.minecraft.client.renderer.texture.AbstractTexture;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.server.packs.resources.ResourceManager;
 
 public class FontTexture extends AbstractTexture {
+   private static final int SIZE = 256;
    private final ResourceLocation name;
    private final RenderType normalType;
    private final RenderType seeThroughType;
    private final boolean colored;
    private final FontTexture.Node root;
 
    public FontTexture(ResourceLocation var1, boolean var2) {
       this.name = var1;
       this.colored = var2;
       this.root = new FontTexture.Node(0, 0, 256, 256);
-      TextureUtil.prepareImage(var2 ? NativeImage.InternalGlFormat.RGBA : NativeImage.InternalGlFormat.INTENSITY, this.getId(), 256, 256);
-      this.normalType = RenderType.text(var1);
-      this.seeThroughType = RenderType.textSeeThrough(var1);
+      TextureUtil.prepareImage(var2 ? NativeImage.InternalGlFormat.RGBA : NativeImage.InternalGlFormat.RED, this.getId(), 256, 256);
+      this.normalType = var2 ? RenderType.text(var1) : RenderType.textIntensity(var1);
+      this.seeThroughType = var2 ? RenderType.textSeeThrough(var1) : RenderType.textIntensitySeeThrough(var1);
    }
 
    public void load(ResourceManager var1) {
    }
 
@@ -55,19 +56,19 @@
    public ResourceLocation getName() {
       return this.name;
    }
 
    static class Node {
-      private final int x;
-      private final int y;
+      final int x;
+      final int y;
       private final int width;
       private final int height;
       private FontTexture.Node left;
       private FontTexture.Node right;
       private boolean occupied;
 
-      private Node(int var1, int var2, int var3, int var4) {
+      Node(int var1, int var2, int var3, int var4) {
          this.x = var1;
          this.y = var2;
          this.width = var3;
          this.height = var4;
       }
