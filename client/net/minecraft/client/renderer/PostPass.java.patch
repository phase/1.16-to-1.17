--- net/minecraft/client/renderer/PostPass.java
+++ net/minecraft/client/renderer/PostPass.java
@@ -5,10 +5,11 @@
 import com.mojang.blaze3d.systems.RenderSystem;
 import com.mojang.blaze3d.vertex.BufferBuilder;
 import com.mojang.blaze3d.vertex.BufferUploader;
 import com.mojang.blaze3d.vertex.DefaultVertexFormat;
 import com.mojang.blaze3d.vertex.Tesselator;
+import com.mojang.blaze3d.vertex.VertexFormat;
 import com.mojang.math.Matrix4f;
 import java.io.IOException;
 import java.util.Iterator;
 import java.util.List;
 import java.util.function.IntSupplier;
@@ -33,10 +34,14 @@
 
    public void close() {
       this.effect.close();
    }
 
+   public final String getName() {
+      return this.effect.getName();
+   }
+
    public void addAuxAsset(String var1, IntSupplier var2, int var3, int var4) {
       this.auxNames.add(this.auxNames.size(), var1);
       this.auxAssets.add(this.auxAssets.size(), var2);
       this.auxWidths.add(this.auxWidths.size(), var3);
       this.auxHeights.add(this.auxHeights.size(), var4);
@@ -68,17 +73,17 @@
       this.effect.apply();
       this.outTarget.clear(Minecraft.ON_OSX);
       this.outTarget.bindWrite(false);
       RenderSystem.depthFunc(519);
       BufferBuilder var5 = Tesselator.getInstance().getBuilder();
-      var5.begin(7, DefaultVertexFormat.POSITION_COLOR);
-      var5.vertex(0.0D, 0.0D, 500.0D).color(255, 255, 255, 255).endVertex();
-      var5.vertex((double)var2, 0.0D, 500.0D).color(255, 255, 255, 255).endVertex();
-      var5.vertex((double)var2, (double)var3, 500.0D).color(255, 255, 255, 255).endVertex();
-      var5.vertex(0.0D, (double)var3, 500.0D).color(255, 255, 255, 255).endVertex();
+      var5.begin(VertexFormat.Mode.QUADS, DefaultVertexFormat.POSITION);
+      var5.vertex(0.0D, 0.0D, 500.0D).endVertex();
+      var5.vertex((double)var2, 0.0D, 500.0D).endVertex();
+      var5.vertex((double)var2, (double)var3, 500.0D).endVertex();
+      var5.vertex(0.0D, (double)var3, 500.0D).endVertex();
       var5.end();
-      BufferUploader.end(var5);
+      BufferUploader._endInternal(var5);
       RenderSystem.depthFunc(515);
       this.effect.clear();
       this.outTarget.unbindWrite();
       this.inTarget.unbindRead();
       Iterator var6 = this.auxAssets.iterator();
