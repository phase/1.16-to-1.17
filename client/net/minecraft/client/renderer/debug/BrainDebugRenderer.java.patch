--- net/minecraft/client/renderer/debug/BrainDebugRenderer.java
+++ net/minecraft/client/renderer/debug/BrainDebugRenderer.java
@@ -55,40 +55,38 @@
    }
 
    public void setFreeTicketCount(BlockPos var1, int var2) {
       BrainDebugRenderer.PoiInfo var3 = (BrainDebugRenderer.PoiInfo)this.pois.get(var1);
       if (var3 == null) {
-         LOGGER.warn("Strange, setFreeTicketCount was called for an unknown POI: " + var1);
+         LOGGER.warn("Strange, setFreeTicketCount was called for an unknown POI: {}", var1);
       } else {
          var3.freeTicketCount = var2;
       }
    }
 
    public void addOrUpdateBrainDump(BrainDebugRenderer.BrainDump var1) {
       this.brainDumpsPerEntity.put(var1.uuid, var1);
    }
 
    public void render(PoseStack var1, MultiBufferSource var2, double var3, double var5, double var7) {
-      RenderSystem.pushMatrix();
       RenderSystem.enableBlend();
       RenderSystem.defaultBlendFunc();
       RenderSystem.disableTexture();
       this.clearRemovedEntities();
       this.doRender(var3, var5, var7);
       RenderSystem.enableTexture();
       RenderSystem.disableBlend();
-      RenderSystem.popMatrix();
       if (!this.minecraft.player.isSpectator()) {
          this.updateLastLookedAtUuid();
       }
 
    }
 
    private void clearRemovedEntities() {
       this.brainDumpsPerEntity.entrySet().removeIf((var1) -> {
          Entity var2 = this.minecraft.level.getEntity(((BrainDebugRenderer.BrainDump)var1.getValue()).id);
-         return var2 == null || var2.removed;
+         return var2 == null || var2.isRemoved();
       });
    }
 
    private void doRender(double var1, double var3, double var5) {
       BlockPos var7 = new BlockPos(var1, var3, var5);
