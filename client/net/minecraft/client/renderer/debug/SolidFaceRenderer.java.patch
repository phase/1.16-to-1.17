--- net/minecraft/client/renderer/debug/SolidFaceRenderer.java
+++ net/minecraft/client/renderer/debug/SolidFaceRenderer.java
@@ -3,12 +3,14 @@
 import com.mojang.blaze3d.systems.RenderSystem;
 import com.mojang.blaze3d.vertex.BufferBuilder;
 import com.mojang.blaze3d.vertex.DefaultVertexFormat;
 import com.mojang.blaze3d.vertex.PoseStack;
 import com.mojang.blaze3d.vertex.Tesselator;
+import com.mojang.blaze3d.vertex.VertexFormat;
 import java.util.Iterator;
 import net.minecraft.client.Minecraft;
+import net.minecraft.client.renderer.GameRenderer;
 import net.minecraft.client.renderer.MultiBufferSource;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.Blocks;
@@ -28,10 +30,11 @@
       RenderSystem.enableBlend();
       RenderSystem.defaultBlendFunc();
       RenderSystem.lineWidth(2.0F);
       RenderSystem.disableTexture();
       RenderSystem.depthMask(false);
+      RenderSystem.setShader(GameRenderer::getPositionColorShader);
       BlockPos var10 = new BlockPos(var3, var5, var7);
       Iterator var11 = BlockPos.betweenClosed(var10.offset(-6, -6, -6), var10.offset(6, 6, 6)).iterator();
 
       while(true) {
          BlockPos var12;
@@ -67,66 +70,66 @@
             Tesselator var34;
             BufferBuilder var35;
             if (var13.isFaceSturdy(var9, var12, Direction.WEST)) {
                var34 = Tesselator.getInstance();
                var35 = var34.getBuilder();
-               var35.begin(5, DefaultVertexFormat.POSITION_COLOR);
+               var35.begin(VertexFormat.Mode.TRIANGLE_STRIP, DefaultVertexFormat.POSITION_COLOR);
                var35.vertex(var18, var20, var22).color(1.0F, 0.0F, 0.0F, 0.5F).endVertex();
                var35.vertex(var18, var20, var28).color(1.0F, 0.0F, 0.0F, 0.5F).endVertex();
                var35.vertex(var18, var26, var22).color(1.0F, 0.0F, 0.0F, 0.5F).endVertex();
                var35.vertex(var18, var26, var28).color(1.0F, 0.0F, 0.0F, 0.5F).endVertex();
                var34.end();
             }
 
             if (var13.isFaceSturdy(var9, var12, Direction.SOUTH)) {
                var34 = Tesselator.getInstance();
                var35 = var34.getBuilder();
-               var35.begin(5, DefaultVertexFormat.POSITION_COLOR);
+               var35.begin(VertexFormat.Mode.TRIANGLE_STRIP, DefaultVertexFormat.POSITION_COLOR);
                var35.vertex(var18, var26, var28).color(1.0F, 0.0F, 0.0F, 0.5F).endVertex();
                var35.vertex(var18, var20, var28).color(1.0F, 0.0F, 0.0F, 0.5F).endVertex();
                var35.vertex(var24, var26, var28).color(1.0F, 0.0F, 0.0F, 0.5F).endVertex();
                var35.vertex(var24, var20, var28).color(1.0F, 0.0F, 0.0F, 0.5F).endVertex();
                var34.end();
             }
 
             if (var13.isFaceSturdy(var9, var12, Direction.EAST)) {
                var34 = Tesselator.getInstance();
                var35 = var34.getBuilder();
-               var35.begin(5, DefaultVertexFormat.POSITION_COLOR);
+               var35.begin(VertexFormat.Mode.TRIANGLE_STRIP, DefaultVertexFormat.POSITION_COLOR);
                var35.vertex(var24, var20, var28).color(1.0F, 0.0F, 0.0F, 0.5F).endVertex();
                var35.vertex(var24, var20, var22).color(1.0F, 0.0F, 0.0F, 0.5F).endVertex();
                var35.vertex(var24, var26, var28).color(1.0F, 0.0F, 0.0F, 0.5F).endVertex();
                var35.vertex(var24, var26, var22).color(1.0F, 0.0F, 0.0F, 0.5F).endVertex();
                var34.end();
             }
 
             if (var13.isFaceSturdy(var9, var12, Direction.NORTH)) {
                var34 = Tesselator.getInstance();
                var35 = var34.getBuilder();
-               var35.begin(5, DefaultVertexFormat.POSITION_COLOR);
+               var35.begin(VertexFormat.Mode.TRIANGLE_STRIP, DefaultVertexFormat.POSITION_COLOR);
                var35.vertex(var24, var26, var22).color(1.0F, 0.0F, 0.0F, 0.5F).endVertex();
                var35.vertex(var24, var20, var22).color(1.0F, 0.0F, 0.0F, 0.5F).endVertex();
                var35.vertex(var18, var26, var22).color(1.0F, 0.0F, 0.0F, 0.5F).endVertex();
                var35.vertex(var18, var20, var22).color(1.0F, 0.0F, 0.0F, 0.5F).endVertex();
                var34.end();
             }
 
             if (var13.isFaceSturdy(var9, var12, Direction.DOWN)) {
                var34 = Tesselator.getInstance();
                var35 = var34.getBuilder();
-               var35.begin(5, DefaultVertexFormat.POSITION_COLOR);
+               var35.begin(VertexFormat.Mode.TRIANGLE_STRIP, DefaultVertexFormat.POSITION_COLOR);
                var35.vertex(var18, var20, var22).color(1.0F, 0.0F, 0.0F, 0.5F).endVertex();
                var35.vertex(var24, var20, var22).color(1.0F, 0.0F, 0.0F, 0.5F).endVertex();
                var35.vertex(var18, var20, var28).color(1.0F, 0.0F, 0.0F, 0.5F).endVertex();
                var35.vertex(var24, var20, var28).color(1.0F, 0.0F, 0.0F, 0.5F).endVertex();
                var34.end();
             }
 
             if (var13.isFaceSturdy(var9, var12, Direction.UP)) {
                var34 = Tesselator.getInstance();
                var35 = var34.getBuilder();
-               var35.begin(5, DefaultVertexFormat.POSITION_COLOR);
+               var35.begin(VertexFormat.Mode.TRIANGLE_STRIP, DefaultVertexFormat.POSITION_COLOR);
                var35.vertex(var18, var26, var22).color(1.0F, 0.0F, 0.0F, 0.5F).endVertex();
                var35.vertex(var18, var26, var28).color(1.0F, 0.0F, 0.0F, 0.5F).endVertex();
                var35.vertex(var24, var26, var22).color(1.0F, 0.0F, 0.0F, 0.5F).endVertex();
                var35.vertex(var24, var26, var28).color(1.0F, 0.0F, 0.0F, 0.5F).endVertex();
                var34.end();
