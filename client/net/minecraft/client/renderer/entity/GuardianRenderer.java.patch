--- net/minecraft/client/renderer/entity/GuardianRenderer.java
+++ net/minecraft/client/renderer/entity/GuardianRenderer.java
@@ -4,10 +4,12 @@
 import com.mojang.blaze3d.vertex.VertexConsumer;
 import com.mojang.math.Matrix3f;
 import com.mojang.math.Matrix4f;
 import com.mojang.math.Vector3f;
 import net.minecraft.client.model.GuardianModel;
+import net.minecraft.client.model.geom.ModelLayerLocation;
+import net.minecraft.client.model.geom.ModelLayers;
 import net.minecraft.client.renderer.MultiBufferSource;
 import net.minecraft.client.renderer.RenderType;
 import net.minecraft.client.renderer.culling.Frustum;
 import net.minecraft.client.renderer.texture.OverlayTexture;
 import net.minecraft.resources.ResourceLocation;
@@ -21,16 +23,16 @@
 public class GuardianRenderer extends MobRenderer<Guardian, GuardianModel> {
    private static final ResourceLocation GUARDIAN_LOCATION = new ResourceLocation("textures/entity/guardian.png");
    private static final ResourceLocation GUARDIAN_BEAM_LOCATION = new ResourceLocation("textures/entity/guardian_beam.png");
    private static final RenderType BEAM_RENDER_TYPE;
 
-   public GuardianRenderer(EntityRenderDispatcher var1) {
-      this(var1, 0.5F);
+   public GuardianRenderer(EntityRendererProvider.Context var1) {
+      this(var1, 0.5F, ModelLayers.GUARDIAN);
    }
 
-   protected GuardianRenderer(EntityRenderDispatcher var1, float var2) {
-      super(var1, new GuardianModel(), var2);
+   protected GuardianRenderer(EntityRendererProvider.Context var1, float var2, ModelLayerLocation var3) {
+      super(var1, new GuardianModel(var1.bakeLayer(var3)), var2);
    }
 
    public boolean shouldRender(Guardian var1, Frustum var2, double var3, double var5, double var7) {
       if (super.shouldRender((Mob)var1, var2, var3, var5, var7)) {
          return true;
