--- net/minecraft/client/renderer/entity/StriderRenderer.java
+++ net/minecraft/client/renderer/entity/StriderRenderer.java
@@ -1,20 +1,21 @@
 package net.minecraft.client.renderer.entity;
 
 import com.mojang.blaze3d.vertex.PoseStack;
 import net.minecraft.client.model.StriderModel;
+import net.minecraft.client.model.geom.ModelLayers;
 import net.minecraft.client.renderer.entity.layers.SaddleLayer;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.world.entity.monster.Strider;
 
 public class StriderRenderer extends MobRenderer<Strider, StriderModel<Strider>> {
    private static final ResourceLocation STRIDER_LOCATION = new ResourceLocation("textures/entity/strider/strider.png");
    private static final ResourceLocation COLD_LOCATION = new ResourceLocation("textures/entity/strider/strider_cold.png");
 
-   public StriderRenderer(EntityRenderDispatcher var1) {
-      super(var1, new StriderModel(), 0.5F);
-      this.addLayer(new SaddleLayer(this, new StriderModel(), new ResourceLocation("textures/entity/strider/strider_saddle.png")));
+   public StriderRenderer(EntityRendererProvider.Context var1) {
+      super(var1, new StriderModel(var1.bakeLayer(ModelLayers.STRIDER)), 0.5F);
+      this.addLayer(new SaddleLayer(this, new StriderModel(var1.bakeLayer(ModelLayers.STRIDER_SADDLE)), new ResourceLocation("textures/entity/strider/strider_saddle.png")));
    }
 
    public ResourceLocation getTextureLocation(Strider var1) {
       return var1.isSuffocating() ? COLD_LOCATION : STRIDER_LOCATION;
    }
@@ -28,8 +29,8 @@
       }
 
    }
 
    protected boolean isShaking(Strider var1) {
-      return var1.isSuffocating();
+      return super.isShaking(var1) || var1.isSuffocating();
    }
 }
