--- net/minecraft/client/renderer/entity/PandaRenderer.java
+++ net/minecraft/client/renderer/entity/PandaRenderer.java
@@ -4,10 +4,11 @@
 import com.mojang.blaze3d.vertex.PoseStack;
 import com.mojang.math.Vector3f;
 import java.util.Map;
 import net.minecraft.Util;
 import net.minecraft.client.model.PandaModel;
+import net.minecraft.client.model.geom.ModelLayers;
 import net.minecraft.client.renderer.entity.layers.PandaHoldsItemLayer;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.util.Mth;
 import net.minecraft.world.entity.animal.Panda;
 
@@ -20,17 +21,17 @@
       var0.put(Panda.Gene.BROWN, new ResourceLocation("textures/entity/panda/brown_panda.png"));
       var0.put(Panda.Gene.WEAK, new ResourceLocation("textures/entity/panda/weak_panda.png"));
       var0.put(Panda.Gene.AGGRESSIVE, new ResourceLocation("textures/entity/panda/aggressive_panda.png"));
    });
 
-   public PandaRenderer(EntityRenderDispatcher var1) {
-      super(var1, new PandaModel(9, 0.0F), 0.9F);
+   public PandaRenderer(EntityRendererProvider.Context var1) {
+      super(var1, new PandaModel(var1.bakeLayer(ModelLayers.PANDA)), 0.9F);
       this.addLayer(new PandaHoldsItemLayer(this));
    }
 
    public ResourceLocation getTextureLocation(Panda var1) {
-      return (ResourceLocation)TEXTURES.getOrDefault(var1.getVariant(), TEXTURES.get(Panda.Gene.NORMAL));
+      return (ResourceLocation)TEXTURES.getOrDefault(var1.getVariant(), (ResourceLocation)TEXTURES.get(Panda.Gene.NORMAL));
    }
 
    protected void setupRotations(Panda var1, PoseStack var2, float var3, float var4, float var5) {
       super.setupRotations(var1, var2, var3, var4, var5);
       float var8;
@@ -77,11 +78,11 @@
 
       float var14 = var1.getSitAmount(var5);
       float var15;
       if (var14 > 0.0F) {
          var2.translate(0.0D, (double)(0.8F * var14), 0.0D);
-         var2.mulPose(Vector3f.XP.rotationDegrees(Mth.lerp(var14, var1.xRot, var1.xRot + 90.0F)));
+         var2.mulPose(Vector3f.XP.rotationDegrees(Mth.lerp(var14, var1.getXRot(), var1.getXRot() + 90.0F)));
          var2.translate(0.0D, (double)(-1.0F * var14), 0.0D);
          if (var1.isScared()) {
             var15 = (float)(Math.cos((double)var1.tickCount * 1.25D) * 3.141592653589793D * 0.05000000074505806D);
             var2.mulPose(Vector3f.YP.rotationDegrees(var15));
             if (var1.isBaby()) {
@@ -92,11 +93,11 @@
 
       var15 = var1.getLieOnBackAmount(var5);
       if (var15 > 0.0F) {
          var8 = var1.isBaby() ? 0.5F : 1.3F;
          var2.translate(0.0D, (double)(var8 * var15), 0.0D);
-         var2.mulPose(Vector3f.XP.rotationDegrees(Mth.lerp(var15, var1.xRot, var1.xRot + 180.0F)));
+         var2.mulPose(Vector3f.XP.rotationDegrees(Mth.lerp(var15, var1.getXRot(), var1.getXRot() + 180.0F)));
       }
 
    }
 
    private float getAngle(float var1, float var2, int var3, float var4, float var5) {
