--- net/minecraft/client/renderer/entity/LivingEntityRenderer.java
+++ net/minecraft/client/renderer/entity/LivingEntityRenderer.java
@@ -26,14 +26,15 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
 public abstract class LivingEntityRenderer<T extends LivingEntity, M extends EntityModel<T>> extends EntityRenderer<T> implements RenderLayerParent<T, M> {
    private static final Logger LOGGER = LogManager.getLogger();
+   private static final float EYE_BED_OFFSET = 0.1F;
    protected M model;
    protected final List<RenderLayer<T, M>> layers = Lists.newArrayList();
 
-   public LivingEntityRenderer(EntityRenderDispatcher var1, M var2, float var3) {
+   public LivingEntityRenderer(EntityRendererProvider.Context var1, M var2, float var3) {
       super(var1);
       this.model = var2;
       this.shadowRadius = var3;
    }
 
@@ -73,11 +74,11 @@
          }
 
          var9 = var8 - var7;
       }
 
-      float var21 = Mth.lerp(var3, var1.xRotO, var1.xRot);
+      float var21 = Mth.lerp(var3, var1.xRotO, var1.getXRot());
       float var12;
       if (var1.getPose() == Pose.SLEEPING) {
          Direction var22 = var1.getBedOrientation();
          if (var22 != null) {
             var12 = var1.getEyeHeight(Pose.STANDING) - 0.1F;
@@ -164,11 +165,11 @@
          return 0.0F;
       }
    }
 
    protected boolean isShaking(T var1) {
-      return false;
+      return var1.isFullyFrozen();
    }
 
    protected void setupRotations(T var1, PoseStack var2, float var3, float var4, float var5) {
       if (this.isShaking(var1)) {
          var4 += (float)(Math.cos((double)var1.tickCount * 3.25D) * 3.141592653589793D * 0.4000000059604645D);
@@ -186,11 +187,11 @@
             var7 = 1.0F;
          }
 
          var2.mulPose(Vector3f.ZP.rotationDegrees(var7 * this.getFlipDegrees(var1)));
       } else if (var1.isAutoSpinAttack()) {
-         var2.mulPose(Vector3f.XP.rotationDegrees(-90.0F - var1.xRot));
+         var2.mulPose(Vector3f.XP.rotationDegrees(-90.0F - var1.getXRot()));
          var2.mulPose(Vector3f.YP.rotationDegrees(((float)var1.tickCount + var5) * -75.0F));
       } else if (var6 == Pose.SLEEPING) {
          Direction var9 = var1.getBedOrientation();
          float var8 = var9 != null ? sleepDirectionToRotation(var9) : var4;
          var2.mulPose(Vector3f.YP.rotationDegrees(var8));
