--- net/minecraft/client/renderer/entity/layers/VillagerProfessionLayer.java
+++ net/minecraft/client/renderer/entity/layers/VillagerProfessionLayer.java
@@ -13,39 +13,36 @@
 import net.minecraft.client.renderer.entity.RenderLayerParent;
 import net.minecraft.client.resources.metadata.animation.VillagerMetaDataSection;
 import net.minecraft.core.DefaultedRegistry;
 import net.minecraft.core.Registry;
 import net.minecraft.resources.ResourceLocation;
-import net.minecraft.server.packs.resources.ReloadableResourceManager;
 import net.minecraft.server.packs.resources.Resource;
 import net.minecraft.server.packs.resources.ResourceManager;
-import net.minecraft.server.packs.resources.ResourceManagerReloadListener;
 import net.minecraft.util.Mth;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.npc.VillagerData;
 import net.minecraft.world.entity.npc.VillagerDataHolder;
 import net.minecraft.world.entity.npc.VillagerProfession;
 import net.minecraft.world.entity.npc.VillagerType;
 
-public class VillagerProfessionLayer<T extends LivingEntity & VillagerDataHolder, M extends EntityModel<T> & VillagerHeadModel> extends RenderLayer<T, M> implements ResourceManagerReloadListener {
+public class VillagerProfessionLayer<T extends LivingEntity & VillagerDataHolder, M extends EntityModel<T> & VillagerHeadModel> extends RenderLayer<T, M> {
    private static final Int2ObjectMap<ResourceLocation> LEVEL_LOCATIONS = (Int2ObjectMap)Util.make(new Int2ObjectOpenHashMap(), (var0) -> {
       var0.put(1, new ResourceLocation("stone"));
       var0.put(2, new ResourceLocation("iron"));
       var0.put(3, new ResourceLocation("gold"));
       var0.put(4, new ResourceLocation("emerald"));
       var0.put(5, new ResourceLocation("diamond"));
    });
    private final Object2ObjectMap<VillagerType, VillagerMetaDataSection.Hat> typeHatCache = new Object2ObjectOpenHashMap();
    private final Object2ObjectMap<VillagerProfession, VillagerMetaDataSection.Hat> professionHatCache = new Object2ObjectOpenHashMap();
-   private final ReloadableResourceManager resourceManager;
+   private final ResourceManager resourceManager;
    private final String path;
 
-   public VillagerProfessionLayer(RenderLayerParent<T, M> var1, ReloadableResourceManager var2, String var3) {
+   public VillagerProfessionLayer(RenderLayerParent<T, M> var1, ResourceManager var2, String var3) {
       super(var1);
       this.resourceManager = var2;
       this.path = var3;
-      var2.registerReloadListener(this);
    }
 
    public void render(PoseStack var1, MultiBufferSource var2, int var3, T var4, float var5, float var6, float var7, float var8, float var9, float var10) {
       if (!var4.isInvisible()) {
          VillagerData var11 = ((VillagerDataHolder)var4).getVillagerData();
@@ -60,11 +57,11 @@
          ((VillagerHeadModel)var16).hatVisible(true);
          if (var13 != VillagerProfession.NONE && !var4.isBaby()) {
             ResourceLocation var18 = this.getResourceLocation("profession", Registry.VILLAGER_PROFESSION.getKey(var13));
             renderColoredCutoutModel(var16, var18, var1, var2, var3, var4, 1.0F, 1.0F, 1.0F);
             if (var13 != VillagerProfession.NITWIT) {
-               ResourceLocation var19 = this.getResourceLocation("profession_level", (ResourceLocation)LEVEL_LOCATIONS.get(Mth.clamp(var11.getLevel(), 1, LEVEL_LOCATIONS.size())));
+               ResourceLocation var19 = this.getResourceLocation("profession_level", (ResourceLocation)LEVEL_LOCATIONS.get(Mth.clamp((int)var11.getLevel(), (int)1, (int)LEVEL_LOCATIONS.size())));
                renderColoredCutoutModel(var16, var19, var1, var2, var3, var4, 1.0F, 1.0F, 1.0F);
             }
          }
 
       }
@@ -76,45 +73,44 @@
 
    public <K> VillagerMetaDataSection.Hat getHatData(Object2ObjectMap<K, VillagerMetaDataSection.Hat> var1, String var2, DefaultedRegistry<K> var3, K var4) {
       return (VillagerMetaDataSection.Hat)var1.computeIfAbsent(var4, (var4x) -> {
          try {
             Resource var5 = this.resourceManager.getResource(this.getResourceLocation(var2, var3.getKey(var4)));
-            Throwable var6 = null;
 
-            VillagerMetaDataSection.Hat var8;
-            try {
-               VillagerMetaDataSection var7 = (VillagerMetaDataSection)var5.getMetadata(VillagerMetaDataSection.SERIALIZER);
-               if (var7 == null) {
-                  return VillagerMetaDataSection.Hat.NONE;
-               }
-
-               var8 = var7.getHat();
-            } catch (Throwable var19) {
-               var6 = var19;
-               throw var19;
-            } finally {
-               if (var5 != null) {
+            VillagerMetaDataSection.Hat var7;
+            label50: {
+               try {
+                  VillagerMetaDataSection var6 = (VillagerMetaDataSection)var5.getMetadata(VillagerMetaDataSection.SERIALIZER);
                   if (var6 != null) {
+                     var7 = var6.getHat();
+                     break label50;
+                  }
+               } catch (Throwable var9) {
+                  if (var5 != null) {
                      try {
                         var5.close();
-                     } catch (Throwable var18) {
-                        var6.addSuppressed(var18);
+                     } catch (Throwable var8) {
+                        var9.addSuppressed(var8);
                      }
-                  } else {
-                     var5.close();
                   }
+
+                  throw var9;
                }
 
+               if (var5 != null) {
+                  var5.close();
+               }
+
+               return VillagerMetaDataSection.Hat.NONE;
             }
 
-            return var8;
-         } catch (IOException var21) {
+            if (var5 != null) {
+               var5.close();
+            }
+
+            return var7;
+         } catch (IOException var10) {
             return VillagerMetaDataSection.Hat.NONE;
          }
       });
    }
-
-   public void onResourceManagerReload(ResourceManager var1) {
-      this.professionHatCache.clear();
-      this.typeHatCache.clear();
-   }
 }
