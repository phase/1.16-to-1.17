--- net/minecraft/client/renderer/entity/layers/SpinAttackEffectLayer.java
+++ net/minecraft/client/renderer/entity/layers/SpinAttackEffectLayer.java
@@ -2,27 +2,42 @@
 
 import com.mojang.blaze3d.vertex.PoseStack;
 import com.mojang.blaze3d.vertex.VertexConsumer;
 import com.mojang.math.Vector3f;
 import net.minecraft.client.model.PlayerModel;
+import net.minecraft.client.model.geom.EntityModelSet;
+import net.minecraft.client.model.geom.ModelLayers;
 import net.minecraft.client.model.geom.ModelPart;
+import net.minecraft.client.model.geom.PartPose;
+import net.minecraft.client.model.geom.builders.CubeListBuilder;
+import net.minecraft.client.model.geom.builders.LayerDefinition;
+import net.minecraft.client.model.geom.builders.MeshDefinition;
+import net.minecraft.client.model.geom.builders.PartDefinition;
 import net.minecraft.client.renderer.MultiBufferSource;
 import net.minecraft.client.renderer.RenderType;
 import net.minecraft.client.renderer.entity.RenderLayerParent;
 import net.minecraft.client.renderer.texture.OverlayTexture;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.world.entity.LivingEntity;
 
 public class SpinAttackEffectLayer<T extends LivingEntity> extends RenderLayer<T, PlayerModel<T>> {
    public static final ResourceLocation TEXTURE = new ResourceLocation("textures/entity/trident_riptide.png");
-   private final ModelPart box = new ModelPart(64, 64, 0, 0);
+   private final ModelPart box;
 
-   public SpinAttackEffectLayer(RenderLayerParent<T, PlayerModel<T>> var1) {
+   public SpinAttackEffectLayer(RenderLayerParent<T, PlayerModel<T>> var1, EntityModelSet var2) {
       super(var1);
-      this.box.addBox(-8.0F, -16.0F, -8.0F, 16.0F, 32.0F, 16.0F);
+      ModelPart var3 = var2.getLayer(ModelLayers.PLAYER_SPIN_ATTACK);
+      this.box = var3.getChild("box");
    }
 
+   public static LayerDefinition createLayer() {
+      MeshDefinition var0 = new MeshDefinition();
+      PartDefinition var1 = var0.getRoot();
+      var1.addOrReplaceChild("box", CubeListBuilder.create().texOffs(0, 0).addBox(-8.0F, -16.0F, -8.0F, 16.0F, 32.0F, 16.0F), PartPose.ZERO);
+      return LayerDefinition.create(var0, 64, 64);
+   }
+
    public void render(PoseStack var1, MultiBufferSource var2, int var3, T var4, float var5, float var6, float var7, float var8, float var9, float var10) {
       if (var4.isAutoSpinAttack()) {
          VertexConsumer var11 = var2.getBuffer(RenderType.entityCutoutNoCull(TEXTURE));
 
          for(int var12 = 0; var12 < 3; ++var12) {
