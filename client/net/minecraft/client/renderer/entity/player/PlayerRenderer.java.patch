--- net/minecraft/client/renderer/entity/player/PlayerRenderer.java
+++ net/minecraft/client/renderer/entity/player/PlayerRenderer.java
@@ -1,34 +1,35 @@
 package net.minecraft.client.renderer.entity.player;
 
 import com.mojang.blaze3d.vertex.PoseStack;
 import com.mojang.math.Vector3f;
+import java.util.Objects;
 import net.minecraft.client.model.HumanoidModel;
 import net.minecraft.client.model.PlayerModel;
+import net.minecraft.client.model.geom.ModelLayers;
 import net.minecraft.client.model.geom.ModelPart;
 import net.minecraft.client.player.AbstractClientPlayer;
 import net.minecraft.client.renderer.MultiBufferSource;
 import net.minecraft.client.renderer.RenderType;
-import net.minecraft.client.renderer.entity.EntityRenderDispatcher;
+import net.minecraft.client.renderer.entity.EntityRendererProvider;
 import net.minecraft.client.renderer.entity.LivingEntityRenderer;
 import net.minecraft.client.renderer.entity.layers.ArrowLayer;
 import net.minecraft.client.renderer.entity.layers.BeeStingerLayer;
 import net.minecraft.client.renderer.entity.layers.CapeLayer;
 import net.minecraft.client.renderer.entity.layers.CustomHeadLayer;
 import net.minecraft.client.renderer.entity.layers.Deadmau5EarsLayer;
 import net.minecraft.client.renderer.entity.layers.ElytraLayer;
 import net.minecraft.client.renderer.entity.layers.HumanoidArmorLayer;
-import net.minecraft.client.renderer.entity.layers.ItemInHandLayer;
 import net.minecraft.client.renderer.entity.layers.ParrotOnShoulderLayer;
+import net.minecraft.client.renderer.entity.layers.PlayerItemInHandLayer;
 import net.minecraft.client.renderer.entity.layers.SpinAttackEffectLayer;
 import net.minecraft.client.renderer.texture.OverlayTexture;
 import net.minecraft.network.chat.Component;
 import net.minecraft.network.chat.TextComponent;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.util.Mth;
 import net.minecraft.world.InteractionHand;
-import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.HumanoidArm;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.player.PlayerModelPart;
 import net.minecraft.world.item.CrossbowItem;
 import net.minecraft.world.item.ItemStack;
@@ -38,25 +39,21 @@
 import net.minecraft.world.scores.Objective;
 import net.minecraft.world.scores.Score;
 import net.minecraft.world.scores.Scoreboard;
 
 public class PlayerRenderer extends LivingEntityRenderer<AbstractClientPlayer, PlayerModel<AbstractClientPlayer>> {
-   public PlayerRenderer(EntityRenderDispatcher var1) {
-      this(var1, false);
-   }
-
-   public PlayerRenderer(EntityRenderDispatcher var1, boolean var2) {
-      super(var1, new PlayerModel(0.0F, var2), 0.5F);
-      this.addLayer(new HumanoidArmorLayer(this, new HumanoidModel(0.5F), new HumanoidModel(1.0F)));
-      this.addLayer(new ItemInHandLayer(this));
-      this.addLayer(new ArrowLayer(this));
+   public PlayerRenderer(EntityRendererProvider.Context var1, boolean var2) {
+      super(var1, new PlayerModel(var1.bakeLayer(var2 ? ModelLayers.PLAYER_SLIM : ModelLayers.PLAYER), var2), 0.5F);
+      this.addLayer(new HumanoidArmorLayer(this, new HumanoidModel(var1.bakeLayer(var2 ? ModelLayers.PLAYER_SLIM_INNER_ARMOR : ModelLayers.PLAYER_INNER_ARMOR)), new HumanoidModel(var1.bakeLayer(var2 ? ModelLayers.PLAYER_SLIM_OUTER_ARMOR : ModelLayers.PLAYER_OUTER_ARMOR))));
+      this.addLayer(new PlayerItemInHandLayer(this));
+      this.addLayer(new ArrowLayer(var1, this));
       this.addLayer(new Deadmau5EarsLayer(this));
       this.addLayer(new CapeLayer(this));
-      this.addLayer(new CustomHeadLayer(this));
-      this.addLayer(new ElytraLayer(this));
-      this.addLayer(new ParrotOnShoulderLayer(this));
-      this.addLayer(new SpinAttackEffectLayer(this));
+      this.addLayer(new CustomHeadLayer(this, var1.getModelSet()));
+      this.addLayer(new ElytraLayer(this, var1.getModelSet()));
+      this.addLayer(new ParrotOnShoulderLayer(this, var1.getModelSet()));
+      this.addLayer(new SpinAttackEffectLayer(this, var1.getModelSet()));
       this.addLayer(new BeeStingerLayer(this));
    }
 
    public void render(AbstractClientPlayer var1, float var2, float var3, PoseStack var4, MultiBufferSource var5, int var6) {
       this.setModelProperties(var1);
@@ -119,11 +116,15 @@
             }
 
             if (var3 == UseAnim.CROSSBOW && var1 == var0.getUsedItemHand()) {
                return HumanoidModel.ArmPose.CROSSBOW_CHARGE;
             }
-         } else if (!var0.swinging && var2.getItem() == Items.CROSSBOW && CrossbowItem.isCharged(var2)) {
+
+            if (var3 == UseAnim.SPYGLASS) {
+               return HumanoidModel.ArmPose.SPYGLASS;
+            }
+         } else if (!var0.swinging && var2.is(Items.CROSSBOW) && CrossbowItem.isCharged(var2)) {
             return HumanoidModel.ArmPose.CROSSBOW_HOLD;
          }
 
          return HumanoidModel.ArmPose.ITEM;
       }
@@ -145,11 +146,11 @@
          Scoreboard var8 = var1.getScoreboard();
          Objective var9 = var8.getDisplayObjective(2);
          if (var9 != null) {
             Score var10 = var8.getOrCreatePlayerScore(var1.getScoreboardName(), var9);
             super.renderNameTag(var1, (new TextComponent(Integer.toString(var10.getScore()))).append(" ").append(var9.getDisplayName()), var3, var4, var5);
-            this.getFont().getClass();
+            Objects.requireNonNull(this.getFont());
             var3.translate(0.0D, (double)(9.0F * 1.15F * 0.025F), 0.0D);
          }
       }
 
       super.renderNameTag(var1, var2, var3, var4, var5);
@@ -184,25 +185,25 @@
       if (var1.isFallFlying()) {
          super.setupRotations(var1, var2, var3, var4, var5);
          var7 = (float)var1.getFallFlyingTicks() + var5;
          var8 = Mth.clamp(var7 * var7 / 100.0F, 0.0F, 1.0F);
          if (!var1.isAutoSpinAttack()) {
-            var2.mulPose(Vector3f.XP.rotationDegrees(var8 * (-90.0F - var1.xRot)));
+            var2.mulPose(Vector3f.XP.rotationDegrees(var8 * (-90.0F - var1.getXRot())));
          }
 
          Vec3 var9 = var1.getViewVector(var5);
          Vec3 var10 = var1.getDeltaMovement();
-         double var11 = Entity.getHorizontalDistanceSqr(var10);
-         double var13 = Entity.getHorizontalDistanceSqr(var9);
+         double var11 = var10.horizontalDistanceSqr();
+         double var13 = var9.horizontalDistanceSqr();
          if (var11 > 0.0D && var13 > 0.0D) {
             double var15 = (var10.x * var9.x + var10.z * var9.z) / Math.sqrt(var11 * var13);
             double var17 = var10.x * var9.z - var10.z * var9.x;
             var2.mulPose(Vector3f.YP.rotation((float)(Math.signum(var17) * Math.acos(var15))));
          }
       } else if (var6 > 0.0F) {
          super.setupRotations(var1, var2, var3, var4, var5);
-         var7 = var1.isInWater() ? -90.0F - var1.xRot : -90.0F;
+         var7 = var1.isInWater() ? -90.0F - var1.getXRot() : -90.0F;
          var8 = Mth.lerp(var6, 0.0F, var7);
          var2.mulPose(Vector3f.XP.rotationDegrees(var8));
          if (var1.isVisuallySwimming()) {
             var2.translate(0.0D, -1.0D, 0.30000001192092896D);
          }
