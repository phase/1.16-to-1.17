--- net/minecraft/client/renderer/item/ItemProperties.java
+++ net/minecraft/client/renderer/item/ItemProperties.java
@@ -2,10 +2,11 @@
 
 import com.google.common.collect.Maps;
 import java.util.Map;
 import java.util.Optional;
 import javax.annotation.Nullable;
+import net.minecraft.client.Minecraft;
 import net.minecraft.client.multiplayer.ClientLevel;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.nbt.NbtUtils;
@@ -15,10 +16,11 @@
 import net.minecraft.world.entity.HumanoidArm;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.decoration.ItemFrame;
 import net.minecraft.world.entity.item.ItemEntity;
 import net.minecraft.world.entity.player.Player;
+import net.minecraft.world.item.BundleItem;
 import net.minecraft.world.item.CompassItem;
 import net.minecraft.world.item.CrossbowItem;
 import net.minecraft.world.item.ElytraItem;
 import net.minecraft.world.item.FishingRodItem;
 import net.minecraft.world.item.Item;
@@ -89,10 +91,13 @@
          }
       });
       register(Items.BOW, new ResourceLocation("pulling"), (var0, var1, var2) -> {
          return var2 != null && var2.isUsingItem() && var2.getUseItem() == var0 ? 1.0F : 0.0F;
       });
+      register(Items.BUNDLE, new ResourceLocation("filled"), (var0, var1, var2) -> {
+         return BundleItem.getFullnessDisplay(var0);
+      });
       register(Items.CLOCK, new ResourceLocation("time"), new ItemPropertyFunction() {
          private double rotation;
          private double rota;
          private long lastUpdateTick;
 
@@ -252,10 +257,13 @@
          return var2 != null && var2.isUsingItem() && var2.getUseItem() == var0 ? 1.0F : 0.0F;
       });
       register(Items.TRIDENT, new ResourceLocation("throwing"), (var0, var1, var2) -> {
          return var2 != null && var2.isUsingItem() && var2.getUseItem() == var0 ? 1.0F : 0.0F;
       });
+      register(Items.SPYGLASS, new ResourceLocation("scoping"), (var0, var1, var2) -> {
+         return var2 != null && var2.isUsingItem() && var2.getUseItem() == var0 && var2.getUUID().equals(Minecraft.getInstance().player.getUUID()) ? 1.0F : 0.0F;
+      });
    }
 
    static class CompassWobble {
       private double rotation;
       private double deltaRotation;
