--- net/minecraft/client/renderer/block/LiquidBlockRenderer.java
+++ net/minecraft/client/renderer/block/LiquidBlockRenderer.java
@@ -22,10 +22,11 @@
 import net.minecraft.world.phys.Vec3;
 import net.minecraft.world.phys.shapes.Shapes;
 import net.minecraft.world.phys.shapes.VoxelShape;
 
 public class LiquidBlockRenderer {
+   private static final float MAX_FLUID_HEIGHT = 0.8888889F;
    private final TextureAtlasSprite[] lavaIcons = new TextureAtlasSprite[2];
    private final TextureAtlasSprite[] waterIcons = new TextureAtlasSprite[2];
    private TextureAtlasSprite waterOverlay;
 
    public LiquidBlockRenderer() {
@@ -105,11 +106,10 @@
          float var37;
          float var38;
          float var40;
          float var41;
          float var42;
-         float var50;
          float var51;
          float var52;
          if (var12 && !isFaceOccludedByNeighbor(var1, var2, Direction.UP, Math.min(Math.min(var23, var24), Math.min(var25, var26)))) {
             var18 = true;
             var23 -= 0.001F;
@@ -147,25 +147,25 @@
                var41 = var44.getV((double)(8.0F + (var47 - var46) * 16.0F));
                var38 = var44.getU((double)(8.0F + (var47 - var46) * 16.0F));
                var42 = var44.getV((double)(8.0F + (-var47 - var46) * 16.0F));
             }
 
-            float var65 = (var35 + var36 + var37 + var38) / 4.0F;
+            float var66 = (var35 + var36 + var37 + var38) / 4.0F;
             var45 = (var39 + var40 + var41 + var42) / 4.0F;
             var46 = (float)var6[0].getWidth() / (var6[0].getU1() - var6[0].getU0());
             var47 = (float)var6[0].getHeight() / (var6[0].getV1() - var6[0].getV0());
             var48 = 4.0F / Math.max(var47, var46);
-            var35 = Mth.lerp(var48, var35, var65);
-            var36 = Mth.lerp(var48, var36, var65);
-            var37 = Mth.lerp(var48, var37, var65);
-            var38 = Mth.lerp(var48, var38, var65);
+            var35 = Mth.lerp(var48, var35, var66);
+            var36 = Mth.lerp(var48, var36, var66);
+            var37 = Mth.lerp(var48, var37, var66);
+            var38 = Mth.lerp(var48, var38, var66);
             var39 = Mth.lerp(var48, var39, var45);
             var40 = Mth.lerp(var48, var40, var45);
             var41 = Mth.lerp(var48, var41, var45);
             var42 = Mth.lerp(var48, var42, var45);
             int var49 = this.getLightColor(var1, var2);
-            var50 = var20 * var9;
+            float var50 = var20 * var9;
             var51 = var20 * var10;
             var52 = var20 * var11;
             this.vertex(var3, var27 + 0.0D, var29 + (double)var23, var31 + 0.0D, var50, var51, var52, var35, var39, var49);
             this.vertex(var3, var27 + 0.0D, var29 + (double)var24, var31 + 1.0D, var50, var51, var52, var36, var40, var49);
             this.vertex(var3, var27 + 1.0D, var29 + (double)var25, var31 + 1.0D, var50, var51, var52, var37, var41, var49);
@@ -192,85 +192,86 @@
             this.vertex(var3, var27 + 1.0D, var29 + (double)var34, var31, var40, var41, var42, var36, var37, var62);
             this.vertex(var3, var27 + 1.0D, var29 + (double)var34, var31 + 1.0D, var40, var41, var42, var36, var38, var62);
             var18 = true;
          }
 
-         for(int var60 = 0; var60 < 4; ++var60) {
-            double var61;
+         int var60 = this.getLightColor(var1, var2);
+
+         for(int var61 = 0; var61 < 4; ++var61) {
             double var63;
             double var64;
-            double var66;
-            Direction var67;
-            boolean var68;
-            if (var60 == 0) {
-               var36 = var23;
-               var37 = var26;
-               var61 = var27;
-               var64 = var27 + 1.0D;
-               var63 = var31 + 0.0010000000474974513D;
-               var66 = var31 + 0.0010000000474974513D;
-               var67 = Direction.NORTH;
-               var68 = var14;
-            } else if (var60 == 1) {
-               var36 = var25;
-               var37 = var24;
-               var61 = var27 + 1.0D;
-               var64 = var27;
-               var63 = var31 + 1.0D - 0.0010000000474974513D;
-               var66 = var31 + 1.0D - 0.0010000000474974513D;
-               var67 = Direction.SOUTH;
-               var68 = var15;
-            } else if (var60 == 2) {
-               var36 = var24;
+            double var65;
+            double var67;
+            Direction var68;
+            boolean var69;
+            if (var61 == 0) {
                var37 = var23;
-               var61 = var27 + 0.0010000000474974513D;
-               var64 = var27 + 0.0010000000474974513D;
-               var63 = var31 + 1.0D;
-               var66 = var31;
-               var67 = Direction.WEST;
-               var68 = var16;
-            } else {
-               var36 = var26;
+               var38 = var26;
+               var63 = var27;
+               var65 = var27 + 1.0D;
+               var64 = var31 + 0.0010000000474974513D;
+               var67 = var31 + 0.0010000000474974513D;
+               var68 = Direction.NORTH;
+               var69 = var14;
+            } else if (var61 == 1) {
                var37 = var25;
-               var61 = var27 + 1.0D - 0.0010000000474974513D;
-               var64 = var27 + 1.0D - 0.0010000000474974513D;
-               var63 = var31;
-               var66 = var31 + 1.0D;
-               var67 = Direction.EAST;
-               var68 = var17;
+               var38 = var24;
+               var63 = var27 + 1.0D;
+               var65 = var27;
+               var64 = var31 + 1.0D - 0.0010000000474974513D;
+               var67 = var31 + 1.0D - 0.0010000000474974513D;
+               var68 = Direction.SOUTH;
+               var69 = var15;
+            } else if (var61 == 2) {
+               var37 = var24;
+               var38 = var23;
+               var63 = var27 + 0.0010000000474974513D;
+               var65 = var27 + 0.0010000000474974513D;
+               var64 = var31 + 1.0D;
+               var67 = var31;
+               var68 = Direction.WEST;
+               var69 = var16;
+            } else {
+               var37 = var26;
+               var38 = var25;
+               var63 = var27 + 1.0D - 0.0010000000474974513D;
+               var65 = var27 + 1.0D - 0.0010000000474974513D;
+               var64 = var31;
+               var67 = var31 + 1.0D;
+               var68 = Direction.EAST;
+               var69 = var17;
             }
 
-            if (var68 && !isFaceOccludedByNeighbor(var1, var2, var67, Math.max(var36, var37))) {
+            if (var69 && !isFaceOccludedByNeighbor(var1, var2, var68, Math.max(var37, var38))) {
                var18 = true;
-               BlockPos var69 = var2.relative(var67);
-               TextureAtlasSprite var70 = var6[1];
+               BlockPos var70 = var2.relative(var68);
+               TextureAtlasSprite var71 = var6[1];
                if (!var5) {
-                  Block var71 = var1.getBlockState(var69).getBlock();
-                  if (var71 instanceof HalfTransparentBlock || var71 instanceof LeavesBlock) {
-                     var70 = this.waterOverlay;
+                  Block var72 = var1.getBlockState(var70).getBlock();
+                  if (var72 instanceof HalfTransparentBlock || var72 instanceof LeavesBlock) {
+                     var71 = this.waterOverlay;
                   }
                }
 
-               var50 = var70.getU(0.0D);
-               var51 = var70.getU(8.0D);
-               var52 = var70.getV((double)((1.0F - var36) * 16.0F * 0.5F));
-               float var53 = var70.getV((double)((1.0F - var37) * 16.0F * 0.5F));
-               float var54 = var70.getV(8.0D);
-               int var55 = this.getLightColor(var1, var69);
-               float var56 = var60 < 2 ? var21 : var22;
+               var51 = var71.getU(0.0D);
+               var52 = var71.getU(8.0D);
+               float var53 = var71.getV((double)((1.0F - var37) * 16.0F * 0.5F));
+               float var54 = var71.getV((double)((1.0F - var38) * 16.0F * 0.5F));
+               float var55 = var71.getV(8.0D);
+               float var56 = var61 < 2 ? var21 : var22;
                float var57 = var20 * var56 * var9;
                float var58 = var20 * var56 * var10;
                float var59 = var20 * var56 * var11;
-               this.vertex(var3, var61, var29 + (double)var36, var63, var57, var58, var59, var50, var52, var55);
-               this.vertex(var3, var64, var29 + (double)var37, var66, var57, var58, var59, var51, var53, var55);
-               this.vertex(var3, var64, var29 + (double)var34, var66, var57, var58, var59, var51, var54, var55);
-               this.vertex(var3, var61, var29 + (double)var34, var63, var57, var58, var59, var50, var54, var55);
-               if (var70 != this.waterOverlay) {
-                  this.vertex(var3, var61, var29 + (double)var34, var63, var57, var58, var59, var50, var54, var55);
-                  this.vertex(var3, var64, var29 + (double)var34, var66, var57, var58, var59, var51, var54, var55);
-                  this.vertex(var3, var64, var29 + (double)var37, var66, var57, var58, var59, var51, var53, var55);
-                  this.vertex(var3, var61, var29 + (double)var36, var63, var57, var58, var59, var50, var52, var55);
+               this.vertex(var3, var63, var29 + (double)var37, var64, var57, var58, var59, var51, var53, var60);
+               this.vertex(var3, var65, var29 + (double)var38, var67, var57, var58, var59, var52, var54, var60);
+               this.vertex(var3, var65, var29 + (double)var34, var67, var57, var58, var59, var52, var55, var60);
+               this.vertex(var3, var63, var29 + (double)var34, var64, var57, var58, var59, var51, var55, var60);
+               if (var71 != this.waterOverlay) {
+                  this.vertex(var3, var63, var29 + (double)var34, var64, var57, var58, var59, var51, var55, var60);
+                  this.vertex(var3, var65, var29 + (double)var34, var67, var57, var58, var59, var52, var55, var60);
+                  this.vertex(var3, var65, var29 + (double)var38, var67, var57, var58, var59, var52, var54, var60);
+                  this.vertex(var3, var63, var29 + (double)var37, var64, var57, var58, var59, var51, var53, var60);
                }
             }
          }
 
          return var18;
