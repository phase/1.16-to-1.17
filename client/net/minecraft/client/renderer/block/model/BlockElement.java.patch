--- net/minecraft/client/renderer/block/model/BlockElement.java
+++ net/minecraft/client/renderer/block/model/BlockElement.java
@@ -18,10 +18,13 @@
 import net.minecraft.core.Direction;
 import net.minecraft.util.GsonHelper;
 import net.minecraft.util.Mth;
 
 public class BlockElement {
+   private static final boolean DEFAULT_RESCALE = false;
+   private static final float MIN_EXTENT = -16.0F;
+   private static final float MAX_EXTENT = 32.0F;
    public final Vector3f from;
    public final Vector3f to;
    public final Map<Direction, BlockElementFace> faces;
    public final BlockElementRotation rotation;
    public final boolean shade;
@@ -62,11 +65,13 @@
       case EAST:
          return new float[]{16.0F - this.to.z(), 16.0F - this.to.y(), 16.0F - this.from.z(), 16.0F - this.from.y()};
       }
    }
 
-   public static class Deserializer implements JsonDeserializer<BlockElement> {
+   protected static class Deserializer implements JsonDeserializer<BlockElement> {
+      private static final boolean DEFAULT_SHADE = true;
+
       protected Deserializer() {
       }
 
       public BlockElement deserialize(JsonElement var1, Type var2, JsonDeserializationContext var3) throws JsonParseException {
          JsonObject var4 = var1.getAsJsonObject();
@@ -132,11 +137,11 @@
          Iterator var5 = var4.entrySet().iterator();
 
          while(var5.hasNext()) {
             Entry var6 = (Entry)var5.next();
             Direction var7 = this.getFacing((String)var6.getKey());
-            var3.put(var7, var1.deserialize((JsonElement)var6.getValue(), BlockElementFace.class));
+            var3.put(var7, (BlockElementFace)var1.deserialize((JsonElement)var6.getValue(), BlockElementFace.class));
          }
 
          return var3;
       }
 
