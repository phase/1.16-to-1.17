--- net/minecraft/client/renderer/block/model/ItemModelGenerator.java
+++ net/minecraft/client/renderer/block/model/ItemModelGenerator.java
@@ -14,10 +14,12 @@
 import net.minecraft.core.Direction;
 import net.minecraft.resources.ResourceLocation;
 
 public class ItemModelGenerator {
    public static final List<String> LAYERS = Lists.newArrayList(new String[]{"layer0", "layer1", "layer2", "layer3", "layer4"});
+   private static final float MIN_Z = 7.5F;
+   private static final float MAX_Z = 8.5F;
 
    public ItemModelGenerator() {
    }
 
    public BlockModel generateBlockModel(Function<Material, TextureAtlasSprite> var1, BlockModel var2) {
@@ -144,23 +146,22 @@
 
    private List<ItemModelGenerator.Span> getSpans(TextureAtlasSprite var1) {
       int var2 = var1.getWidth();
       int var3 = var1.getHeight();
       ArrayList var4 = Lists.newArrayList();
-
-      for(int var5 = 0; var5 < var1.getFrameCount(); ++var5) {
+      var1.getUniqueFrames().forEach((var5) -> {
          for(int var6 = 0; var6 < var3; ++var6) {
             for(int var7 = 0; var7 < var2; ++var7) {
                boolean var8 = !this.isTransparent(var1, var5, var7, var6, var2, var3);
                this.checkTransition(ItemModelGenerator.SpanFacing.UP, var4, var1, var5, var7, var6, var2, var3, var8);
                this.checkTransition(ItemModelGenerator.SpanFacing.DOWN, var4, var1, var5, var7, var6, var2, var3, var8);
                this.checkTransition(ItemModelGenerator.SpanFacing.LEFT, var4, var1, var5, var7, var6, var2, var3, var8);
                this.checkTransition(ItemModelGenerator.SpanFacing.RIGHT, var4, var1, var5, var7, var6, var2, var3, var8);
             }
          }
-      }
 
+      });
       return var4;
    }
 
    private void checkTransition(ItemModelGenerator.SpanFacing var1, List<ItemModelGenerator.Span> var2, TextureAtlasSprite var3, int var4, int var5, int var6, int var7, int var8, boolean var9) {
       boolean var10 = this.isTransparent(var3, var4, var5 + var1.getXOffset(), var6 + var1.getYOffset(), var7, var8) && var9;
@@ -197,11 +198,11 @@
 
    private boolean isTransparent(TextureAtlasSprite var1, int var2, int var3, int var4, int var5, int var6) {
       return var3 >= 0 && var4 >= 0 && var3 < var5 && var4 < var6 ? var1.isTransparent(var2, var3, var4) : true;
    }
 
-   static class Span {
+   private static class Span {
       private final ItemModelGenerator.SpanFacing facing;
       private int min;
       private int max;
       private final int anchor;
 
@@ -236,11 +237,11 @@
       public int getAnchor() {
          return this.anchor;
       }
    }
 
-   static enum SpanFacing {
+   private static enum SpanFacing {
       UP(Direction.UP, 0, -1),
       DOWN(Direction.DOWN, 0, 1),
       LEFT(Direction.EAST, -1, 0),
       RIGHT(Direction.WEST, 1, 0);
 
@@ -264,10 +265,10 @@
 
       public int getYOffset() {
          return this.yOffset;
       }
 
-      private boolean isHorizontal() {
+      boolean isHorizontal() {
          return this == DOWN || this == UP;
       }
    }
 }
