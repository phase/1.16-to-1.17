--- net/minecraft/client/model/PlayerModel.java
+++ net/minecraft/client/model/PlayerModel.java
@@ -1,76 +1,78 @@
 package net.minecraft.client.model;
 
 import com.google.common.collect.ImmutableList;
 import com.google.common.collect.Iterables;
-import com.google.common.collect.Lists;
 import com.mojang.blaze3d.vertex.PoseStack;
 import com.mojang.blaze3d.vertex.VertexConsumer;
 import java.util.List;
 import java.util.Random;
 import net.minecraft.client.model.geom.ModelPart;
+import net.minecraft.client.model.geom.PartPose;
+import net.minecraft.client.model.geom.builders.CubeDeformation;
+import net.minecraft.client.model.geom.builders.CubeListBuilder;
+import net.minecraft.client.model.geom.builders.MeshDefinition;
+import net.minecraft.client.model.geom.builders.PartDefinition;
 import net.minecraft.client.renderer.RenderType;
 import net.minecraft.world.entity.EquipmentSlot;
 import net.minecraft.world.entity.HumanoidArm;
 import net.minecraft.world.entity.LivingEntity;
 
 public class PlayerModel<T extends LivingEntity> extends HumanoidModel<T> {
-   private List<ModelPart> cubes = Lists.newArrayList();
+   private static final String EAR = "ear";
+   private static final String CLOAK = "cloak";
+   private static final String LEFT_SLEEVE = "left_sleeve";
+   private static final String RIGHT_SLEEVE = "right_sleeve";
+   private static final String LEFT_PANTS = "left_pants";
+   private static final String RIGHT_PANTS = "right_pants";
+   private final List<ModelPart> parts;
    public final ModelPart leftSleeve;
    public final ModelPart rightSleeve;
    public final ModelPart leftPants;
    public final ModelPart rightPants;
    public final ModelPart jacket;
    private final ModelPart cloak;
    private final ModelPart ear;
    private final boolean slim;
 
-   public PlayerModel(float var1, boolean var2) {
-      super(RenderType::entityTranslucent, var1, 0.0F, 64, 64);
+   public PlayerModel(ModelPart var1, boolean var2) {
+      super(var1, RenderType::entityTranslucent);
       this.slim = var2;
-      this.ear = new ModelPart(this, 24, 0);
-      this.ear.addBox(-3.0F, -6.0F, -1.0F, 6.0F, 6.0F, 1.0F, var1);
-      this.cloak = new ModelPart(this, 0, 0);
-      this.cloak.setTexSize(64, 32);
-      this.cloak.addBox(-5.0F, 0.0F, -1.0F, 10.0F, 16.0F, 1.0F, var1);
-      if (var2) {
-         this.leftArm = new ModelPart(this, 32, 48);
-         this.leftArm.addBox(-1.0F, -2.0F, -2.0F, 3.0F, 12.0F, 4.0F, var1);
-         this.leftArm.setPos(5.0F, 2.5F, 0.0F);
-         this.rightArm = new ModelPart(this, 40, 16);
-         this.rightArm.addBox(-2.0F, -2.0F, -2.0F, 3.0F, 12.0F, 4.0F, var1);
-         this.rightArm.setPos(-5.0F, 2.5F, 0.0F);
-         this.leftSleeve = new ModelPart(this, 48, 48);
-         this.leftSleeve.addBox(-1.0F, -2.0F, -2.0F, 3.0F, 12.0F, 4.0F, var1 + 0.25F);
-         this.leftSleeve.setPos(5.0F, 2.5F, 0.0F);
-         this.rightSleeve = new ModelPart(this, 40, 32);
-         this.rightSleeve.addBox(-2.0F, -2.0F, -2.0F, 3.0F, 12.0F, 4.0F, var1 + 0.25F);
-         this.rightSleeve.setPos(-5.0F, 2.5F, 10.0F);
+      this.ear = var1.getChild("ear");
+      this.cloak = var1.getChild("cloak");
+      this.leftSleeve = var1.getChild("left_sleeve");
+      this.rightSleeve = var1.getChild("right_sleeve");
+      this.leftPants = var1.getChild("left_pants");
+      this.rightPants = var1.getChild("right_pants");
+      this.jacket = var1.getChild("jacket");
+      this.parts = (List)var1.getAllParts().filter((var0) -> {
+         return !var0.isEmpty();
+      }).collect(ImmutableList.toImmutableList());
+   }
+
+   public static MeshDefinition createMesh(CubeDeformation var0, boolean var1) {
+      MeshDefinition var2 = HumanoidModel.createMesh(var0, 0.0F);
+      PartDefinition var3 = var2.getRoot();
+      var3.addOrReplaceChild("ear", CubeListBuilder.create().texOffs(24, 0).addBox(-3.0F, -6.0F, -1.0F, 6.0F, 6.0F, 1.0F, var0), PartPose.ZERO);
+      var3.addOrReplaceChild("cloak", CubeListBuilder.create().texOffs(0, 0).addBox(-5.0F, 0.0F, -1.0F, 10.0F, 16.0F, 1.0F, var0, 1.0F, 0.5F), PartPose.offset(0.0F, 0.0F, 0.0F));
+      float var4 = 0.25F;
+      if (var1) {
+         var3.addOrReplaceChild("left_arm", CubeListBuilder.create().texOffs(32, 48).addBox(-1.0F, -2.0F, -2.0F, 3.0F, 12.0F, 4.0F, var0), PartPose.offset(5.0F, 2.5F, 0.0F));
+         var3.addOrReplaceChild("right_arm", CubeListBuilder.create().texOffs(40, 16).addBox(-2.0F, -2.0F, -2.0F, 3.0F, 12.0F, 4.0F, var0), PartPose.offset(-5.0F, 2.5F, 0.0F));
+         var3.addOrReplaceChild("left_sleeve", CubeListBuilder.create().texOffs(48, 48).addBox(-1.0F, -2.0F, -2.0F, 3.0F, 12.0F, 4.0F, var0.extend(0.25F)), PartPose.offset(5.0F, 2.5F, 0.0F));
+         var3.addOrReplaceChild("right_sleeve", CubeListBuilder.create().texOffs(40, 32).addBox(-2.0F, -2.0F, -2.0F, 3.0F, 12.0F, 4.0F, var0.extend(0.25F)), PartPose.offset(-5.0F, 2.5F, 0.0F));
       } else {
-         this.leftArm = new ModelPart(this, 32, 48);
-         this.leftArm.addBox(-1.0F, -2.0F, -2.0F, 4.0F, 12.0F, 4.0F, var1);
-         this.leftArm.setPos(5.0F, 2.0F, 0.0F);
-         this.leftSleeve = new ModelPart(this, 48, 48);
-         this.leftSleeve.addBox(-1.0F, -2.0F, -2.0F, 4.0F, 12.0F, 4.0F, var1 + 0.25F);
-         this.leftSleeve.setPos(5.0F, 2.0F, 0.0F);
-         this.rightSleeve = new ModelPart(this, 40, 32);
-         this.rightSleeve.addBox(-3.0F, -2.0F, -2.0F, 4.0F, 12.0F, 4.0F, var1 + 0.25F);
-         this.rightSleeve.setPos(-5.0F, 2.0F, 10.0F);
+         var3.addOrReplaceChild("left_arm", CubeListBuilder.create().texOffs(32, 48).addBox(-1.0F, -2.0F, -2.0F, 4.0F, 12.0F, 4.0F, var0), PartPose.offset(5.0F, 2.0F, 0.0F));
+         var3.addOrReplaceChild("left_sleeve", CubeListBuilder.create().texOffs(48, 48).addBox(-1.0F, -2.0F, -2.0F, 4.0F, 12.0F, 4.0F, var0.extend(0.25F)), PartPose.offset(5.0F, 2.0F, 0.0F));
+         var3.addOrReplaceChild("right_sleeve", CubeListBuilder.create().texOffs(40, 32).addBox(-3.0F, -2.0F, -2.0F, 4.0F, 12.0F, 4.0F, var0.extend(0.25F)), PartPose.offset(-5.0F, 2.0F, 0.0F));
       }
 
-      this.leftLeg = new ModelPart(this, 16, 48);
-      this.leftLeg.addBox(-2.0F, 0.0F, -2.0F, 4.0F, 12.0F, 4.0F, var1);
-      this.leftLeg.setPos(1.9F, 12.0F, 0.0F);
-      this.leftPants = new ModelPart(this, 0, 48);
-      this.leftPants.addBox(-2.0F, 0.0F, -2.0F, 4.0F, 12.0F, 4.0F, var1 + 0.25F);
-      this.leftPants.setPos(1.9F, 12.0F, 0.0F);
-      this.rightPants = new ModelPart(this, 0, 32);
-      this.rightPants.addBox(-2.0F, 0.0F, -2.0F, 4.0F, 12.0F, 4.0F, var1 + 0.25F);
-      this.rightPants.setPos(-1.9F, 12.0F, 0.0F);
-      this.jacket = new ModelPart(this, 16, 32);
-      this.jacket.addBox(-4.0F, 0.0F, -2.0F, 8.0F, 12.0F, 4.0F, var1 + 0.25F);
-      this.jacket.setPos(0.0F, 0.0F, 0.0F);
+      var3.addOrReplaceChild("left_leg", CubeListBuilder.create().texOffs(16, 48).addBox(-2.0F, 0.0F, -2.0F, 4.0F, 12.0F, 4.0F, var0), PartPose.offset(1.9F, 12.0F, 0.0F));
+      var3.addOrReplaceChild("left_pants", CubeListBuilder.create().texOffs(0, 48).addBox(-2.0F, 0.0F, -2.0F, 4.0F, 12.0F, 4.0F, var0.extend(0.25F)), PartPose.offset(1.9F, 12.0F, 0.0F));
+      var3.addOrReplaceChild("right_pants", CubeListBuilder.create().texOffs(0, 32).addBox(-2.0F, 0.0F, -2.0F, 4.0F, 12.0F, 4.0F, var0.extend(0.25F)), PartPose.offset(-1.9F, 12.0F, 0.0F));
+      var3.addOrReplaceChild("jacket", CubeListBuilder.create().texOffs(16, 32).addBox(-4.0F, 0.0F, -2.0F, 8.0F, 12.0F, 4.0F, var0.extend(0.25F)), PartPose.ZERO);
+      return var2;
    }
 
    protected Iterable<ModelPart> bodyParts() {
       return Iterables.concat(super.bodyParts(), ImmutableList.of(this.leftPants, this.rightPants, this.leftSleeve, this.rightSleeve, this.jacket));
    }
@@ -134,16 +136,8 @@
       }
 
    }
 
    public ModelPart getRandomModelPart(Random var1) {
-      return (ModelPart)this.cubes.get(var1.nextInt(this.cubes.size()));
+      return (ModelPart)this.parts.get(var1.nextInt(this.parts.size()));
    }
-
-   public void accept(ModelPart var1) {
-      if (this.cubes == null) {
-         this.cubes = Lists.newArrayList();
-      }
-
-      this.cubes.add(var1);
-   }
 }
