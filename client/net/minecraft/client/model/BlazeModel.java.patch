--- net/minecraft/client/model/BlazeModel.java
+++ net/minecraft/client/model/BlazeModel.java
@@ -1,36 +1,79 @@
 package net.minecraft.client.model;
 
-import com.google.common.collect.ImmutableList;
-import com.google.common.collect.ImmutableList.Builder;
 import java.util.Arrays;
 import net.minecraft.client.model.geom.ModelPart;
+import net.minecraft.client.model.geom.PartPose;
+import net.minecraft.client.model.geom.builders.CubeListBuilder;
+import net.minecraft.client.model.geom.builders.LayerDefinition;
+import net.minecraft.client.model.geom.builders.MeshDefinition;
+import net.minecraft.client.model.geom.builders.PartDefinition;
 import net.minecraft.util.Mth;
 import net.minecraft.world.entity.Entity;
 
-public class BlazeModel<T extends Entity> extends ListModel<T> {
+public class BlazeModel<T extends Entity> extends HierarchicalModel<T> {
+   private final ModelPart root;
    private final ModelPart[] upperBodyParts;
-   private final ModelPart head = new ModelPart(this, 0, 0);
-   private final ImmutableList<ModelPart> parts;
+   private final ModelPart head;
 
-   public BlazeModel() {
-      this.head.addBox(-4.0F, -4.0F, -4.0F, 8.0F, 8.0F, 8.0F);
+   public BlazeModel(ModelPart var1) {
+      this.root = var1;
+      this.head = var1.getChild("head");
       this.upperBodyParts = new ModelPart[12];
+      Arrays.setAll(this.upperBodyParts, (var1x) -> {
+         return var1.getChild(getPartName(var1x));
+      });
+   }
 
-      for(int var1 = 0; var1 < this.upperBodyParts.length; ++var1) {
-         this.upperBodyParts[var1] = new ModelPart(this, 0, 16);
-         this.upperBodyParts[var1].addBox(0.0F, 0.0F, 0.0F, 2.0F, 8.0F, 2.0F);
+   private static String getPartName(int var0) {
+      return "part" + var0;
+   }
+
+   public static LayerDefinition createBodyLayer() {
+      MeshDefinition var0 = new MeshDefinition();
+      PartDefinition var1 = var0.getRoot();
+      var1.addOrReplaceChild("head", CubeListBuilder.create().texOffs(0, 0).addBox(-4.0F, -4.0F, -4.0F, 8.0F, 8.0F, 8.0F), PartPose.ZERO);
+      float var2 = 0.0F;
+      CubeListBuilder var3 = CubeListBuilder.create().texOffs(0, 16).addBox(0.0F, 0.0F, 0.0F, 2.0F, 8.0F, 2.0F);
+
+      int var4;
+      float var5;
+      float var6;
+      float var7;
+      for(var4 = 0; var4 < 4; ++var4) {
+         var5 = Mth.cos(var2) * 9.0F;
+         var6 = -2.0F + Mth.cos((float)(var4 * 2) * 0.25F);
+         var7 = Mth.sin(var2) * 9.0F;
+         var1.addOrReplaceChild(getPartName(var4), var3, PartPose.offset(var5, var6, var7));
+         ++var2;
       }
 
-      Builder var2 = ImmutableList.builder();
-      var2.add(this.head);
-      var2.addAll(Arrays.asList(this.upperBodyParts));
-      this.parts = var2.build();
+      var2 = 0.7853982F;
+
+      for(var4 = 4; var4 < 8; ++var4) {
+         var5 = Mth.cos(var2) * 7.0F;
+         var6 = 2.0F + Mth.cos((float)(var4 * 2) * 0.25F);
+         var7 = Mth.sin(var2) * 7.0F;
+         var1.addOrReplaceChild(getPartName(var4), var3, PartPose.offset(var5, var6, var7));
+         ++var2;
+      }
+
+      var2 = 0.47123894F;
+
+      for(var4 = 8; var4 < 12; ++var4) {
+         var5 = Mth.cos(var2) * 5.0F;
+         var6 = 11.0F + Mth.cos((float)var4 * 1.5F * 0.5F);
+         var7 = Mth.sin(var2) * 5.0F;
+         var1.addOrReplaceChild(getPartName(var4), var3, PartPose.offset(var5, var6, var7));
+         ++var2;
+      }
+
+      return LayerDefinition.create(var0, 64, 32);
    }
 
-   public Iterable<ModelPart> parts() {
-      return this.parts;
+   public ModelPart root() {
+      return this.root;
    }
 
    public void setupAnim(T var1, float var2, float var3, float var4, float var5, float var6) {
       float var7 = var4 * 3.1415927F * -0.1F;
 
