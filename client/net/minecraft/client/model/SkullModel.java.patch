--- net/minecraft/client/model/SkullModel.java
+++ net/minecraft/client/model/SkullModel.java
@@ -1,32 +1,49 @@
 package net.minecraft.client.model;
 
 import com.mojang.blaze3d.vertex.PoseStack;
 import com.mojang.blaze3d.vertex.VertexConsumer;
 import net.minecraft.client.model.geom.ModelPart;
-import net.minecraft.client.renderer.RenderType;
+import net.minecraft.client.model.geom.PartPose;
+import net.minecraft.client.model.geom.builders.CubeDeformation;
+import net.minecraft.client.model.geom.builders.CubeListBuilder;
+import net.minecraft.client.model.geom.builders.LayerDefinition;
+import net.minecraft.client.model.geom.builders.MeshDefinition;
+import net.minecraft.client.model.geom.builders.PartDefinition;
 
-public class SkullModel extends Model {
+public class SkullModel extends SkullModelBase {
+   private final ModelPart root;
    protected final ModelPart head;
 
-   public SkullModel() {
-      this(0, 35, 64, 64);
+   public SkullModel(ModelPart var1) {
+      this.root = var1;
+      this.head = var1.getChild("head");
    }
 
-   public SkullModel(int var1, int var2, int var3, int var4) {
-      super(RenderType::entityTranslucent);
-      this.texWidth = var3;
-      this.texHeight = var4;
-      this.head = new ModelPart(this, var1, var2);
-      this.head.addBox(-4.0F, -8.0F, -4.0F, 8.0F, 8.0F, 8.0F, 0.0F);
-      this.head.setPos(0.0F, 0.0F, 0.0F);
+   public static MeshDefinition createHeadModel() {
+      MeshDefinition var0 = new MeshDefinition();
+      PartDefinition var1 = var0.getRoot();
+      var1.addOrReplaceChild("head", CubeListBuilder.create().texOffs(0, 0).addBox(-4.0F, -8.0F, -4.0F, 8.0F, 8.0F, 8.0F), PartPose.ZERO);
+      return var0;
    }
 
+   public static LayerDefinition createHumanoidHeadLayer() {
+      MeshDefinition var0 = createHeadModel();
+      PartDefinition var1 = var0.getRoot();
+      var1.getChild("head").addOrReplaceChild("hat", CubeListBuilder.create().texOffs(32, 0).addBox(-4.0F, -8.0F, -4.0F, 8.0F, 8.0F, 8.0F, new CubeDeformation(0.25F)), PartPose.ZERO);
+      return LayerDefinition.create(var0, 64, 64);
+   }
+
+   public static LayerDefinition createMobHeadLayer() {
+      MeshDefinition var0 = createHeadModel();
+      return LayerDefinition.create(var0, 64, 32);
+   }
+
    public void setupAnim(float var1, float var2, float var3) {
       this.head.yRot = var2 * 0.017453292F;
       this.head.xRot = var3 * 0.017453292F;
    }
 
    public void renderToBuffer(PoseStack var1, VertexConsumer var2, int var3, int var4, float var5, float var6, float var7, float var8) {
-      this.head.render(var1, var2, var3, var4, var5, var6, var7, var8);
+      this.root.render(var1, var2, var3, var4, var5, var6, var7, var8);
    }
 }
