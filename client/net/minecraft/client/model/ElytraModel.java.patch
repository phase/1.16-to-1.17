--- net/minecraft/client/model/ElytraModel.java
+++ net/minecraft/client/model/ElytraModel.java
@@ -1,24 +1,37 @@
 package net.minecraft.client.model;
 
 import com.google.common.collect.ImmutableList;
 import net.minecraft.client.model.geom.ModelPart;
+import net.minecraft.client.model.geom.PartPose;
+import net.minecraft.client.model.geom.builders.CubeDeformation;
+import net.minecraft.client.model.geom.builders.CubeListBuilder;
+import net.minecraft.client.model.geom.builders.LayerDefinition;
+import net.minecraft.client.model.geom.builders.MeshDefinition;
+import net.minecraft.client.model.geom.builders.PartDefinition;
 import net.minecraft.client.player.AbstractClientPlayer;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.phys.Vec3;
 
 public class ElytraModel<T extends LivingEntity> extends AgeableListModel<T> {
    private final ModelPart rightWing;
-   private final ModelPart leftWing = new ModelPart(this, 22, 0);
+   private final ModelPart leftWing;
 
-   public ElytraModel() {
-      this.leftWing.addBox(-10.0F, 0.0F, 0.0F, 10.0F, 20.0F, 2.0F, 1.0F);
-      this.rightWing = new ModelPart(this, 22, 0);
-      this.rightWing.mirror = true;
-      this.rightWing.addBox(0.0F, 0.0F, 0.0F, 10.0F, 20.0F, 2.0F, 1.0F);
+   public ElytraModel(ModelPart var1) {
+      this.leftWing = var1.getChild("left_wing");
+      this.rightWing = var1.getChild("right_wing");
    }
 
+   public static LayerDefinition createLayer() {
+      MeshDefinition var0 = new MeshDefinition();
+      PartDefinition var1 = var0.getRoot();
+      CubeDeformation var2 = new CubeDeformation(1.0F);
+      var1.addOrReplaceChild("left_wing", CubeListBuilder.create().texOffs(22, 0).addBox(-10.0F, 0.0F, 0.0F, 10.0F, 20.0F, 2.0F, var2), PartPose.offsetAndRotation(5.0F, 0.0F, 0.0F, 0.2617994F, 0.0F, -0.2617994F));
+      var1.addOrReplaceChild("right_wing", CubeListBuilder.create().texOffs(22, 0).mirror().addBox(0.0F, 0.0F, 0.0F, 10.0F, 20.0F, 2.0F, var2), PartPose.offsetAndRotation(-5.0F, 0.0F, 0.0F, 0.2617994F, 0.0F, 0.2617994F));
+      return LayerDefinition.create(var0, 64, 32);
+   }
+
    protected Iterable<ModelPart> headParts() {
       return ImmutableList.of();
    }
 
    protected Iterable<ModelPart> bodyParts() {
@@ -45,11 +58,10 @@
          var8 = -0.7853982F;
          var9 = 3.0F;
          var10 = 0.08726646F;
       }
 
-      this.leftWing.x = 5.0F;
       this.leftWing.y = var9;
       if (var1 instanceof AbstractClientPlayer) {
          AbstractClientPlayer var14 = (AbstractClientPlayer)var1;
          var14.elytraRotX = (float)((double)var14.elytraRotX + (double)(var7 - var14.elytraRotX) * 0.1D);
          var14.elytraRotY = (float)((double)var14.elytraRotY + (double)(var10 - var14.elytraRotY) * 0.1D);
@@ -61,11 +73,10 @@
          this.leftWing.xRot = var7;
          this.leftWing.zRot = var8;
          this.leftWing.yRot = var10;
       }
 
-      this.rightWing.x = -this.leftWing.x;
       this.rightWing.yRot = -this.leftWing.yRot;
       this.rightWing.y = this.leftWing.y;
       this.rightWing.xRot = this.leftWing.xRot;
       this.rightWing.zRot = -this.leftWing.zRot;
    }
