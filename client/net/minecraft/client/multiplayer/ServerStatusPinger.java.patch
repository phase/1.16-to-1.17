--- net/minecraft/client/multiplayer/ServerStatusPinger.java
+++ net/minecraft/client/multiplayer/ServerStatusPinger.java
@@ -159,11 +159,11 @@
    }
 
    private void pingLegacyServer(final ServerData var1) {
       final ServerAddress var2 = ServerAddress.parseString(var1.ip);
       ((Bootstrap)((Bootstrap)((Bootstrap)(new Bootstrap()).group((EventLoopGroup)Connection.NETWORK_WORKER_GROUP.get())).handler(new ChannelInitializer<Channel>() {
-         protected void initChannel(Channel var1x) throws Exception {
+         protected void initChannel(Channel var1x) {
             try {
                var1x.config().setOption(ChannelOption.TCP_NODELAY, true);
             } catch (ChannelException var3) {
             }
 
@@ -205,11 +205,11 @@
                   } finally {
                      var2x.release();
                   }
                }
 
-               protected void channelRead0(ChannelHandlerContext var1x, ByteBuf var2x) throws Exception {
+               protected void channelRead0(ChannelHandlerContext var1x, ByteBuf var2x) {
                   short var3 = var2x.readUnsignedByte();
                   if (var3 == 255) {
                      String var4 = new String(var2x.readBytes(var2x.readShort() * 2).array(), StandardCharsets.UTF_16BE);
                      String[] var5 = (String[])Iterables.toArray(ServerStatusPinger.SPLITTER.split(var4), String.class);
                      if ("\u00a71".equals(var5[0])) {
@@ -226,11 +226,11 @@
                   }
 
                   var1x.close();
                }
 
-               public void exceptionCaught(ChannelHandlerContext var1x, Throwable var2x) throws Exception {
+               public void exceptionCaught(ChannelHandlerContext var1x, Throwable var2x) {
                   var1x.close();
                }
             }});
          }
       })).channel(NioSocketChannel.class)).connect(var2.getHost(), var2.getPort());
