--- net/minecraft/client/particle/DripParticle.java
+++ net/minecraft/client/particle/DripParticle.java
@@ -3,12 +3,14 @@
 import net.minecraft.client.multiplayer.ClientLevel;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.particles.ParticleOptions;
 import net.minecraft.core.particles.ParticleTypes;
 import net.minecraft.core.particles.SimpleParticleType;
+import net.minecraft.sounds.SoundEvent;
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.sounds.SoundSource;
+import net.minecraft.util.Mth;
 import net.minecraft.world.level.material.Fluid;
 import net.minecraft.world.level.material.FluidState;
 import net.minecraft.world.level.material.Fluids;
 
 public class DripParticle extends TextureSheetParticle {
@@ -20,10 +22,14 @@
       this.setSize(0.01F, 0.01F);
       this.gravity = 0.06F;
       this.type = var8;
    }
 
+   protected Fluid getType() {
+      return this.type;
+   }
+
    public ParticleRenderType getRenderType() {
       return ParticleRenderType.PARTICLE_SHEET_OPAQUE;
    }
 
    public int getLightColor(float var1) {
@@ -130,10 +136,69 @@
          var15.pickSprite(this.sprite);
          return var15;
       }
    }
 
+   public static class DripstoneLavaFallProvider implements ParticleProvider<SimpleParticleType> {
+      protected final SpriteSet sprite;
+
+      public DripstoneLavaFallProvider(SpriteSet var1) {
+         this.sprite = var1;
+      }
+
+      public Particle createParticle(SimpleParticleType var1, ClientLevel var2, double var3, double var5, double var7, double var9, double var11, double var13) {
+         DripParticle.DripstoneFallAndLandParticle var15 = new DripParticle.DripstoneFallAndLandParticle(var2, var3, var5, var7, Fluids.LAVA, ParticleTypes.LANDING_LAVA);
+         var15.setColor(1.0F, 0.2857143F, 0.083333336F);
+         var15.pickSprite(this.sprite);
+         return var15;
+      }
+   }
+
+   public static class DripstoneLavaHangProvider implements ParticleProvider<SimpleParticleType> {
+      protected final SpriteSet sprite;
+
+      public DripstoneLavaHangProvider(SpriteSet var1) {
+         this.sprite = var1;
+      }
+
+      public Particle createParticle(SimpleParticleType var1, ClientLevel var2, double var3, double var5, double var7, double var9, double var11, double var13) {
+         DripParticle.CoolingDripHangParticle var15 = new DripParticle.CoolingDripHangParticle(var2, var3, var5, var7, Fluids.LAVA, ParticleTypes.FALLING_DRIPSTONE_LAVA);
+         var15.pickSprite(this.sprite);
+         return var15;
+      }
+   }
+
+   public static class DripstoneWaterFallProvider implements ParticleProvider<SimpleParticleType> {
+      protected final SpriteSet sprite;
+
+      public DripstoneWaterFallProvider(SpriteSet var1) {
+         this.sprite = var1;
+      }
+
+      public Particle createParticle(SimpleParticleType var1, ClientLevel var2, double var3, double var5, double var7, double var9, double var11, double var13) {
+         DripParticle.DripstoneFallAndLandParticle var15 = new DripParticle.DripstoneFallAndLandParticle(var2, var3, var5, var7, Fluids.WATER, ParticleTypes.SPLASH);
+         var15.setColor(0.2F, 0.3F, 1.0F);
+         var15.pickSprite(this.sprite);
+         return var15;
+      }
+   }
+
+   public static class DripstoneWaterHangProvider implements ParticleProvider<SimpleParticleType> {
+      protected final SpriteSet sprite;
+
+      public DripstoneWaterHangProvider(SpriteSet var1) {
+         this.sprite = var1;
+      }
+
+      public Particle createParticle(SimpleParticleType var1, ClientLevel var2, double var3, double var5, double var7, double var9, double var11, double var13) {
+         DripParticle.DripHangParticle var15 = new DripParticle.DripHangParticle(var2, var3, var5, var7, Fluids.WATER, ParticleTypes.FALLING_DRIPSTONE_WATER);
+         var15.setColor(0.2F, 0.3F, 1.0F);
+         var15.pickSprite(this.sprite);
+         return var15;
+      }
+   }
+
    public static class HoneyLandProvider implements ParticleProvider<SimpleParticleType> {
       protected final SpriteSet sprite;
 
       public HoneyLandProvider(SpriteSet var1) {
          this.sprite = var1;
@@ -274,20 +339,38 @@
          }
 
       }
    }
 
+   static class DripstoneFallAndLandParticle extends DripParticle.FallAndLandParticle {
+      private DripstoneFallAndLandParticle(ClientLevel var1, double var2, double var4, double var6, Fluid var8, ParticleOptions var9) {
+         super(var1, var2, var4, var6, var8, var9, null);
+      }
+
+      protected void postMoveUpdate() {
+         if (this.onGround) {
+            this.remove();
+            this.level.addParticle(this.landParticle, this.x, this.y, this.z, 0.0D, 0.0D, 0.0D);
+            SoundEvent var1 = this.getType() == Fluids.LAVA ? SoundEvents.POINTED_DRIPSTONE_DRIP_LAVA : SoundEvents.POINTED_DRIPSTONE_DRIP_WATER;
+            float var2 = Mth.randomBetween(this.random, 0.3F, 1.0F);
+            this.level.playLocalSound(this.x, this.y, this.z, var1, SoundSource.BLOCKS, var2, 1.0F, false);
+         }
+
+      }
+   }
+
    static class HoneyFallAndLandParticle extends DripParticle.FallAndLandParticle {
       private HoneyFallAndLandParticle(ClientLevel var1, double var2, double var4, double var6, Fluid var8, ParticleOptions var9) {
          super(var1, var2, var4, var6, var8, var9, null);
       }
 
       protected void postMoveUpdate() {
          if (this.onGround) {
             this.remove();
             this.level.addParticle(this.landParticle, this.x, this.y, this.z, 0.0D, 0.0D, 0.0D);
-            this.level.playLocalSound(this.x + 0.5D, this.y, this.z + 0.5D, SoundEvents.BEEHIVE_DRIP, SoundSource.BLOCKS, 0.3F + this.level.random.nextFloat() * 2.0F / 3.0F, 1.0F, false);
+            float var1 = Mth.randomBetween(this.random, 0.3F, 1.0F);
+            this.level.playLocalSound(this.x, this.y, this.z, SoundEvents.BEEHIVE_DRIP, SoundSource.BLOCKS, var1, 1.0F, false);
          }
 
       }
    }
 
