--- net/minecraft/client/particle/ParticleRenderType.java
+++ net/minecraft/client/particle/ParticleRenderType.java
@@ -3,21 +3,23 @@
 import com.mojang.blaze3d.platform.GlStateManager;
 import com.mojang.blaze3d.systems.RenderSystem;
 import com.mojang.blaze3d.vertex.BufferBuilder;
 import com.mojang.blaze3d.vertex.DefaultVertexFormat;
 import com.mojang.blaze3d.vertex.Tesselator;
+import com.mojang.blaze3d.vertex.VertexFormat;
+import net.minecraft.client.renderer.GameRenderer;
 import net.minecraft.client.renderer.texture.TextureAtlas;
 import net.minecraft.client.renderer.texture.TextureManager;
 
 public interface ParticleRenderType {
    ParticleRenderType TERRAIN_SHEET = new ParticleRenderType() {
       public void begin(BufferBuilder var1, TextureManager var2) {
          RenderSystem.enableBlend();
          RenderSystem.defaultBlendFunc();
          RenderSystem.depthMask(true);
-         var2.bind(TextureAtlas.LOCATION_BLOCKS);
-         var1.begin(7, DefaultVertexFormat.PARTICLE);
+         RenderSystem.setShaderTexture(0, TextureAtlas.LOCATION_BLOCKS);
+         var1.begin(VertexFormat.Mode.QUADS, DefaultVertexFormat.PARTICLE);
       }
 
       public void end(Tesselator var1) {
          var1.end();
       }
@@ -28,12 +30,13 @@
    };
    ParticleRenderType PARTICLE_SHEET_OPAQUE = new ParticleRenderType() {
       public void begin(BufferBuilder var1, TextureManager var2) {
          RenderSystem.disableBlend();
          RenderSystem.depthMask(true);
-         var2.bind(TextureAtlas.LOCATION_PARTICLES);
-         var1.begin(7, DefaultVertexFormat.PARTICLE);
+         RenderSystem.setShader(GameRenderer::getParticleShader);
+         RenderSystem.setShaderTexture(0, TextureAtlas.LOCATION_PARTICLES);
+         var1.begin(VertexFormat.Mode.QUADS, DefaultVertexFormat.PARTICLE);
       }
 
       public void end(Tesselator var1) {
          var1.end();
       }
@@ -43,15 +46,14 @@
       }
    };
    ParticleRenderType PARTICLE_SHEET_TRANSLUCENT = new ParticleRenderType() {
       public void begin(BufferBuilder var1, TextureManager var2) {
          RenderSystem.depthMask(true);
-         var2.bind(TextureAtlas.LOCATION_PARTICLES);
+         RenderSystem.setShaderTexture(0, TextureAtlas.LOCATION_PARTICLES);
          RenderSystem.enableBlend();
-         RenderSystem.blendFuncSeparate(GlStateManager.SourceFactor.SRC_ALPHA, GlStateManager.DestFactor.ONE_MINUS_SRC_ALPHA, GlStateManager.SourceFactor.ONE, GlStateManager.DestFactor.ONE_MINUS_SRC_ALPHA);
-         RenderSystem.alphaFunc(516, 0.003921569F);
-         var1.begin(7, DefaultVertexFormat.PARTICLE);
+         RenderSystem.blendFunc(GlStateManager.SourceFactor.SRC_ALPHA, GlStateManager.DestFactor.ONE_MINUS_SRC_ALPHA);
+         var1.begin(VertexFormat.Mode.QUADS, DefaultVertexFormat.PARTICLE);
       }
 
       public void end(Tesselator var1) {
          var1.end();
       }
@@ -62,12 +64,12 @@
    };
    ParticleRenderType PARTICLE_SHEET_LIT = new ParticleRenderType() {
       public void begin(BufferBuilder var1, TextureManager var2) {
          RenderSystem.disableBlend();
          RenderSystem.depthMask(true);
-         var2.bind(TextureAtlas.LOCATION_PARTICLES);
-         var1.begin(7, DefaultVertexFormat.PARTICLE);
+         RenderSystem.setShaderTexture(0, TextureAtlas.LOCATION_PARTICLES);
+         var1.begin(VertexFormat.Mode.QUADS, DefaultVertexFormat.PARTICLE);
       }
 
       public void end(Tesselator var1) {
          var1.end();
       }
