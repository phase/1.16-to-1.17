--- net/minecraft/client/particle/ParticleEngine.java
+++ net/minecraft/client/particle/ParticleEngine.java
@@ -100,10 +100,11 @@
       this.register(ParticleTypes.FALLING_LAVA, (ParticleEngine.SpriteParticleRegistration)(DripParticle.LavaFallProvider::new));
       this.register(ParticleTypes.LANDING_LAVA, (ParticleEngine.SpriteParticleRegistration)(DripParticle.LavaLandProvider::new));
       this.register(ParticleTypes.DRIPPING_WATER, (ParticleEngine.SpriteParticleRegistration)(DripParticle.WaterHangProvider::new));
       this.register(ParticleTypes.FALLING_WATER, (ParticleEngine.SpriteParticleRegistration)(DripParticle.WaterFallProvider::new));
       this.register(ParticleTypes.DUST, DustParticle.Provider::new);
+      this.register(ParticleTypes.DUST_COLOR_TRANSITION, DustColorTransitionParticle.Provider::new);
       this.register(ParticleTypes.EFFECT, (ParticleEngine.SpriteParticleRegistration)(SpellParticle.Provider::new));
       this.register(ParticleTypes.ELDER_GUARDIAN, (ParticleProvider)(new MobAppearanceParticle.Provider()));
       this.register(ParticleTypes.ENCHANTED_HIT, (ParticleEngine.SpriteParticleRegistration)(CritParticle.MagicProvider::new));
       this.register(ParticleTypes.ENCHANT, (ParticleEngine.SpriteParticleRegistration)(EnchantmentTableParticle.Provider::new));
       this.register(ParticleTypes.END_ROD, (ParticleEngine.SpriteParticleRegistration)(EndRodParticle.Provider::new));
@@ -131,10 +132,11 @@
       this.register(ParticleTypes.POOF, (ParticleEngine.SpriteParticleRegistration)(ExplodeParticle.Provider::new));
       this.register(ParticleTypes.PORTAL, (ParticleEngine.SpriteParticleRegistration)(PortalParticle.Provider::new));
       this.register(ParticleTypes.RAIN, (ParticleEngine.SpriteParticleRegistration)(WaterDropParticle.Provider::new));
       this.register(ParticleTypes.SMOKE, (ParticleEngine.SpriteParticleRegistration)(SmokeParticle.Provider::new));
       this.register(ParticleTypes.SNEEZE, (ParticleEngine.SpriteParticleRegistration)(PlayerCloudParticle.SneezeProvider::new));
+      this.register(ParticleTypes.SNOWFLAKE, (ParticleEngine.SpriteParticleRegistration)(SnowflakeParticle.Provider::new));
       this.register(ParticleTypes.SPIT, (ParticleEngine.SpriteParticleRegistration)(SpitParticle.Provider::new));
       this.register(ParticleTypes.SWEEP_ATTACK, (ParticleEngine.SpriteParticleRegistration)(AttackSweepParticle.Provider::new));
       this.register(ParticleTypes.TOTEM_OF_UNDYING, (ParticleEngine.SpriteParticleRegistration)(TotemParticle.Provider::new));
       this.register(ParticleTypes.SQUID_INK, (ParticleEngine.SpriteParticleRegistration)(SquidInkParticle.Provider::new));
       this.register(ParticleTypes.UNDERWATER, (ParticleEngine.SpriteParticleRegistration)(SuspendedParticle.UnderwaterProvider::new));
@@ -142,18 +144,28 @@
       this.register(ParticleTypes.WITCH, (ParticleEngine.SpriteParticleRegistration)(SpellParticle.WitchProvider::new));
       this.register(ParticleTypes.DRIPPING_HONEY, (ParticleEngine.SpriteParticleRegistration)(DripParticle.HoneyHangProvider::new));
       this.register(ParticleTypes.FALLING_HONEY, (ParticleEngine.SpriteParticleRegistration)(DripParticle.HoneyFallProvider::new));
       this.register(ParticleTypes.LANDING_HONEY, (ParticleEngine.SpriteParticleRegistration)(DripParticle.HoneyLandProvider::new));
       this.register(ParticleTypes.FALLING_NECTAR, (ParticleEngine.SpriteParticleRegistration)(DripParticle.NectarFallProvider::new));
+      this.register(ParticleTypes.FALLING_SPORE_BLOSSOM, (ParticleEngine.SpriteParticleRegistration)(DripParticle.SporeBlossomFallProvider::new));
+      this.register(ParticleTypes.SPORE_BLOSSOM_AIR, (ParticleEngine.SpriteParticleRegistration)(SuspendedParticle.SporeBlossomAirProvider::new));
       this.register(ParticleTypes.ASH, (ParticleEngine.SpriteParticleRegistration)(AshParticle.Provider::new));
       this.register(ParticleTypes.CRIMSON_SPORE, (ParticleEngine.SpriteParticleRegistration)(SuspendedParticle.CrimsonSporeProvider::new));
       this.register(ParticleTypes.WARPED_SPORE, (ParticleEngine.SpriteParticleRegistration)(SuspendedParticle.WarpedSporeProvider::new));
       this.register(ParticleTypes.DRIPPING_OBSIDIAN_TEAR, (ParticleEngine.SpriteParticleRegistration)(DripParticle.ObsidianTearHangProvider::new));
       this.register(ParticleTypes.FALLING_OBSIDIAN_TEAR, (ParticleEngine.SpriteParticleRegistration)(DripParticle.ObsidianTearFallProvider::new));
       this.register(ParticleTypes.LANDING_OBSIDIAN_TEAR, (ParticleEngine.SpriteParticleRegistration)(DripParticle.ObsidianTearLandProvider::new));
       this.register(ParticleTypes.REVERSE_PORTAL, (ParticleEngine.SpriteParticleRegistration)(ReversePortalParticle.ReversePortalProvider::new));
       this.register(ParticleTypes.WHITE_ASH, (ParticleEngine.SpriteParticleRegistration)(WhiteAshParticle.Provider::new));
+      this.register(ParticleTypes.SMALL_FLAME, (ParticleEngine.SpriteParticleRegistration)(FlameParticle.SmallFlameProvider::new));
+      this.register(ParticleTypes.DRIPPING_DRIPSTONE_WATER, (ParticleEngine.SpriteParticleRegistration)(DripParticle.DripstoneWaterHangProvider::new));
+      this.register(ParticleTypes.FALLING_DRIPSTONE_WATER, (ParticleEngine.SpriteParticleRegistration)(DripParticle.DripstoneWaterFallProvider::new));
+      this.register(ParticleTypes.DRIPPING_DRIPSTONE_LAVA, (ParticleEngine.SpriteParticleRegistration)(DripParticle.DripstoneLavaHangProvider::new));
+      this.register(ParticleTypes.FALLING_DRIPSTONE_LAVA, (ParticleEngine.SpriteParticleRegistration)(DripParticle.DripstoneLavaFallProvider::new));
+      this.register(ParticleTypes.VIBRATION, VibrationSignalParticle.Provider::new);
+      this.register(ParticleTypes.GLOW_SQUID_INK, (ParticleEngine.SpriteParticleRegistration)(SquidInkParticle.GlowInkProvider::new));
+      this.register(ParticleTypes.GLOW, (ParticleEngine.SpriteParticleRegistration)(GlowParticle.Provider::new));
    }
 
    private <T extends ParticleOptions> void register(ParticleType<T> var1, ParticleProvider<T> var2) {
       this.providers.put(Registry.PARTICLE_TYPE.getId(var1), var2);
    }
@@ -447,11 +459,11 @@
                      double var29 = ((double)var25 + 0.5D) / (double)var22;
                      double var31 = ((double)var26 + 0.5D) / (double)var23;
                      double var33 = var27 * var15 + var3x;
                      double var35 = var29 * var17 + var5;
                      double var37 = var31 * var19 + var7;
-                     this.add((new TerrainParticle(this.level, (double)var1.getX() + var33, (double)var1.getY() + var35, (double)var1.getZ() + var37, var27 - 0.5D, var29 - 0.5D, var31 - 0.5D, var2)).init(var1));
+                     this.add(new TerrainParticle(this.level, (double)var1.getX() + var33, (double)var1.getY() + var35, (double)var1.getZ() + var37, var27 - 0.5D, var29 - 0.5D, var31 - 0.5D, var2, var1));
                   }
                }
             }
 
          });
@@ -491,11 +503,11 @@
 
          if (var2 == Direction.EAST) {
             var9 = (double)var4 + var8.maxX + 0.10000000149011612D;
          }
 
-         this.add((new TerrainParticle(this.level, var9, var11, var13, 0.0D, 0.0D, 0.0D, var3)).init(var1).setPower(0.2F).scale(0.6F));
+         this.add((new TerrainParticle(this.level, var9, var11, var13, 0.0D, 0.0D, 0.0D, var3, var1)).setPower(0.2F).scale(0.6F));
       }
    }
 
    public String countParticles() {
       return String.valueOf(this.particles.values().stream().mapToInt(Collection::size).sum());
