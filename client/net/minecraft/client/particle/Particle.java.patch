--- net/minecraft/client/particle/Particle.java
+++ net/minecraft/client/particle/Particle.java
@@ -1,14 +1,16 @@
 package net.minecraft.client.particle;
 
 import com.mojang.blaze3d.vertex.VertexConsumer;
+import java.util.Optional;
 import java.util.Random;
 import java.util.stream.Stream;
 import net.minecraft.client.Camera;
 import net.minecraft.client.multiplayer.ClientLevel;
 import net.minecraft.client.renderer.LevelRenderer;
 import net.minecraft.core.BlockPos;
+import net.minecraft.core.particles.ParticleGroup;
 import net.minecraft.util.Mth;
 import net.minecraft.util.RewindableStream;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.Vec3;
@@ -41,10 +43,12 @@
    protected float gCol;
    protected float bCol;
    protected float alpha;
    protected float roll;
    protected float oRoll;
+   protected float friction;
+   protected boolean speedUpWhenYMotionIsBlocked;
 
    protected Particle(ClientLevel var1, double var2, double var4, double var6) {
       this.bb = INITIAL_AABB;
       this.hasPhysics = true;
       this.bbWidth = 0.6F;
@@ -52,10 +56,12 @@
       this.random = new Random();
       this.rCol = 1.0F;
       this.gCol = 1.0F;
       this.bCol = 1.0F;
       this.alpha = 1.0F;
+      this.friction = 0.98F;
+      this.speedUpWhenYMotionIsBlocked = false;
       this.level = var1;
       this.setSize(0.2F, 0.2F);
       this.setPos(var2, var4, var6);
       this.xo = var2;
       this.yo = var4;
@@ -80,10 +86,16 @@
       this.yd = (this.yd - 0.10000000149011612D) * (double)var1 + 0.10000000149011612D;
       this.zd *= (double)var1;
       return this;
    }
 
+   public void setParticleSpeed(double var1, double var3, double var5) {
+      this.xd = var1;
+      this.yd = var3;
+      this.zd = var5;
+   }
+
    public Particle scale(float var1) {
       this.setSize(0.2F * var1, 0.2F * var1);
       return this;
    }
 
@@ -112,13 +124,18 @@
       if (this.age++ >= this.lifetime) {
          this.remove();
       } else {
          this.yd -= 0.04D * (double)this.gravity;
          this.move(this.xd, this.yd, this.zd);
-         this.xd *= 0.9800000190734863D;
-         this.yd *= 0.9800000190734863D;
-         this.zd *= 0.9800000190734863D;
+         if (this.speedUpWhenYMotionIsBlocked && this.y == this.yo) {
+            this.xd *= 1.1D;
+            this.zd *= 1.1D;
+         }
+
+         this.xd *= (double)this.friction;
+         this.yd *= (double)this.friction;
+         this.zd *= (double)this.friction;
          if (this.onGround) {
             this.xd *= 0.699999988079071D;
             this.zd *= 0.699999988079071D;
          }
 
@@ -211,6 +228,10 @@
    }
 
    public void setBoundingBox(AABB var1) {
       this.bb = var1;
    }
+
+   public Optional<ParticleGroup> getParticleGroup() {
+      return Optional.empty();
+   }
 }
