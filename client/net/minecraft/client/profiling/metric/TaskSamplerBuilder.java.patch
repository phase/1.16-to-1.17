--- net/minecraft/client/profiling/metric/TaskSamplerBuilder.java
+++ net/minecraft/client/profiling/metric/TaskSamplerBuilder.java
@@ -1,0 +1,33 @@
+package net.minecraft.client.profiling.metric;
+
+import java.util.function.Supplier;
+import net.minecraft.util.profiling.ActiveProfiler;
+import net.minecraft.util.profiling.ProfileCollector;
+import net.minecraft.util.profiling.registry.Metric;
+import org.apache.commons.lang3.StringUtils;
+
+public class TaskSamplerBuilder {
+   private final Metric metric;
+   private final Supplier<ProfileCollector> profiler;
+
+   public TaskSamplerBuilder(Metric var1, Supplier<ProfileCollector> var2) {
+      this.metric = var1;
+      this.profiler = var2;
+   }
+
+   public TaskSamplerBuilder(String var1, Supplier<ProfileCollector> var2) {
+      this(new Metric(var1), var2);
+   }
+
+   public MetricSampler forPath(String... var1) {
+      if (var1.length == 0) {
+         throw new IllegalArgumentException("Expected at least one path node, got no values");
+      } else {
+         String var2 = StringUtils.join(var1, '\u001e');
+         return MetricSampler.create(this.metric, () -> {
+            ActiveProfiler.PathEntry var2x = ((ProfileCollector)this.profiler.get()).getEntry(var2);
+            return var2x == null ? -1.0D : (double)var2x.getDuration() / 1000000.0D;
+         });
+      }
+   }
+}
