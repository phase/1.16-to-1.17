--- net/minecraft/client/sounds/SoundEngine.java
+++ net/minecraft/client/sounds/SoundEngine.java
@@ -10,10 +10,11 @@
 import com.mojang.blaze3d.audio.Listener;
 import com.mojang.math.Vector3f;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
+import java.util.Objects;
 import java.util.Set;
 import java.util.Map.Entry;
 import java.util.concurrent.CompletableFuture;
 import javax.annotation.Nullable;
 import net.minecraft.client.Camera;
@@ -34,11 +35,17 @@
 import org.apache.logging.log4j.MarkerManager;
 
 public class SoundEngine {
    private static final Marker MARKER = MarkerManager.getMarker("SOUNDS");
    private static final Logger LOGGER = LogManager.getLogger();
+   private static final float PITCH_MIN = 0.5F;
+   private static final float PITCH_MAX = 2.0F;
+   private static final float VOLUME_MIN = 0.0F;
+   private static final float VOLUME_MAX = 1.0F;
+   private static final int MIN_SOURCE_LIFETIME = 20;
    private static final Set<ResourceLocation> ONLY_WARN_ONCE = Sets.newHashSet();
+   public static final String MISSING_SOUND = "FOR THE DEBUG!";
    private final SoundManager soundManager;
    private final Options options;
    private boolean loaded;
    private final Library library = new Library();
    private final Listener listener;
@@ -95,10 +102,11 @@
             this.library.init();
             this.listener.reset();
             this.listener.setGain(this.options.getSoundSourceVolume(SoundSource.MASTER));
             CompletableFuture var10000 = this.soundBuffers.preload(this.preloadQueue);
             List var10001 = this.preloadQueue;
+            Objects.requireNonNull(var10001);
             var10000.thenRun(var10001::clear);
             this.loaded = true;
             LOGGER.info(MARKER, "Sound engine started");
          } catch (RuntimeException var2) {
             LOGGER.error(MARKER, "Error starting SoundSystem. Turning off sounds & music", var2);
