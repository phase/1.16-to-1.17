--- net/minecraft/client/MouseHandler.java
+++ net/minecraft/client/MouseHandler.java
@@ -64,11 +64,11 @@
 
             this.activeButton = -1;
          }
 
          boolean[] var8 = new boolean[]{false};
-         if (this.minecraft.overlay == null) {
+         if (this.minecraft.getOverlay() == null) {
             if (this.minecraft.screen == null) {
                if (!this.mouseGrabbed && var6) {
                   this.grabMouse();
                }
             } else {
@@ -84,11 +84,11 @@
                   }, "mouseReleased event handler", this.minecraft.screen.getClass().getCanonicalName());
                }
             }
          }
 
-         if (!var8[0] && (this.minecraft.screen == null || this.minecraft.screen.passEvents) && this.minecraft.overlay == null) {
+         if (!var8[0] && (this.minecraft.screen == null || this.minecraft.screen.passEvents) && this.minecraft.getOverlay() == null) {
             if (var3 == 0) {
                this.isLeftPressed = var6;
             } else if (var3 == 2) {
                this.isMiddlePressed = var6;
             } else if (var3 == 1) {
@@ -109,11 +109,11 @@
    }
 
    private void onScroll(long var1, double var3, double var5) {
       if (var1 == Minecraft.getInstance().getWindow().getWindow()) {
          double var7 = (this.minecraft.options.discreteMouseScroll ? Math.signum(var5) : var5) * this.minecraft.options.mouseWheelSensitivity;
-         if (this.minecraft.overlay == null) {
+         if (this.minecraft.getOverlay() == null) {
             if (this.minecraft.screen != null) {
                double var9 = this.xpos * (double)this.minecraft.getWindow().getGuiScaledWidth() / (double)this.minecraft.getWindow().getScreenWidth();
                double var11 = this.ypos * (double)this.minecraft.getWindow().getGuiScaledHeight() / (double)this.minecraft.getWindow().getScreenHeight();
                this.minecraft.screen.mouseScrolled(var9, var11, var7);
             } else if (this.minecraft.player != null) {
@@ -130,15 +130,15 @@
                this.accumulatedScroll -= (double)var13;
                if (this.minecraft.player.isSpectator()) {
                   if (this.minecraft.gui.getSpectatorGui().isMenuActive()) {
                      this.minecraft.gui.getSpectatorGui().onMouseScrolled((double)(-var13));
                   } else {
-                     float var10 = Mth.clamp(this.minecraft.player.abilities.getFlyingSpeed() + var13 * 0.005F, 0.0F, 0.2F);
-                     this.minecraft.player.abilities.setFlyingSpeed(var10);
+                     float var10 = Mth.clamp(this.minecraft.player.getAbilities().getFlyingSpeed() + var13 * 0.005F, 0.0F, 0.2F);
+                     this.minecraft.player.getAbilities().setFlyingSpeed(var10);
                   }
                } else {
-                  this.minecraft.player.inventory.swapPaint((double)var13);
+                  this.minecraft.player.getInventory().swapPaint((double)var13);
                }
             }
          }
       }
 
@@ -184,11 +184,11 @@
             this.ypos = var5;
             this.ignoreFirstMove = false;
          }
 
          Screen var7 = this.minecraft.screen;
-         if (var7 != null && this.minecraft.overlay == null) {
+         if (var7 != null && this.minecraft.getOverlay() == null) {
             double var8 = var3 * (double)this.minecraft.getWindow().getGuiScaledWidth() / (double)this.minecraft.getWindow().getScreenWidth();
             double var10 = var5 * (double)this.minecraft.getWindow().getGuiScaledHeight() / (double)this.minecraft.getWindow().getScreenHeight();
             Screen.wrapScreenError(() -> {
                var7.mouseMoved(var8, var10);
             }, "mouseMoved event handler", var7.getClass().getCanonicalName());
@@ -218,35 +218,41 @@
       double var1 = Blaze3D.getTime();
       double var3 = var1 - this.lastMouseEventTime;
       this.lastMouseEventTime = var1;
       if (this.isMouseGrabbed() && this.minecraft.isWindowActive()) {
          double var9 = this.minecraft.options.sensitivity * 0.6000000238418579D + 0.20000000298023224D;
-         double var11 = var9 * var9 * var9 * 8.0D;
+         double var11 = var9 * var9 * var9;
+         double var13 = var11 * 8.0D;
          double var5;
          double var7;
          if (this.minecraft.options.smoothCamera) {
-            double var13 = this.smoothTurnX.getNewDeltaValue(this.accumulatedDX * var11, var3 * var11);
-            double var15 = this.smoothTurnY.getNewDeltaValue(this.accumulatedDY * var11, var3 * var11);
-            var5 = var13;
-            var7 = var15;
-         } else {
+            double var15 = this.smoothTurnX.getNewDeltaValue(this.accumulatedDX * var13, var3 * var13);
+            double var17 = this.smoothTurnY.getNewDeltaValue(this.accumulatedDY * var13, var3 * var13);
+            var5 = var15;
+            var7 = var17;
+         } else if (this.minecraft.options.getCameraType().isFirstPerson() && this.minecraft.player.isScoping()) {
             this.smoothTurnX.reset();
             this.smoothTurnY.reset();
             var5 = this.accumulatedDX * var11;
             var7 = this.accumulatedDY * var11;
+         } else {
+            this.smoothTurnX.reset();
+            this.smoothTurnY.reset();
+            var5 = this.accumulatedDX * var13;
+            var7 = this.accumulatedDY * var13;
          }
 
          this.accumulatedDX = 0.0D;
          this.accumulatedDY = 0.0D;
-         byte var17 = 1;
+         byte var19 = 1;
          if (this.minecraft.options.invertYMouse) {
-            var17 = -1;
+            var19 = -1;
          }
 
          this.minecraft.getTutorial().onMouse(var5, var7);
          if (this.minecraft.player != null) {
-            this.minecraft.player.turn(var5, var7 * (double)var17);
+            this.minecraft.player.turn(var5, var7 * (double)var19);
          }
 
       } else {
          this.accumulatedDX = 0.0D;
          this.accumulatedDY = 0.0D;
@@ -255,10 +261,14 @@
 
    public boolean isLeftPressed() {
       return this.isLeftPressed;
    }
 
+   public boolean isMiddlePressed() {
+      return this.isMiddlePressed;
+   }
+
    public boolean isRightPressed() {
       return this.isRightPressed;
    }
 
    public double xpos() {
