--- net/minecraft/gametest/framework/MultipleTestTracker.java
+++ net/minecraft/gametest/framework/MultipleTestTracker.java
@@ -1,16 +1,22 @@
 package net.minecraft.gametest.framework;
 
 import com.google.common.collect.Lists;
 import java.util.Collection;
 import java.util.function.Consumer;
+import java.util.stream.Collectors;
 import javax.annotation.Nullable;
 
 public class MultipleTestTracker {
+   private static final char NOT_STARTED_TEST_CHAR = ' ';
+   private static final char ONGOING_TEST_CHAR = '_';
+   private static final char SUCCESSFUL_TEST_CHAR = '+';
+   private static final char FAILED_OPTIONAL_TEST_CHAR = 'x';
+   private static final char FAILED_REQUIRED_TEST_CHAR = 'X';
    private final Collection<GameTestInfo> tests = Lists.newArrayList();
    @Nullable
-   private Collection<GameTestListener> listeners = Lists.newArrayList();
+   private final Collection<GameTestListener> listeners = Lists.newArrayList();
 
    public MultipleTestTracker() {
    }
 
    public MultipleTestTracker(Collection<GameTestInfo> var1) {
@@ -32,10 +38,13 @@
    public void addFailureListener(final Consumer<GameTestInfo> var1) {
       this.addListener(new GameTestListener() {
          public void testStructureLoaded(GameTestInfo var1x) {
          }
 
+         public void testPassed(GameTestInfo var1x) {
+         }
+
          public void testFailed(GameTestInfo var1x) {
             var1.accept(var1x);
          }
       });
    }
@@ -58,10 +67,18 @@
 
    public boolean hasFailedOptional() {
       return this.getFailedOptionalCount() > 0;
    }
 
+   public Collection<GameTestInfo> getFailedRequired() {
+      return (Collection)this.tests.stream().filter(GameTestInfo::hasFailed).filter(GameTestInfo::isRequired).collect(Collectors.toList());
+   }
+
+   public Collection<GameTestInfo> getFailedOptional() {
+      return (Collection)this.tests.stream().filter(GameTestInfo::hasFailed).filter(GameTestInfo::isOptional).collect(Collectors.toList());
+   }
+
    public int getTotalCount() {
       return this.tests.size();
    }
 
    public boolean isDone() {
