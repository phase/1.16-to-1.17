--- net/minecraft/gametest/framework/StructureUtils.java
+++ net/minecraft/gametest/framework/StructureUtils.java
@@ -16,11 +16,11 @@
 import javax.annotation.Nullable;
 import net.minecraft.commands.arguments.blocks.BlockInput;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Registry;
 import net.minecraft.nbt.CompoundTag;
-import net.minecraft.nbt.TagParser;
+import net.minecraft.nbt.NbtUtils;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.level.ChunkPos;
@@ -36,12 +36,15 @@
 import net.minecraft.world.level.levelgen.structure.templatesystem.StructureManager;
 import net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate;
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.Vec3;
 import org.apache.commons.io.IOUtils;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 
 public class StructureUtils {
+   private static final Logger LOGGER = LogManager.getLogger();
    public static String testStructuresDir = "gameteststructures";
 
    public static Rotation getRotationForRotationSteps(int var0) {
       switch(var0) {
       case 0:
@@ -140,11 +143,11 @@
       var2.clearBlockEvents(var3);
       AABB var4 = new AABB((double)var3.x0, (double)var3.y0, (double)var3.z0, (double)var3.x1, (double)var3.y1, (double)var3.z1);
       List var5 = var2.getEntitiesOfClass(Entity.class, var4, (var0x) -> {
          return !(var0x instanceof Player);
       });
-      var5.forEach(Entity::remove);
+      var5.forEach(Entity::discard);
    }
 
    public static BoundingBox getStructureBoundingBox(BlockPos var0, BlockPos var1, Rotation var2) {
       BlockPos var3 = var0.offset(var1).offset(-1, -1, -1);
       BlockPos var4 = StructureTemplate.transform(var3, Mirror.NONE, var2, var0);
@@ -233,11 +236,11 @@
    @Nullable
    private static CompoundTag tryLoadStructure(Path var0) {
       try {
          BufferedReader var1 = Files.newBufferedReader(var0);
          String var2 = IOUtils.toString(var1);
-         return TagParser.parseTag(var2);
+         return NbtUtils.snbtToStructure(var2);
       } catch (IOException var3) {
          return null;
       } catch (CommandSyntaxException var4) {
          throw new RuntimeException("Error while trying to load structure " + var0, var4);
       }
@@ -246,12 +249,13 @@
    private static void clearBlock(int var0, BlockPos var1, ServerLevel var2) {
       BlockState var3 = null;
       FlatLevelGeneratorSettings var4 = FlatLevelGeneratorSettings.getDefault(var2.registryAccess().registryOrThrow(Registry.BIOME_REGISTRY));
       if (var4 instanceof FlatLevelGeneratorSettings) {
          BlockState[] var5 = var4.getLayers();
-         if (var1.getY() < var0 && var1.getY() <= var5.length) {
-            var3 = var5[var1.getY() - 1];
+         int var6 = var4.getLayerIndex(var1.getY());
+         if (var1.getY() < var0 && var6 > 0 && var6 <= var5.length) {
+            var3 = var5[var6 - 1];
          }
       } else if (var1.getY() == var0 - 1) {
          var3 = var2.getBiome(var1).getGenerationSettings().getSurfaceBuilderConfig().getTopMaterial();
       } else if (var1.getY() < var0 - 1) {
          var3 = var2.getBiome(var1).getGenerationSettings().getSurfaceBuilderConfig().getUnderMaterial();
@@ -259,12 +263,12 @@
 
       if (var3 == null) {
          var3 = Blocks.AIR.defaultBlockState();
       }
 
-      BlockInput var6 = new BlockInput(var3, Collections.emptySet(), (CompoundTag)null);
-      var6.place(var2, var1, 2);
+      BlockInput var7 = new BlockInput(var3, Collections.emptySet(), (CompoundTag)null);
+      var7.place(var2, var1, 2);
       var2.blockUpdated(var1, var3.getBlock());
    }
 
    private static boolean doesStructureContain(BlockPos var0, BlockPos var1, ServerLevel var2) {
       StructureBlockEntity var3 = (StructureBlockEntity)var2.getBlockEntity(var0);
