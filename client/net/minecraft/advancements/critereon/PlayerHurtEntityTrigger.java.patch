--- net/minecraft/advancements/critereon/PlayerHurtEntityTrigger.java
+++ net/minecraft/advancements/critereon/PlayerHurtEntityTrigger.java
@@ -38,14 +38,34 @@
          super(PlayerHurtEntityTrigger.ID, var1);
          this.damage = var2;
          this.entity = var3;
       }
 
+      public static PlayerHurtEntityTrigger.TriggerInstance playerHurtEntity() {
+         return new PlayerHurtEntityTrigger.TriggerInstance(EntityPredicate.Composite.ANY, DamagePredicate.ANY, EntityPredicate.Composite.ANY);
+      }
+
+      public static PlayerHurtEntityTrigger.TriggerInstance playerHurtEntity(DamagePredicate var0) {
+         return new PlayerHurtEntityTrigger.TriggerInstance(EntityPredicate.Composite.ANY, var0, EntityPredicate.Composite.ANY);
+      }
+
       public static PlayerHurtEntityTrigger.TriggerInstance playerHurtEntity(DamagePredicate.Builder var0) {
          return new PlayerHurtEntityTrigger.TriggerInstance(EntityPredicate.Composite.ANY, var0.build(), EntityPredicate.Composite.ANY);
       }
 
+      public static PlayerHurtEntityTrigger.TriggerInstance playerHurtEntity(EntityPredicate var0) {
+         return new PlayerHurtEntityTrigger.TriggerInstance(EntityPredicate.Composite.ANY, DamagePredicate.ANY, EntityPredicate.Composite.wrap(var0));
+      }
+
+      public static PlayerHurtEntityTrigger.TriggerInstance playerHurtEntity(DamagePredicate var0, EntityPredicate var1) {
+         return new PlayerHurtEntityTrigger.TriggerInstance(EntityPredicate.Composite.ANY, var0, EntityPredicate.Composite.wrap(var1));
+      }
+
+      public static PlayerHurtEntityTrigger.TriggerInstance playerHurtEntity(DamagePredicate.Builder var0, EntityPredicate var1) {
+         return new PlayerHurtEntityTrigger.TriggerInstance(EntityPredicate.Composite.ANY, var0.build(), EntityPredicate.Composite.wrap(var1));
+      }
+
       public boolean matches(ServerPlayer var1, LootContext var2, DamageSource var3, float var4, float var5, boolean var6) {
          if (!this.damage.matches(var1, var3, var4, var5, var6)) {
             return false;
          } else {
             return this.entity.matches(var2);
