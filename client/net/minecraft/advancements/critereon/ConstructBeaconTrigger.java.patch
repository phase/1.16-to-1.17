--- net/minecraft/advancements/critereon/ConstructBeaconTrigger.java
+++ net/minecraft/advancements/critereon/ConstructBeaconTrigger.java
@@ -1,11 +1,10 @@
 package net.minecraft.advancements.critereon;
 
 import com.google.gson.JsonObject;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.server.level.ServerPlayer;
-import net.minecraft.world.level.block.entity.BeaconBlockEntity;
 
 public class ConstructBeaconTrigger extends SimpleCriterionTrigger<ConstructBeaconTrigger.TriggerInstance> {
    private static final ResourceLocation ID = new ResourceLocation("construct_beacon");
 
    public ConstructBeaconTrigger() {
@@ -18,11 +17,11 @@
    public ConstructBeaconTrigger.TriggerInstance createInstance(JsonObject var1, EntityPredicate.Composite var2, DeserializationContext var3) {
       MinMaxBounds.Ints var4 = MinMaxBounds.Ints.fromJson(var1.get("level"));
       return new ConstructBeaconTrigger.TriggerInstance(var2, var4);
    }
 
-   public void trigger(ServerPlayer var1, BeaconBlockEntity var2) {
+   public void trigger(ServerPlayer var1, int var2) {
       this.trigger(var1, (var1x) -> {
          return var1x.matches(var2);
       });
    }
 
@@ -36,12 +35,12 @@
 
       public static ConstructBeaconTrigger.TriggerInstance constructedBeacon(MinMaxBounds.Ints var0) {
          return new ConstructBeaconTrigger.TriggerInstance(EntityPredicate.Composite.ANY, var0);
       }
 
-      public boolean matches(BeaconBlockEntity var1) {
-         return this.level.matches(var1.getLevels());
+      public boolean matches(int var1) {
+         return this.level.matches(var1);
       }
 
       public JsonObject serializeToJson(SerializationContext var1) {
          JsonObject var2 = super.serializeToJson(var1);
          var2.add("level", this.level.serializeToJson());
