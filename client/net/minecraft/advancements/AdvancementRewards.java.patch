--- net/minecraft/advancements/AdvancementRewards.java
+++ net/minecraft/advancements/AdvancementRewards.java
@@ -36,10 +36,14 @@
       this.loot = var2;
       this.recipes = var3;
       this.function = var4;
    }
 
+   public ResourceLocation[] getRecipes() {
+      return this.recipes;
+   }
+
    public void grant(ServerPlayer var1) {
       var1.giveExperiencePoints(this.experience);
       LootContext var2 = (new LootContext.Builder(var1.getLevel())).withParameter(LootContextParams.THIS_ENTITY, var1).withParameter(LootContextParams.ORIGIN, var1.position()).withRandom(var1.getRandom()).create(LootContextParamSets.ADVANCEMENT_REWARD);
       boolean var3 = false;
       ResourceLocation[] var4 = this.loot;
@@ -63,11 +67,11 @@
             }
          }
       }
 
       if (var3) {
-         var1.inventoryMenu.broadcastChanges();
+         var1.containerMenu.broadcastChanges();
       }
 
       if (this.recipes.length > 0) {
          var1.awardRecipesByKey(this.recipes);
       }
@@ -77,11 +81,12 @@
          var11.getFunctions().execute(var2x, var1.createCommandSourceStack().withSuppressedOutput().withPermission(2));
       });
    }
 
    public String toString() {
-      return "AdvancementRewards{experience=" + this.experience + ", loot=" + Arrays.toString(this.loot) + ", recipes=" + Arrays.toString(this.recipes) + ", function=" + this.function + '}';
+      int var10000 = this.experience;
+      return "AdvancementRewards{experience=" + var10000 + ", loot=" + Arrays.toString(this.loot) + ", recipes=" + Arrays.toString(this.recipes) + ", function=" + this.function + "}";
    }
 
    public JsonElement serializeToJson() {
       if (this == EMPTY) {
          return JsonNull.INSTANCE;
@@ -177,19 +182,37 @@
       public AdvancementRewards.Builder addExperience(int var1) {
          this.experience += var1;
          return this;
       }
 
+      public static AdvancementRewards.Builder loot(ResourceLocation var0) {
+         return (new AdvancementRewards.Builder()).addLootTable(var0);
+      }
+
+      public AdvancementRewards.Builder addLootTable(ResourceLocation var1) {
+         this.loot.add(var1);
+         return this;
+      }
+
       public static AdvancementRewards.Builder recipe(ResourceLocation var0) {
          return (new AdvancementRewards.Builder()).addRecipe(var0);
       }
 
       public AdvancementRewards.Builder addRecipe(ResourceLocation var1) {
          this.recipes.add(var1);
          return this;
       }
 
+      public static AdvancementRewards.Builder function(ResourceLocation var0) {
+         return (new AdvancementRewards.Builder()).runs(var0);
+      }
+
+      public AdvancementRewards.Builder runs(ResourceLocation var1) {
+         this.function = var1;
+         return this;
+      }
+
       public AdvancementRewards build() {
          return new AdvancementRewards(this.experience, (ResourceLocation[])this.loot.toArray(new ResourceLocation[0]), (ResourceLocation[])this.recipes.toArray(new ResourceLocation[0]), this.function == null ? CommandFunction.CacheableFunction.NONE : new CommandFunction.CacheableFunction(this.function));
       }
    }
 }
