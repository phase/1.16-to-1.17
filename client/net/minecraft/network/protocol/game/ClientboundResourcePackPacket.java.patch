--- net/minecraft/network/protocol/game/ClientboundResourcePackPacket.java
+++ net/minecraft/network/protocol/game/ClientboundResourcePackPacket.java
@@ -1,34 +1,35 @@
 package net.minecraft.network.protocol.game;
 
-import java.io.IOException;
 import net.minecraft.network.FriendlyByteBuf;
 import net.minecraft.network.protocol.Packet;
 
 public class ClientboundResourcePackPacket implements Packet<ClientGamePacketListener> {
-   private String url;
-   private String hash;
+   private final String url;
+   private final String hash;
+   private final boolean required;
 
-   public ClientboundResourcePackPacket() {
-   }
-
-   public ClientboundResourcePackPacket(String var1, String var2) {
-      this.url = var1;
-      this.hash = var2;
+   public ClientboundResourcePackPacket(String var1, String var2, boolean var3) {
       if (var2.length() > 40) {
          throw new IllegalArgumentException("Hash is too long (max 40, was " + var2.length() + ")");
+      } else {
+         this.url = var1;
+         this.hash = var2;
+         this.required = var3;
       }
    }
 
-   public void read(FriendlyByteBuf var1) throws IOException {
-      this.url = var1.readUtf(32767);
+   public ClientboundResourcePackPacket(FriendlyByteBuf var1) {
+      this.url = var1.readUtf();
       this.hash = var1.readUtf(40);
+      this.required = var1.readBoolean();
    }
 
-   public void write(FriendlyByteBuf var1) throws IOException {
+   public void write(FriendlyByteBuf var1) {
       var1.writeUtf(this.url);
       var1.writeUtf(this.hash);
+      var1.writeBoolean(this.required);
    }
 
    public void handle(ClientGamePacketListener var1) {
       var1.handleResourcePack(this);
    }
@@ -38,6 +39,10 @@
    }
 
    public String getHash() {
       return this.hash;
    }
+
+   public boolean isRequired() {
+      return this.required;
+   }
 }
