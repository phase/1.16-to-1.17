--- net/minecraft/network/protocol/game/ClientboundCustomPayloadPacket.java
+++ net/minecraft/network/protocol/game/ClientboundCustomPayloadPacket.java
@@ -1,17 +1,16 @@
 package net.minecraft.network.protocol.game;
 
-import java.io.IOException;
 import net.minecraft.network.FriendlyByteBuf;
 import net.minecraft.network.protocol.Packet;
 import net.minecraft.resources.ResourceLocation;
 
 public class ClientboundCustomPayloadPacket implements Packet<ClientGamePacketListener> {
+   private static final int MAX_PAYLOAD_SIZE = 1048576;
    public static final ResourceLocation BRAND = new ResourceLocation("brand");
    public static final ResourceLocation DEBUG_PATHFINDING_PACKET = new ResourceLocation("debug/path");
    public static final ResourceLocation DEBUG_NEIGHBORSUPDATE_PACKET = new ResourceLocation("debug/neighbors_update");
-   public static final ResourceLocation DEBUG_CAVES_PACKET = new ResourceLocation("debug/caves");
    public static final ResourceLocation DEBUG_STRUCTURES_PACKET = new ResourceLocation("debug/structures");
    public static final ResourceLocation DEBUG_WORLDGENATTEMPT_PACKET = new ResourceLocation("debug/worldgen_attempt");
    public static final ResourceLocation DEBUG_POI_TICKET_COUNT_PACKET = new ResourceLocation("debug/poi_ticket_count");
    public static final ResourceLocation DEBUG_POI_ADDED_PACKET = new ResourceLocation("debug/poi_added");
    public static final ResourceLocation DEBUG_POI_REMOVED_PACKET = new ResourceLocation("debug/poi_removed");
@@ -21,35 +20,34 @@
    public static final ResourceLocation DEBUG_BEE = new ResourceLocation("debug/bee");
    public static final ResourceLocation DEBUG_HIVE = new ResourceLocation("debug/hive");
    public static final ResourceLocation DEBUG_GAME_TEST_ADD_MARKER = new ResourceLocation("debug/game_test_add_marker");
    public static final ResourceLocation DEBUG_GAME_TEST_CLEAR = new ResourceLocation("debug/game_test_clear");
    public static final ResourceLocation DEBUG_RAIDS = new ResourceLocation("debug/raids");
-   private ResourceLocation identifier;
-   private FriendlyByteBuf data;
+   public static final ResourceLocation DEBUG_GAME_EVENT = new ResourceLocation("debug/game_event");
+   public static final ResourceLocation DEBUG_GAME_EVENT_LISTENER = new ResourceLocation("debug/game_event_listeners");
+   private final ResourceLocation identifier;
+   private final FriendlyByteBuf data;
 
-   public ClientboundCustomPayloadPacket() {
-   }
-
    public ClientboundCustomPayloadPacket(ResourceLocation var1, FriendlyByteBuf var2) {
       this.identifier = var1;
       this.data = var2;
       if (var2.writerIndex() > 1048576) {
          throw new IllegalArgumentException("Payload may not be larger than 1048576 bytes");
       }
    }
 
-   public void read(FriendlyByteBuf var1) throws IOException {
+   public ClientboundCustomPayloadPacket(FriendlyByteBuf var1) {
       this.identifier = var1.readResourceLocation();
       int var2 = var1.readableBytes();
       if (var2 >= 0 && var2 <= 1048576) {
          this.data = new FriendlyByteBuf(var1.readBytes(var2));
       } else {
-         throw new IOException("Payload may not be larger than 1048576 bytes");
+         throw new IllegalArgumentException("Payload may not be larger than 1048576 bytes");
       }
    }
 
-   public void write(FriendlyByteBuf var1) throws IOException {
+   public void write(FriendlyByteBuf var1) {
       var1.writeResourceLocation(this.identifier);
       var1.writeBytes(this.data.copy());
    }
 
    public void handle(ClientGamePacketListener var1) {
