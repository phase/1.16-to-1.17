--- net/minecraft/nbt/IntTag.java
+++ net/minecraft/nbt/IntTag.java
@@ -1,12 +1,10 @@
 package net.minecraft.nbt;
 
 import java.io.DataInput;
 import java.io.DataOutput;
 import java.io.IOException;
-import net.minecraft.network.chat.Component;
-import net.minecraft.network.chat.TextComponent;
 
 public class IntTag extends NumericTag {
    public static final TagType<IntTag> TYPE = new TagType<IntTag>() {
       public IntTag load(DataInput var1, int var2, NbtAccounter var3) throws IOException {
          var3.accountBits(96L);
@@ -30,11 +28,11 @@
    private IntTag(int var1) {
       this.data = var1;
    }
 
    public static IntTag valueOf(int var0) {
-      return var0 >= -128 && var0 <= 1024 ? IntTag.Cache.cache[var0 + 128] : new IntTag(var0);
+      return var0 >= -128 && var0 <= 1024 ? IntTag.Cache.cache[var0 - -128] : new IntTag(var0);
    }
 
    public void write(DataOutput var1) throws IOException {
       var1.writeInt(this.data);
    }
@@ -45,14 +43,10 @@
 
    public TagType<IntTag> getType() {
       return TYPE;
    }
 
-   public String toString() {
-      return String.valueOf(this.data);
-   }
-
    public IntTag copy() {
       return this;
    }
 
    public boolean equals(Object var1) {
@@ -65,12 +59,12 @@
 
    public int hashCode() {
       return this.data;
    }
 
-   public Component getPrettyDisplay(String var1, int var2) {
-      return (new TextComponent(String.valueOf(this.data))).withStyle(SYNTAX_HIGHLIGHTING_NUMBER);
+   public void accept(TagVisitor var1) {
+      var1.visitInt(this);
    }
 
    public long getAsLong() {
       return (long)this.data;
    }
